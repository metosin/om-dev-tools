// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__22854__delegate = function (args){
return console.log.apply(console,(function (){var G__22853 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__22853) : cljs.core.into_array.call(null,G__22853));
})());
};
var G__22854 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22855__i = 0, G__22855__a = new Array(arguments.length -  0);
while (G__22855__i < G__22855__a.length) {G__22855__a[G__22855__i] = arguments[G__22855__i + 0]; ++G__22855__i;}
  args = new cljs.core.IndexedSeq(G__22855__a,0);
} 
return G__22854__delegate.call(this,args);};
G__22854.cljs$lang$maxFixedArity = 0;
G__22854.cljs$lang$applyTo = (function (arglist__22856){
var args = cljs.core.seq(arglist__22856);
return G__22854__delegate(args);
});
G__22854.cljs$core$IFn$_invoke$arity$variadic = G__22854__delegate;
return G__22854;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__22858 = x;
return goog.isString(G__22858);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__22860 = x__$1;
return goog.typeOf(G__22860);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3803__auto__ = ty;
if(cljs.core.truth_(and__3803__auto__)){
return ty.cljs$lang$type;
} else {
return and__3803__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__22862 = obj;
return goog.typeOf(G__22862);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__22864 = Symbol;
return goog.typeOf(G__22864);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4702__auto___22866 = len;
var i_22867 = (0);
while(true){
if((i_22867 < n__4702__auto___22866)){
(new_arr[i_22867] = (arr[i_22867]));

var G__22868 = (i_22867 + (1));
i_22867 = G__22868;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__22869 = (i + (1));
i = G__22869;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__22878__delegate = function (array,i,idxs){
var G__22875 = aget;
var G__22876 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__22877 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__22875,G__22876,G__22877) : cljs.core.apply.call(null,G__22875,G__22876,G__22877));
};
var G__22878 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__22879__i = 0, G__22879__a = new Array(arguments.length -  2);
while (G__22879__i < G__22879__a.length) {G__22879__a[G__22879__i] = arguments[G__22879__i + 2]; ++G__22879__i;}
  idxs = new cljs.core.IndexedSeq(G__22879__a,0);
} 
return G__22878__delegate.call(this,array,i,idxs);};
G__22878.cljs$lang$maxFixedArity = 2;
G__22878.cljs$lang$applyTo = (function (arglist__22880){
var array = cljs.core.first(arglist__22880);
arglist__22880 = cljs.core.next(arglist__22880);
var i = cljs.core.first(arglist__22880);
var idxs = cljs.core.rest(arglist__22880);
return G__22878__delegate(array,i,idxs);
});
G__22878.cljs$core$IFn$_invoke$arity$variadic = G__22878__delegate;
return G__22878;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__22881 = null;
if (arguments.length > 2) {
var G__22882__i = 0, G__22882__a = new Array(arguments.length -  2);
while (G__22882__i < G__22882__a.length) {G__22882__a[G__22882__i] = arguments[G__22882__i + 2]; ++G__22882__i;}
G__22881 = new cljs.core.IndexedSeq(G__22882__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__22881);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__22891__delegate = function (array,idx,idx2,idxv){
var G__22887 = aset;
var G__22888 = (array[idx]);
var G__22889 = idx2;
var G__22890 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__22887,G__22888,G__22889,G__22890) : cljs.core.apply.call(null,G__22887,G__22888,G__22889,G__22890));
};
var G__22891 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__22892__i = 0, G__22892__a = new Array(arguments.length -  3);
while (G__22892__i < G__22892__a.length) {G__22892__a[G__22892__i] = arguments[G__22892__i + 3]; ++G__22892__i;}
  idxv = new cljs.core.IndexedSeq(G__22892__a,0);
} 
return G__22891__delegate.call(this,array,idx,idx2,idxv);};
G__22891.cljs$lang$maxFixedArity = 3;
G__22891.cljs$lang$applyTo = (function (arglist__22893){
var array = cljs.core.first(arglist__22893);
arglist__22893 = cljs.core.next(arglist__22893);
var idx = cljs.core.first(arglist__22893);
arglist__22893 = cljs.core.next(arglist__22893);
var idx2 = cljs.core.first(arglist__22893);
var idxv = cljs.core.rest(arglist__22893);
return G__22891__delegate(array,idx,idx2,idxv);
});
G__22891.cljs$core$IFn$_invoke$arity$variadic = G__22891__delegate;
return G__22891;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__22894 = null;
if (arguments.length > 3) {
var G__22895__i = 0, G__22895__a = new Array(arguments.length -  3);
while (G__22895__i < G__22895__a.length) {G__22895__a[G__22895__i] = arguments[G__22895__i + 3]; ++G__22895__i;}
G__22894 = new cljs.core.IndexedSeq(G__22895__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__22894);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__22901 = (function (a,x){
a.push(x);

return a;
});
var G__22902 = [];
var G__22903 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22901,G__22902,G__22903) : cljs.core.reduce.call(null,G__22901,G__22902,G__22903));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__22904__i = 0, G__22904__a = new Array(arguments.length -  2);
while (G__22904__i < G__22904__a.length) {G__22904__a[G__22904__i] = arguments[G__22904__i + 2]; ++G__22904__i;}
  args = new cljs.core.IndexedSeq(G__22904__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__22905){
var obj = cljs.core.first(arglist__22905);
arglist__22905 = cljs.core.next(arglist__22905);
var s = cljs.core.first(arglist__22905);
var args = cljs.core.rest(arglist__22905);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj22907 = {};
return obj22907;
})();


cljs.core.IFn = (function (){var obj22909 = {};
return obj22909;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22955 = x__4459__auto__;
return goog.typeOf(G__22955);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22957 = x__4459__auto__;
return goog.typeOf(G__22957);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22959 = x__4459__auto__;
return goog.typeOf(G__22959);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22961 = x__4459__auto__;
return goog.typeOf(G__22961);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22963 = x__4459__auto__;
return goog.typeOf(G__22963);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22965 = x__4459__auto__;
return goog.typeOf(G__22965);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22967 = x__4459__auto__;
return goog.typeOf(G__22967);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22969 = x__4459__auto__;
return goog.typeOf(G__22969);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22971 = x__4459__auto__;
return goog.typeOf(G__22971);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22973 = x__4459__auto__;
return goog.typeOf(G__22973);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22975 = x__4459__auto__;
return goog.typeOf(G__22975);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22977 = x__4459__auto__;
return goog.typeOf(G__22977);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22979 = x__4459__auto__;
return goog.typeOf(G__22979);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22981 = x__4459__auto__;
return goog.typeOf(G__22981);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22983 = x__4459__auto__;
return goog.typeOf(G__22983);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22985 = x__4459__auto__;
return goog.typeOf(G__22985);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22987 = x__4459__auto__;
return goog.typeOf(G__22987);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22989 = x__4459__auto__;
return goog.typeOf(G__22989);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22991 = x__4459__auto__;
return goog.typeOf(G__22991);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22993 = x__4459__auto__;
return goog.typeOf(G__22993);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22995 = x__4459__auto__;
return goog.typeOf(G__22995);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._invoke[(function (){var G__22997 = x__4459__auto__;
return goog.typeOf(G__22997);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._invoke["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj22999 = {};
return obj22999;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3803__auto__ = value;
if(and__3803__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3803__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4459__auto__ = (((value == null))?null:value);
return (function (){var or__3815__auto__ = (cljs.core._clone[(function (){var G__23003 = x__4459__auto__;
return goog.typeOf(G__23003);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._clone["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj23005 = {};
return obj23005;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._count[(function (){var G__23009 = x__4459__auto__;
return goog.typeOf(G__23009);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._count["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj23011 = {};
return obj23011;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._empty[(function (){var G__23015 = x__4459__auto__;
return goog.typeOf(G__23015);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._empty["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj23017 = {};
return obj23017;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._conj[(function (){var G__23021 = x__4459__auto__;
return goog.typeOf(G__23021);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._conj["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj23023 = {};
return obj23023;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._nth[(function (){var G__23029 = x__4459__auto__;
return goog.typeOf(G__23029);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._nth["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._nth[(function (){var G__23031 = x__4459__auto__;
return goog.typeOf(G__23031);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._nth["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj23033 = {};
return obj23033;
})();


cljs.core.ISeq = (function (){var obj23035 = {};
return obj23035;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._first[(function (){var G__23039 = x__4459__auto__;
return goog.typeOf(G__23039);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._first["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._rest[(function (){var G__23043 = x__4459__auto__;
return goog.typeOf(G__23043);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._rest["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj23045 = {};
return obj23045;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._next[(function (){var G__23049 = x__4459__auto__;
return goog.typeOf(G__23049);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._next["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj23051 = {};
return obj23051;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._lookup[(function (){var G__23057 = x__4459__auto__;
return goog.typeOf(G__23057);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._lookup["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._lookup[(function (){var G__23059 = x__4459__auto__;
return goog.typeOf(G__23059);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._lookup["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj23061 = {};
return obj23061;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__23065 = x__4459__auto__;
return goog.typeOf(G__23065);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._assoc[(function (){var G__23069 = x__4459__auto__;
return goog.typeOf(G__23069);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._assoc["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj23071 = {};
return obj23071;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._dissoc[(function (){var G__23075 = x__4459__auto__;
return goog.typeOf(G__23075);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj23077 = {};
return obj23077;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._key[(function (){var G__23081 = x__4459__auto__;
return goog.typeOf(G__23081);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._key["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._val[(function (){var G__23085 = x__4459__auto__;
return goog.typeOf(G__23085);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._val["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj23087 = {};
return obj23087;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._disjoin[(function (){var G__23091 = x__4459__auto__;
return goog.typeOf(G__23091);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj23093 = {};
return obj23093;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._peek[(function (){var G__23097 = x__4459__auto__;
return goog.typeOf(G__23097);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._peek["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._pop[(function (){var G__23101 = x__4459__auto__;
return goog.typeOf(G__23101);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._pop["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj23103 = {};
return obj23103;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._assoc_n[(function (){var G__23107 = x__4459__auto__;
return goog.typeOf(G__23107);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj23109 = {};
return obj23109;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._deref[(function (){var G__23113 = x__4459__auto__;
return goog.typeOf(G__23113);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._deref["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj23115 = {};
return obj23115;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._deref_with_timeout[(function (){var G__23119 = x__4459__auto__;
return goog.typeOf(G__23119);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj23121 = {};
return obj23121;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._meta[(function (){var G__23125 = x__4459__auto__;
return goog.typeOf(G__23125);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._meta["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj23127 = {};
return obj23127;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._with_meta[(function (){var G__23131 = x__4459__auto__;
return goog.typeOf(G__23131);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj23133 = {};
return obj23133;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._reduce[(function (){var G__23139 = x__4459__auto__;
return goog.typeOf(G__23139);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._reduce["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._reduce[(function (){var G__23141 = x__4459__auto__;
return goog.typeOf(G__23141);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._reduce["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj23143 = {};
return obj23143;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._kv_reduce[(function (){var G__23147 = x__4459__auto__;
return goog.typeOf(G__23147);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj23149 = {};
return obj23149;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._equiv[(function (){var G__23153 = x__4459__auto__;
return goog.typeOf(G__23153);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._equiv["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj23155 = {};
return obj23155;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._hash[(function (){var G__23159 = x__4459__auto__;
return goog.typeOf(G__23159);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._hash["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj23161 = {};
return obj23161;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._seq[(function (){var G__23165 = x__4459__auto__;
return goog.typeOf(G__23165);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._seq["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj23167 = {};
return obj23167;
})();


cljs.core.IList = (function (){var obj23169 = {};
return obj23169;
})();


cljs.core.IRecord = (function (){var obj23171 = {};
return obj23171;
})();


cljs.core.IReversible = (function (){var obj23173 = {};
return obj23173;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._rseq[(function (){var G__23177 = x__4459__auto__;
return goog.typeOf(G__23177);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._rseq["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj23179 = {};
return obj23179;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._sorted_seq[(function (){var G__23183 = x__4459__auto__;
return goog.typeOf(G__23183);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._sorted_seq_from[(function (){var G__23187 = x__4459__auto__;
return goog.typeOf(G__23187);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._entry_key[(function (){var G__23191 = x__4459__auto__;
return goog.typeOf(G__23191);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._comparator[(function (){var G__23195 = x__4459__auto__;
return goog.typeOf(G__23195);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._comparator["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj23197 = {};
return obj23197;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3803__auto__ = writer;
if(and__3803__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3803__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4459__auto__ = (((writer == null))?null:writer);
return (function (){var or__3815__auto__ = (cljs.core._write[(function (){var G__23201 = x__4459__auto__;
return goog.typeOf(G__23201);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._write["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3803__auto__ = writer;
if(and__3803__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3803__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4459__auto__ = (((writer == null))?null:writer);
return (function (){var or__3815__auto__ = (cljs.core._flush[(function (){var G__23205 = x__4459__auto__;
return goog.typeOf(G__23205);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._flush["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj23207 = {};
return obj23207;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._pr_writer[(function (){var G__23211 = x__4459__auto__;
return goog.typeOf(G__23211);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj23213 = {};
return obj23213;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3803__auto__ = d;
if(and__3803__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3803__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4459__auto__ = (((d == null))?null:d);
return (function (){var or__3815__auto__ = (cljs.core._realized_QMARK_[(function (){var G__23217 = x__4459__auto__;
return goog.typeOf(G__23217);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj23219 = {};
return obj23219;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._notify_watches[(function (){var G__23223 = x__4459__auto__;
return goog.typeOf(G__23223);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._add_watch[(function (){var G__23227 = x__4459__auto__;
return goog.typeOf(G__23227);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3803__auto__ = this$;
if(and__3803__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3803__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4459__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3815__auto__ = (cljs.core._remove_watch[(function (){var G__23231 = x__4459__auto__;
return goog.typeOf(G__23231);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj23233 = {};
return obj23233;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._as_transient[(function (){var G__23237 = x__4459__auto__;
return goog.typeOf(G__23237);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj23239 = {};
return obj23239;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3803__auto__ = tcoll;
if(and__3803__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3803__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4459__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3815__auto__ = (cljs.core._conj_BANG_[(function (){var G__23243 = x__4459__auto__;
return goog.typeOf(G__23243);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3803__auto__ = tcoll;
if(and__3803__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3803__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4459__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3815__auto__ = (cljs.core._persistent_BANG_[(function (){var G__23247 = x__4459__auto__;
return goog.typeOf(G__23247);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj23249 = {};
return obj23249;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3803__auto__ = tcoll;
if(and__3803__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3803__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4459__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3815__auto__ = (cljs.core._assoc_BANG_[(function (){var G__23253 = x__4459__auto__;
return goog.typeOf(G__23253);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj23255 = {};
return obj23255;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3803__auto__ = tcoll;
if(and__3803__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3803__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4459__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3815__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__23259 = x__4459__auto__;
return goog.typeOf(G__23259);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj23261 = {};
return obj23261;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3803__auto__ = tcoll;
if(and__3803__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3803__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4459__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3815__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__23265 = x__4459__auto__;
return goog.typeOf(G__23265);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3803__auto__ = tcoll;
if(and__3803__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3803__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4459__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3815__auto__ = (cljs.core._pop_BANG_[(function (){var G__23269 = x__4459__auto__;
return goog.typeOf(G__23269);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj23271 = {};
return obj23271;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3803__auto__ = tcoll;
if(and__3803__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3803__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4459__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3815__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__23275 = x__4459__auto__;
return goog.typeOf(G__23275);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj23277 = {};
return obj23277;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3803__auto__ = x;
if(and__3803__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3803__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4459__auto__ = (((x == null))?null:x);
return (function (){var or__3815__auto__ = (cljs.core._compare[(function (){var G__23281 = x__4459__auto__;
return goog.typeOf(G__23281);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._compare["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj23283 = {};
return obj23283;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._drop_first[(function (){var G__23287 = x__4459__auto__;
return goog.typeOf(G__23287);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj23289 = {};
return obj23289;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._chunked_first[(function (){var G__23293 = x__4459__auto__;
return goog.typeOf(G__23293);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._chunked_rest[(function (){var G__23297 = x__4459__auto__;
return goog.typeOf(G__23297);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj23299 = {};
return obj23299;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._chunked_next[(function (){var G__23303 = x__4459__auto__;
return goog.typeOf(G__23303);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj23305 = {};
return obj23305;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3803__auto__ = x;
if(and__3803__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3803__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4459__auto__ = (((x == null))?null:x);
return (function (){var or__3815__auto__ = (cljs.core._name[(function (){var G__23309 = x__4459__auto__;
return goog.typeOf(G__23309);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._name["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3803__auto__ = x;
if(and__3803__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3803__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4459__auto__ = (((x == null))?null:x);
return (function (){var or__3815__auto__ = (cljs.core._namespace[(function (){var G__23313 = x__4459__auto__;
return goog.typeOf(G__23313);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._namespace["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj23315 = {};
return obj23315;
})();


cljs.core.IReset = (function (){var obj23317 = {};
return obj23317;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._reset_BANG_[(function (){var G__23321 = x__4459__auto__;
return goog.typeOf(G__23321);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj23323 = {};
return obj23323;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._swap_BANG_[(function (){var G__23333 = x__4459__auto__;
return goog.typeOf(G__23333);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._swap_BANG_[(function (){var G__23335 = x__4459__auto__;
return goog.typeOf(G__23335);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._swap_BANG_[(function (){var G__23337 = x__4459__auto__;
return goog.typeOf(G__23337);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._swap_BANG_[(function (){var G__23339 = x__4459__auto__;
return goog.typeOf(G__23339);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj23341 = {};
return obj23341;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3803__auto__ = o;
if(and__3803__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3803__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4459__auto__ = (((o == null))?null:o);
return (function (){var or__3815__auto__ = (cljs.core._vreset_BANG_[(function (){var G__23345 = x__4459__auto__;
return goog.typeOf(G__23345);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj23347 = {};
return obj23347;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3803__auto__ = coll;
if(and__3803__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3803__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4459__auto__ = (((coll == null))?null:coll);
return (function (){var or__3815__auto__ = (cljs.core._iterator[(function (){var G__23351 = x__4459__auto__;
return goog.typeOf(G__23351);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._iterator["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__23354 = (4294967295);
var G__23355 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23354,G__23355) : Math.imul.call(null,G__23354,G__23355));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__23358 = a;
var G__23359 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23358,G__23359) : Math.imul.call(null,G__23358,G__23359));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__23360 = (i + (2));
var G__23361 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__23360;
h1 = G__23361;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj23363 = {};
return obj23363;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__23364 = (i + (1));
var G__23365 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__23364;
hash = G__23365;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj23369 = {};
return obj23369;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__23372 = o;
if(G__23372){
var bit__4489__auto__ = (G__23372.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4489__auto__) || (G__23372.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__23373 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23373) : Math.floor.call(null,G__23373));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3803__auto__ = cljs.core.not(a.ns);
if(and__3803__auto__){
return b.ns;
} else {
return and__3803__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__23380 = a.ns;
var G__23381 = b.ns;
return goog.array.defaultCompare(G__23380,G__23381);
})();
if(((0) === nsc)){
var G__23382 = a.name;
var G__23383 = b.name;
return goog.array.defaultCompare(G__23382,G__23383);
} else {
return nsc;
}
}
} else {
var G__23384 = a.name;
var G__23385 = b.name;
return goog.array.defaultCompare(G__23384,G__23385);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4236__auto__ = self__._hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__23387 = null;
var G__23387__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__23387__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__23387 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__23387__2.call(this,self__,coll);
case 3:
return G__23387__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23387.cljs$core$IFn$_invoke$arity$2 = G__23387__2;
G__23387.cljs$core$IFn$_invoke$arity$3 = G__23387__3;
return G__23387;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args23386){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23386)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__23435 = null;
var G__23435__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__23435__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__23435__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__23435__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__23435__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__23435__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__23435__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__23435__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__23435__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__23435__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__23435__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__23435__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__23435__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__23435__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__23435__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__23435__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__23435__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__23435__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__23435__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__23435__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__23435__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__23435__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23391 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23392 = a;
var G__23393 = b;
var G__23394 = c;
var G__23395 = d;
var G__23396 = e;
var G__23397 = f;
var G__23398 = g;
var G__23399 = h;
var G__23400 = i;
var G__23401 = j;
var G__23402 = k;
var G__23403 = l;
var G__23404 = m;
var G__23405 = n;
var G__23406 = o;
var G__23407 = p;
var G__23408 = q;
var G__23409 = r;
var G__23410 = s;
var G__23411 = t;
var G__23412 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397,G__23398,G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405,G__23406,G__23407,G__23408,G__23409,G__23410,G__23411,G__23412) : cljs.core.apply.call(null,G__23391,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397,G__23398,G__23399,G__23400,G__23401,G__23402,G__23403,G__23404,G__23405,G__23406,G__23407,G__23408,G__23409,G__23410,G__23411,G__23412));
});
G__23435 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23435__1.call(this,self__);
case 2:
return G__23435__2.call(this,self__,a);
case 3:
return G__23435__3.call(this,self__,a,b);
case 4:
return G__23435__4.call(this,self__,a,b,c);
case 5:
return G__23435__5.call(this,self__,a,b,c,d);
case 6:
return G__23435__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23435__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23435__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23435__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23435__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23435__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23435__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23435__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23435__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23435__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23435__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23435__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23435__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23435__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23435__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23435__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23435__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23435.cljs$core$IFn$_invoke$arity$1 = G__23435__1;
G__23435.cljs$core$IFn$_invoke$arity$2 = G__23435__2;
G__23435.cljs$core$IFn$_invoke$arity$3 = G__23435__3;
G__23435.cljs$core$IFn$_invoke$arity$4 = G__23435__4;
G__23435.cljs$core$IFn$_invoke$arity$5 = G__23435__5;
G__23435.cljs$core$IFn$_invoke$arity$6 = G__23435__6;
G__23435.cljs$core$IFn$_invoke$arity$7 = G__23435__7;
G__23435.cljs$core$IFn$_invoke$arity$8 = G__23435__8;
G__23435.cljs$core$IFn$_invoke$arity$9 = G__23435__9;
G__23435.cljs$core$IFn$_invoke$arity$10 = G__23435__10;
G__23435.cljs$core$IFn$_invoke$arity$11 = G__23435__11;
G__23435.cljs$core$IFn$_invoke$arity$12 = G__23435__12;
G__23435.cljs$core$IFn$_invoke$arity$13 = G__23435__13;
G__23435.cljs$core$IFn$_invoke$arity$14 = G__23435__14;
G__23435.cljs$core$IFn$_invoke$arity$15 = G__23435__15;
G__23435.cljs$core$IFn$_invoke$arity$16 = G__23435__16;
G__23435.cljs$core$IFn$_invoke$arity$17 = G__23435__17;
G__23435.cljs$core$IFn$_invoke$arity$18 = G__23435__18;
G__23435.cljs$core$IFn$_invoke$arity$19 = G__23435__19;
G__23435.cljs$core$IFn$_invoke$arity$20 = G__23435__20;
G__23435.cljs$core$IFn$_invoke$arity$21 = G__23435__21;
G__23435.cljs$core$IFn$_invoke$arity$22 = G__23435__22;
return G__23435;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args23390){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23390)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__23413 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23414 = a;
var G__23415 = b;
var G__23416 = c;
var G__23417 = d;
var G__23418 = e;
var G__23419 = f;
var G__23420 = g;
var G__23421 = h;
var G__23422 = i;
var G__23423 = j;
var G__23424 = k;
var G__23425 = l;
var G__23426 = m;
var G__23427 = n;
var G__23428 = o;
var G__23429 = p;
var G__23430 = q;
var G__23431 = r;
var G__23432 = s;
var G__23433 = t;
var G__23434 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420,G__23421,G__23422,G__23423,G__23424,G__23425,G__23426,G__23427,G__23428,G__23429,G__23430,G__23431,G__23432,G__23433,G__23434) : cljs.core.apply.call(null,G__23413,G__23414,G__23415,G__23416,G__23417,G__23418,G__23419,G__23420,G__23421,G__23422,G__23423,G__23424,G__23425,G__23426,G__23427,G__23428,G__23429,G__23430,G__23431,G__23432,G__23433,G__23434));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__23437 = x;
if(G__23437){
var bit__4496__auto__ = null;
if(cljs.core.truth_((function (){var or__3815__auto__ = bit__4496__auto__;
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return G__23437.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__23437.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23437);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23437);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__23439 = value;
if(G__23439){
var bit__4496__auto__ = (G__23439.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4496__auto__) || (G__23439.cljs$core$ICloneable$)){
return true;
} else {
if((!G__23439.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23439);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23439);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23441 = coll;
if(G__23441){
var bit__4489__auto__ = (G__23441.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4489__auto__) || (G__23441.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23443 = coll;
if(G__23443){
var bit__4489__auto__ = (G__23443.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4489__auto__) || (G__23443.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__23445 = coll;
if(G__23445){
var bit__4489__auto__ = (G__23445.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4489__auto__) || (G__23445.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23447 = coll;
if(G__23447){
var bit__4489__auto__ = (G__23447.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4489__auto__) || (G__23447.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__23452__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__23453 = y;
var G__23454 = cljs.core.first(more);
var G__23455 = cljs.core.next(more);
x = G__23453;
y = G__23454;
more = G__23455;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23452 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23456__i = 0, G__23456__a = new Array(arguments.length -  2);
while (G__23456__i < G__23456__a.length) {G__23456__a[G__23456__i] = arguments[G__23456__i + 2]; ++G__23456__i;}
  more = new cljs.core.IndexedSeq(G__23456__a,0);
} 
return G__23452__delegate.call(this,x,y,more);};
G__23452.cljs$lang$maxFixedArity = 2;
G__23452.cljs$lang$applyTo = (function (arglist__23457){
var x = cljs.core.first(arglist__23457);
arglist__23457 = cljs.core.next(arglist__23457);
var y = cljs.core.first(arglist__23457);
var more = cljs.core.rest(arglist__23457);
return G__23452__delegate(x,y,more);
});
G__23452.cljs$core$IFn$_invoke$arity$variadic = G__23452__delegate;
return G__23452;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__23458 = null;
if (arguments.length > 2) {
var G__23459__i = 0, G__23459__a = new Array(arguments.length -  2);
while (G__23459__i < G__23459__a.length) {G__23459__a[G__23459__i] = arguments[G__23459__i + 2]; ++G__23459__i;}
G__23458 = new cljs.core.IndexedSeq(G__23459__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23458);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__23460 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__23460) : cljs.core.es6_iterator_seq.call(null,G__23460));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23461 = (n + (1));
var G__23462 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23463 = cljs.core.next(coll__$1);
n = G__23461;
hash_code = G__23462;
coll__$1 = G__23463;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23464 = (n + (1));
var G__23465 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23466 = cljs.core.next(coll__$1);
n = G__23464;
hash_code = G__23465;
coll__$1 = G__23466;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__23467 = o;
return goog.getUid(G__23467);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__23469 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23469) : cljs.core.deref.call(null,G__23469));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23476 = val;
var G__23477 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23476,G__23477) : f.call(null,G__23476,G__23477));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23482 = nval;
var G__23483 = (n + (1));
val = G__23482;
n = G__23483;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23478 = val__$1;
var G__23479 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23478,G__23479) : f.call(null,G__23478,G__23479));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23484 = nval;
var G__23485 = (n + (1));
val__$1 = G__23484;
n = G__23485;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23480 = val__$1;
var G__23481 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23480,G__23481) : f.call(null,G__23480,G__23481));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23486 = nval;
var G__23487 = (n + (1));
val__$1 = G__23486;
n = G__23487;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23494 = val;
var G__23495 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23494,G__23495) : f.call(null,G__23494,G__23495));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23500 = nval;
var G__23501 = (n + (1));
val = G__23500;
n = G__23501;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23496 = val__$1;
var G__23497 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23496,G__23497) : f.call(null,G__23496,G__23497));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23502 = nval;
var G__23503 = (n + (1));
val__$1 = G__23502;
n = G__23503;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23498 = val__$1;
var G__23499 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23498,G__23499) : f.call(null,G__23498,G__23499));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23504 = nval;
var G__23505 = (n + (1));
val__$1 = G__23504;
n = G__23505;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__23507 = x;
if(G__23507){
var bit__4496__auto__ = (G__23507.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4496__auto__) || (G__23507.cljs$core$ICounted$)){
return true;
} else {
if((!G__23507.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23507);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23507);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__23509 = x;
if(G__23509){
var bit__4496__auto__ = (G__23509.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4496__auto__) || (G__23509.cljs$core$IIndexed$)){
return true;
} else {
if((!G__23509.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23509);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23509);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23510 = coll__$1;
var G__23511 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23510,G__23511) : cljs.core.equiv_sequential.call(null,G__23510,G__23511));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23512 = o;
var G__23513 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23512,G__23513) : cljs.core.cons.call(null,G__23512,G__23513));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23516 = coll__$1;
var G__23517 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23516,G__23517) : cljs.core.equiv_sequential.call(null,G__23516,G__23517));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__23518 = cljs.core.List.EMPTY;
var G__23519 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__23518,G__23519) : cljs.core.with_meta.call(null,G__23518,G__23519));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__23520 = f;
var G__23521 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__23520,G__23521) : cljs.core.seq_reduce.call(null,G__23520,G__23521));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__23522 = f;
var G__23523 = start;
var G__23524 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__23522,G__23523,G__23524) : cljs.core.seq_reduce.call(null,G__23522,G__23523,G__23524));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23525 = o;
var G__23526 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23525,G__23526) : cljs.core.cons.call(null,G__23525,G__23526));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__23527 = sn;
s = G__23527;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__23532__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__23533 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__23534 = cljs.core.first(xs);
var G__23535 = cljs.core.next(xs);
coll = G__23533;
x = G__23534;
xs = G__23535;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__23532 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__23536__i = 0, G__23536__a = new Array(arguments.length -  2);
while (G__23536__i < G__23536__a.length) {G__23536__a[G__23536__i] = arguments[G__23536__i + 2]; ++G__23536__i;}
  xs = new cljs.core.IndexedSeq(G__23536__a,0);
} 
return G__23532__delegate.call(this,coll,x,xs);};
G__23532.cljs$lang$maxFixedArity = 2;
G__23532.cljs$lang$applyTo = (function (arglist__23537){
var coll = cljs.core.first(arglist__23537);
arglist__23537 = cljs.core.next(arglist__23537);
var x = cljs.core.first(arglist__23537);
var xs = cljs.core.rest(arglist__23537);
return G__23532__delegate(coll,x,xs);
});
G__23532.cljs$core$IFn$_invoke$arity$variadic = G__23532__delegate;
return G__23532;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__23538 = null;
if (arguments.length > 2) {
var G__23539__i = 0, G__23539__a = new Array(arguments.length -  2);
while (G__23539__i < G__23539__a.length) {G__23539__a[G__23539__i] = arguments[G__23539__i + 2]; ++G__23539__i;}
G__23538 = new cljs.core.IndexedSeq(G__23539__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__23538);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__23540 = cljs.core.next(s);
var G__23541 = (acc + (1));
s = G__23540;
acc = G__23541;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__23543 = coll;
if(G__23543){
var bit__4489__auto__ = (G__23543.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4489__auto__) || (G__23543.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__23544 = cljs.core.next(coll);
var G__23545 = (n - (1));
coll = G__23544;
n = G__23545;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__23546 = cljs.core.next(coll);
var G__23547 = (n - (1));
var G__23548 = not_found;
coll = G__23546;
n = G__23547;
not_found = G__23548;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__23553 = coll;
if(G__23553){
var bit__4489__auto__ = (G__23553.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4489__auto__) || (G__23553.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23554 = coll;
if(G__23554){
var bit__4496__auto__ = (G__23554.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4496__auto__) || (G__23554.cljs$core$ISeq$)){
return true;
} else {
if((!G__23554.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23554);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23554);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__23555 = coll;
if(G__23555){
var bit__4489__auto__ = (G__23555.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4489__auto__) || (G__23555.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23556 = coll;
if(G__23556){
var bit__4496__auto__ = (G__23556.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4496__auto__) || (G__23556.cljs$core$ISeq$)){
return true;
} else {
if((!G__23556.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23556);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23556);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__23557 = (n__$1 - (1));
var G__23558 = cljs.core.rest(xs);
n__$1 = G__23557;
xs = G__23558;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__23561 = o;
if(G__23561){
var bit__4489__auto__ = (G__23561.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4489__auto__) || (G__23561.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__23562 = o;
if(G__23562){
var bit__4489__auto__ = (G__23562.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4489__auto__) || (G__23562.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__23566__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__23567 = ret;
var G__23568 = cljs.core.first(kvs);
var G__23569 = cljs.core.second(kvs);
var G__23570 = cljs.core.nnext(kvs);
coll = G__23567;
k = G__23568;
v = G__23569;
kvs = G__23570;
continue;
} else {
return ret;
}
break;
}
};
var G__23566 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__23571__i = 0, G__23571__a = new Array(arguments.length -  3);
while (G__23571__i < G__23571__a.length) {G__23571__a[G__23571__i] = arguments[G__23571__i + 3]; ++G__23571__i;}
  kvs = new cljs.core.IndexedSeq(G__23571__a,0);
} 
return G__23566__delegate.call(this,coll,k,v,kvs);};
G__23566.cljs$lang$maxFixedArity = 3;
G__23566.cljs$lang$applyTo = (function (arglist__23572){
var coll = cljs.core.first(arglist__23572);
arglist__23572 = cljs.core.next(arglist__23572);
var k = cljs.core.first(arglist__23572);
arglist__23572 = cljs.core.next(arglist__23572);
var v = cljs.core.first(arglist__23572);
var kvs = cljs.core.rest(arglist__23572);
return G__23566__delegate(coll,k,v,kvs);
});
G__23566.cljs$core$IFn$_invoke$arity$variadic = G__23566__delegate;
return G__23566;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__23573 = null;
if (arguments.length > 3) {
var G__23574__i = 0, G__23574__a = new Array(arguments.length -  3);
while (G__23574__i < G__23574__a.length) {G__23574__a[G__23574__i] = arguments[G__23574__i + 3]; ++G__23574__i;}
G__23573 = new cljs.core.IndexedSeq(G__23574__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__23573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__23577__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__23578 = ret;
var G__23579 = cljs.core.first(ks);
var G__23580 = cljs.core.next(ks);
coll = G__23578;
k = G__23579;
ks = G__23580;
continue;
} else {
return ret;
}
}
break;
}
};
var G__23577 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__23581__i = 0, G__23581__a = new Array(arguments.length -  2);
while (G__23581__i < G__23581__a.length) {G__23581__a[G__23581__i] = arguments[G__23581__i + 2]; ++G__23581__i;}
  ks = new cljs.core.IndexedSeq(G__23581__a,0);
} 
return G__23577__delegate.call(this,coll,k,ks);};
G__23577.cljs$lang$maxFixedArity = 2;
G__23577.cljs$lang$applyTo = (function (arglist__23582){
var coll = cljs.core.first(arglist__23582);
arglist__23582 = cljs.core.next(arglist__23582);
var k = cljs.core.first(arglist__23582);
var ks = cljs.core.rest(arglist__23582);
return G__23577__delegate(coll,k,ks);
});
G__23577.cljs$core$IFn$_invoke$arity$variadic = G__23577__delegate;
return G__23577;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__23583 = null;
if (arguments.length > 2) {
var G__23584__i = 0, G__23584__a = new Array(arguments.length -  2);
while (G__23584__i < G__23584__a.length) {G__23584__a[G__23584__i] = arguments[G__23584__i + 2]; ++G__23584__i;}
G__23583 = new cljs.core.IndexedSeq(G__23584__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__23583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3815__auto__ = (function (){var G__23589 = f;
return goog.isFunction(G__23589);
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var G__23590 = f;
if(G__23590){
var bit__4496__auto__ = null;
if(cljs.core.truth_((function (){var or__3815__auto____$1 = bit__4496__auto__;
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
return G__23590.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__23590.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23590);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23590);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__24056 = null;
var G__24056__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__24056__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23592 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23592) : self__.afn.call(null,G__23592));
});
var G__24056__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23593 = a;
var G__23594 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23593,G__23594) : self__.afn.call(null,G__23593,G__23594));
});
var G__24056__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23595 = a;
var G__23596 = b;
var G__23597 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23595,G__23596,G__23597) : self__.afn.call(null,G__23595,G__23596,G__23597));
});
var G__24056__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23598 = a;
var G__23599 = b;
var G__23600 = c;
var G__23601 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23598,G__23599,G__23600,G__23601) : self__.afn.call(null,G__23598,G__23599,G__23600,G__23601));
});
var G__24056__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23602 = a;
var G__23603 = b;
var G__23604 = c;
var G__23605 = d;
var G__23606 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23602,G__23603,G__23604,G__23605,G__23606) : self__.afn.call(null,G__23602,G__23603,G__23604,G__23605,G__23606));
});
var G__24056__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23607 = a;
var G__23608 = b;
var G__23609 = c;
var G__23610 = d;
var G__23611 = e;
var G__23612 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23607,G__23608,G__23609,G__23610,G__23611,G__23612) : self__.afn.call(null,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612));
});
var G__24056__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23613 = a;
var G__23614 = b;
var G__23615 = c;
var G__23616 = d;
var G__23617 = e;
var G__23618 = f;
var G__23619 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619) : self__.afn.call(null,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619));
});
var G__24056__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23620 = a;
var G__23621 = b;
var G__23622 = c;
var G__23623 = d;
var G__23624 = e;
var G__23625 = f;
var G__23626 = g;
var G__23627 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627) : self__.afn.call(null,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627));
});
var G__24056__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23628 = a;
var G__23629 = b;
var G__23630 = c;
var G__23631 = d;
var G__23632 = e;
var G__23633 = f;
var G__23634 = g;
var G__23635 = h;
var G__23636 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636) : self__.afn.call(null,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635,G__23636));
});
var G__24056__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23637 = a;
var G__23638 = b;
var G__23639 = c;
var G__23640 = d;
var G__23641 = e;
var G__23642 = f;
var G__23643 = g;
var G__23644 = h;
var G__23645 = i;
var G__23646 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646) : self__.afn.call(null,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646));
});
var G__24056__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23647 = a;
var G__23648 = b;
var G__23649 = c;
var G__23650 = d;
var G__23651 = e;
var G__23652 = f;
var G__23653 = g;
var G__23654 = h;
var G__23655 = i;
var G__23656 = j;
var G__23657 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657) : self__.afn.call(null,G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657));
});
var G__24056__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23658 = a;
var G__23659 = b;
var G__23660 = c;
var G__23661 = d;
var G__23662 = e;
var G__23663 = f;
var G__23664 = g;
var G__23665 = h;
var G__23666 = i;
var G__23667 = j;
var G__23668 = k;
var G__23669 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668,G__23669) : self__.afn.call(null,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668,G__23669));
});
var G__24056__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23670 = a;
var G__23671 = b;
var G__23672 = c;
var G__23673 = d;
var G__23674 = e;
var G__23675 = f;
var G__23676 = g;
var G__23677 = h;
var G__23678 = i;
var G__23679 = j;
var G__23680 = k;
var G__23681 = l;
var G__23682 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682) : self__.afn.call(null,G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682));
});
var G__24056__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23683 = a;
var G__23684 = b;
var G__23685 = c;
var G__23686 = d;
var G__23687 = e;
var G__23688 = f;
var G__23689 = g;
var G__23690 = h;
var G__23691 = i;
var G__23692 = j;
var G__23693 = k;
var G__23694 = l;
var G__23695 = m;
var G__23696 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__23683,G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696) : self__.afn.call(null,G__23683,G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696));
});
var G__24056__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23697 = a;
var G__23698 = b;
var G__23699 = c;
var G__23700 = d;
var G__23701 = e;
var G__23702 = f;
var G__23703 = g;
var G__23704 = h;
var G__23705 = i;
var G__23706 = j;
var G__23707 = k;
var G__23708 = l;
var G__23709 = m;
var G__23710 = n;
var G__23711 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708,G__23709,G__23710,G__23711) : self__.afn.call(null,G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708,G__23709,G__23710,G__23711));
});
var G__24056__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23712 = a;
var G__23713 = b;
var G__23714 = c;
var G__23715 = d;
var G__23716 = e;
var G__23717 = f;
var G__23718 = g;
var G__23719 = h;
var G__23720 = i;
var G__23721 = j;
var G__23722 = k;
var G__23723 = l;
var G__23724 = m;
var G__23725 = n;
var G__23726 = o;
var G__23727 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721,G__23722,G__23723,G__23724,G__23725,G__23726,G__23727) : self__.afn.call(null,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721,G__23722,G__23723,G__23724,G__23725,G__23726,G__23727));
});
var G__24056__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23728 = a;
var G__23729 = b;
var G__23730 = c;
var G__23731 = d;
var G__23732 = e;
var G__23733 = f;
var G__23734 = g;
var G__23735 = h;
var G__23736 = i;
var G__23737 = j;
var G__23738 = k;
var G__23739 = l;
var G__23740 = m;
var G__23741 = n;
var G__23742 = o;
var G__23743 = p;
var G__23744 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740,G__23741,G__23742,G__23743,G__23744) : self__.afn.call(null,G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740,G__23741,G__23742,G__23743,G__23744));
});
var G__24056__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23745 = a;
var G__23746 = b;
var G__23747 = c;
var G__23748 = d;
var G__23749 = e;
var G__23750 = f;
var G__23751 = g;
var G__23752 = h;
var G__23753 = i;
var G__23754 = j;
var G__23755 = k;
var G__23756 = l;
var G__23757 = m;
var G__23758 = n;
var G__23759 = o;
var G__23760 = p;
var G__23761 = q;
var G__23762 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762) : self__.afn.call(null,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762));
});
var G__24056__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23763 = a;
var G__23764 = b;
var G__23765 = c;
var G__23766 = d;
var G__23767 = e;
var G__23768 = f;
var G__23769 = g;
var G__23770 = h;
var G__23771 = i;
var G__23772 = j;
var G__23773 = k;
var G__23774 = l;
var G__23775 = m;
var G__23776 = n;
var G__23777 = o;
var G__23778 = p;
var G__23779 = q;
var G__23780 = r;
var G__23781 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781) : self__.afn.call(null,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781));
});
var G__24056__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23782 = a;
var G__23783 = b;
var G__23784 = c;
var G__23785 = d;
var G__23786 = e;
var G__23787 = f;
var G__23788 = g;
var G__23789 = h;
var G__23790 = i;
var G__23791 = j;
var G__23792 = k;
var G__23793 = l;
var G__23794 = m;
var G__23795 = n;
var G__23796 = o;
var G__23797 = p;
var G__23798 = q;
var G__23799 = r;
var G__23800 = s;
var G__23801 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801) : self__.afn.call(null,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801));
});
var G__24056__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23802 = self__.afn;
var G__23803 = a;
var G__23804 = b;
var G__23805 = c;
var G__23806 = d;
var G__23807 = e;
var G__23808 = f;
var G__23809 = g;
var G__23810 = h;
var G__23811 = i;
var G__23812 = j;
var G__23813 = k;
var G__23814 = l;
var G__23815 = m;
var G__23816 = n;
var G__23817 = o;
var G__23818 = p;
var G__23819 = q;
var G__23820 = r;
var G__23821 = s;
var G__23822 = t;
var G__23823 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23802,G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821,G__23822,G__23823) : cljs.core.apply.call(null,G__23802,G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821,G__23822,G__23823));
});
G__24056 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24056__1.call(this,self__);
case 2:
return G__24056__2.call(this,self__,a);
case 3:
return G__24056__3.call(this,self__,a,b);
case 4:
return G__24056__4.call(this,self__,a,b,c);
case 5:
return G__24056__5.call(this,self__,a,b,c,d);
case 6:
return G__24056__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24056__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24056__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24056__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24056__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24056__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24056__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24056__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24056__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24056__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24056__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24056__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24056__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24056__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24056__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24056__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24056__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24056.cljs$core$IFn$_invoke$arity$1 = G__24056__1;
G__24056.cljs$core$IFn$_invoke$arity$2 = G__24056__2;
G__24056.cljs$core$IFn$_invoke$arity$3 = G__24056__3;
G__24056.cljs$core$IFn$_invoke$arity$4 = G__24056__4;
G__24056.cljs$core$IFn$_invoke$arity$5 = G__24056__5;
G__24056.cljs$core$IFn$_invoke$arity$6 = G__24056__6;
G__24056.cljs$core$IFn$_invoke$arity$7 = G__24056__7;
G__24056.cljs$core$IFn$_invoke$arity$8 = G__24056__8;
G__24056.cljs$core$IFn$_invoke$arity$9 = G__24056__9;
G__24056.cljs$core$IFn$_invoke$arity$10 = G__24056__10;
G__24056.cljs$core$IFn$_invoke$arity$11 = G__24056__11;
G__24056.cljs$core$IFn$_invoke$arity$12 = G__24056__12;
G__24056.cljs$core$IFn$_invoke$arity$13 = G__24056__13;
G__24056.cljs$core$IFn$_invoke$arity$14 = G__24056__14;
G__24056.cljs$core$IFn$_invoke$arity$15 = G__24056__15;
G__24056.cljs$core$IFn$_invoke$arity$16 = G__24056__16;
G__24056.cljs$core$IFn$_invoke$arity$17 = G__24056__17;
G__24056.cljs$core$IFn$_invoke$arity$18 = G__24056__18;
G__24056.cljs$core$IFn$_invoke$arity$19 = G__24056__19;
G__24056.cljs$core$IFn$_invoke$arity$20 = G__24056__20;
G__24056.cljs$core$IFn$_invoke$arity$21 = G__24056__21;
G__24056.cljs$core$IFn$_invoke$arity$22 = G__24056__22;
return G__24056;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args23591){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23591)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__23824 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23824) : self__.afn.call(null,G__23824));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__23825 = a;
var G__23826 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23825,G__23826) : self__.afn.call(null,G__23825,G__23826));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__23827 = a;
var G__23828 = b;
var G__23829 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23827,G__23828,G__23829) : self__.afn.call(null,G__23827,G__23828,G__23829));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__23830 = a;
var G__23831 = b;
var G__23832 = c;
var G__23833 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23830,G__23831,G__23832,G__23833) : self__.afn.call(null,G__23830,G__23831,G__23832,G__23833));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__23834 = a;
var G__23835 = b;
var G__23836 = c;
var G__23837 = d;
var G__23838 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23834,G__23835,G__23836,G__23837,G__23838) : self__.afn.call(null,G__23834,G__23835,G__23836,G__23837,G__23838));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__23839 = a;
var G__23840 = b;
var G__23841 = c;
var G__23842 = d;
var G__23843 = e;
var G__23844 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23839,G__23840,G__23841,G__23842,G__23843,G__23844) : self__.afn.call(null,G__23839,G__23840,G__23841,G__23842,G__23843,G__23844));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__23845 = a;
var G__23846 = b;
var G__23847 = c;
var G__23848 = d;
var G__23849 = e;
var G__23850 = f;
var G__23851 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851) : self__.afn.call(null,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__23852 = a;
var G__23853 = b;
var G__23854 = c;
var G__23855 = d;
var G__23856 = e;
var G__23857 = f;
var G__23858 = g;
var G__23859 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23852,G__23853,G__23854,G__23855,G__23856,G__23857,G__23858,G__23859) : self__.afn.call(null,G__23852,G__23853,G__23854,G__23855,G__23856,G__23857,G__23858,G__23859));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__23860 = a;
var G__23861 = b;
var G__23862 = c;
var G__23863 = d;
var G__23864 = e;
var G__23865 = f;
var G__23866 = g;
var G__23867 = h;
var G__23868 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868) : self__.afn.call(null,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__23869 = a;
var G__23870 = b;
var G__23871 = c;
var G__23872 = d;
var G__23873 = e;
var G__23874 = f;
var G__23875 = g;
var G__23876 = h;
var G__23877 = i;
var G__23878 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878) : self__.afn.call(null,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__23879 = a;
var G__23880 = b;
var G__23881 = c;
var G__23882 = d;
var G__23883 = e;
var G__23884 = f;
var G__23885 = g;
var G__23886 = h;
var G__23887 = i;
var G__23888 = j;
var G__23889 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889) : self__.afn.call(null,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__23890 = a;
var G__23891 = b;
var G__23892 = c;
var G__23893 = d;
var G__23894 = e;
var G__23895 = f;
var G__23896 = g;
var G__23897 = h;
var G__23898 = i;
var G__23899 = j;
var G__23900 = k;
var G__23901 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__23890,G__23891,G__23892,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901) : self__.afn.call(null,G__23890,G__23891,G__23892,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__23902 = a;
var G__23903 = b;
var G__23904 = c;
var G__23905 = d;
var G__23906 = e;
var G__23907 = f;
var G__23908 = g;
var G__23909 = h;
var G__23910 = i;
var G__23911 = j;
var G__23912 = k;
var G__23913 = l;
var G__23914 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914) : self__.afn.call(null,G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__23915 = a;
var G__23916 = b;
var G__23917 = c;
var G__23918 = d;
var G__23919 = e;
var G__23920 = f;
var G__23921 = g;
var G__23922 = h;
var G__23923 = i;
var G__23924 = j;
var G__23925 = k;
var G__23926 = l;
var G__23927 = m;
var G__23928 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928) : self__.afn.call(null,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__23929 = a;
var G__23930 = b;
var G__23931 = c;
var G__23932 = d;
var G__23933 = e;
var G__23934 = f;
var G__23935 = g;
var G__23936 = h;
var G__23937 = i;
var G__23938 = j;
var G__23939 = k;
var G__23940 = l;
var G__23941 = m;
var G__23942 = n;
var G__23943 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937,G__23938,G__23939,G__23940,G__23941,G__23942,G__23943) : self__.afn.call(null,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937,G__23938,G__23939,G__23940,G__23941,G__23942,G__23943));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__23944 = a;
var G__23945 = b;
var G__23946 = c;
var G__23947 = d;
var G__23948 = e;
var G__23949 = f;
var G__23950 = g;
var G__23951 = h;
var G__23952 = i;
var G__23953 = j;
var G__23954 = k;
var G__23955 = l;
var G__23956 = m;
var G__23957 = n;
var G__23958 = o;
var G__23959 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956,G__23957,G__23958,G__23959) : self__.afn.call(null,G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956,G__23957,G__23958,G__23959));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__23960 = a;
var G__23961 = b;
var G__23962 = c;
var G__23963 = d;
var G__23964 = e;
var G__23965 = f;
var G__23966 = g;
var G__23967 = h;
var G__23968 = i;
var G__23969 = j;
var G__23970 = k;
var G__23971 = l;
var G__23972 = m;
var G__23973 = n;
var G__23974 = o;
var G__23975 = p;
var G__23976 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970,G__23971,G__23972,G__23973,G__23974,G__23975,G__23976) : self__.afn.call(null,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970,G__23971,G__23972,G__23973,G__23974,G__23975,G__23976));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__23977 = a;
var G__23978 = b;
var G__23979 = c;
var G__23980 = d;
var G__23981 = e;
var G__23982 = f;
var G__23983 = g;
var G__23984 = h;
var G__23985 = i;
var G__23986 = j;
var G__23987 = k;
var G__23988 = l;
var G__23989 = m;
var G__23990 = n;
var G__23991 = o;
var G__23992 = p;
var G__23993 = q;
var G__23994 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985,G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994) : self__.afn.call(null,G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985,G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__23995 = a;
var G__23996 = b;
var G__23997 = c;
var G__23998 = d;
var G__23999 = e;
var G__24000 = f;
var G__24001 = g;
var G__24002 = h;
var G__24003 = i;
var G__24004 = j;
var G__24005 = k;
var G__24006 = l;
var G__24007 = m;
var G__24008 = n;
var G__24009 = o;
var G__24010 = p;
var G__24011 = q;
var G__24012 = r;
var G__24013 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013) : self__.afn.call(null,G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__24014 = a;
var G__24015 = b;
var G__24016 = c;
var G__24017 = d;
var G__24018 = e;
var G__24019 = f;
var G__24020 = g;
var G__24021 = h;
var G__24022 = i;
var G__24023 = j;
var G__24024 = k;
var G__24025 = l;
var G__24026 = m;
var G__24027 = n;
var G__24028 = o;
var G__24029 = p;
var G__24030 = q;
var G__24031 = r;
var G__24032 = s;
var G__24033 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033) : self__.afn.call(null,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24034 = self__.afn;
var G__24035 = a;
var G__24036 = b;
var G__24037 = c;
var G__24038 = d;
var G__24039 = e;
var G__24040 = f;
var G__24041 = g;
var G__24042 = h;
var G__24043 = i;
var G__24044 = j;
var G__24045 = k;
var G__24046 = l;
var G__24047 = m;
var G__24048 = n;
var G__24049 = o;
var G__24050 = p;
var G__24051 = q;
var G__24052 = r;
var G__24053 = s;
var G__24054 = t;
var G__24055 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24034,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041,G__24042,G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055) : cljs.core.apply.call(null,G__24034,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041,G__24042,G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__24060 = o;
if(G__24060){
var bit__4496__auto__ = (G__24060.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4496__auto__) || (G__24060.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__24060.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24060);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24060);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3803__auto__ = !((o == null));
if(and__3803__auto__){
var G__24064 = o;
if(G__24064){
var bit__4496__auto__ = (G__24064.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4496__auto__) || (G__24064.cljs$core$IMeta$)){
return true;
} else {
if((!G__24064.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24064);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24064);
}
} else {
return and__3803__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__24067__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24068 = ret;
var G__24069 = cljs.core.first(ks);
var G__24070 = cljs.core.next(ks);
coll = G__24068;
k = G__24069;
ks = G__24070;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24067 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24071__i = 0, G__24071__a = new Array(arguments.length -  2);
while (G__24071__i < G__24071__a.length) {G__24071__a[G__24071__i] = arguments[G__24071__i + 2]; ++G__24071__i;}
  ks = new cljs.core.IndexedSeq(G__24071__a,0);
} 
return G__24067__delegate.call(this,coll,k,ks);};
G__24067.cljs$lang$maxFixedArity = 2;
G__24067.cljs$lang$applyTo = (function (arglist__24072){
var coll = cljs.core.first(arglist__24072);
arglist__24072 = cljs.core.next(arglist__24072);
var k = cljs.core.first(arglist__24072);
var ks = cljs.core.rest(arglist__24072);
return G__24067__delegate(coll,k,ks);
});
G__24067.cljs$core$IFn$_invoke$arity$variadic = G__24067__delegate;
return G__24067;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__24073 = null;
if (arguments.length > 2) {
var G__24074__i = 0, G__24074__a = new Array(arguments.length -  2);
while (G__24074__i < G__24074__a.length) {G__24074__a[G__24074__i] = arguments[G__24074__i + 2]; ++G__24074__i;}
G__24073 = new cljs.core.IndexedSeq(G__24074__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24073);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24076 = x;
if(G__24076){
var bit__4496__auto__ = (G__24076.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4496__auto__) || (G__24076.cljs$core$ICollection$)){
return true;
} else {
if((!G__24076.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24076);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24076);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24078 = x;
if(G__24078){
var bit__4496__auto__ = (G__24078.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4496__auto__) || (G__24078.cljs$core$ISet$)){
return true;
} else {
if((!G__24078.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24078);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24078);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__24080 = x;
if(G__24080){
var bit__4496__auto__ = (G__24080.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4496__auto__) || (G__24080.cljs$core$IAssociative$)){
return true;
} else {
if((!G__24080.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24080);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24080);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__24082 = x;
if(G__24082){
var bit__4496__auto__ = (G__24082.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4496__auto__) || (G__24082.cljs$core$ISequential$)){
return true;
} else {
if((!G__24082.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24082);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24082);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__24084 = x;
if(G__24084){
var bit__4496__auto__ = (G__24084.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4496__auto__) || (G__24084.cljs$core$ISorted$)){
return true;
} else {
if((!G__24084.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24084);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24084);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__24086 = x;
if(G__24086){
var bit__4496__auto__ = (G__24086.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4496__auto__) || (G__24086.cljs$core$IReduce$)){
return true;
} else {
if((!G__24086.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24086);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24086);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24088 = x;
if(G__24088){
var bit__4496__auto__ = (G__24088.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4496__auto__) || (G__24088.cljs$core$IMap$)){
return true;
} else {
if((!G__24088.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24088);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24088);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__24090 = x;
if(G__24090){
var bit__4496__auto__ = (G__24090.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4496__auto__) || (G__24090.cljs$core$IVector$)){
return true;
} else {
if((!G__24090.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24090);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24090);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__24092 = x;
if(G__24092){
var bit__4489__auto__ = (G__24092.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4489__auto__) || (G__24092.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj24098 = {};
return obj24098;
});
var js_obj__1 = (function() { 
var G__24101__delegate = function (keyvals){
var G__24099 = goog.object.create;
var G__24100 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__24099,G__24100) : cljs.core.apply.call(null,G__24099,G__24100));
};
var G__24101 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24102__i = 0, G__24102__a = new Array(arguments.length -  0);
while (G__24102__i < G__24102__a.length) {G__24102__a[G__24102__i] = arguments[G__24102__i + 0]; ++G__24102__i;}
  keyvals = new cljs.core.IndexedSeq(G__24102__a,0);
} 
return G__24101__delegate.call(this,keyvals);};
G__24101.cljs$lang$maxFixedArity = 0;
G__24101.cljs$lang$applyTo = (function (arglist__24103){
var keyvals = cljs.core.seq(arglist__24103);
return G__24101__delegate(keyvals);
});
G__24101.cljs$core$IFn$_invoke$arity$variadic = G__24101__delegate;
return G__24101;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__24104 = null;
if (arguments.length > 0) {
var G__24105__i = 0, G__24105__a = new Array(arguments.length -  0);
while (G__24105__i < G__24105__a.length) {G__24105__a[G__24105__i] = arguments[G__24105__i + 0]; ++G__24105__i;}
G__24104 = new cljs.core.IndexedSeq(G__24105__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__24104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__24108_24110 = obj;
var G__24109_24111 = ((function (G__24108_24110,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__24108_24110,keys))
;
goog.object.forEach(G__24108_24110,G__24109_24111);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24112 = (i__$1 + (1));
var G__24113 = (j__$1 + (1));
var G__24114 = (len__$1 - (1));
i__$1 = G__24112;
j__$1 = G__24113;
len__$1 = G__24114;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24115 = (i__$1 - (1));
var G__24116 = (j__$1 - (1));
var G__24117 = (len__$1 - (1));
i__$1 = G__24115;
j__$1 = G__24116;
len__$1 = G__24117;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj24119 = {};
return obj24119;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__24121 = s;
if(G__24121){
var bit__4496__auto__ = (G__24121.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4496__auto__) || (G__24121.cljs$core$ISeq$)){
return true;
} else {
if((!G__24121.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24121);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__24123 = s;
if(G__24123){
var bit__4496__auto__ = (G__24123.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4496__auto__) || (G__24123.cljs$core$ISeqable$)){
return true;
} else {
if((!G__24123.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24123);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24123);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3815__auto__ = cljs.core.fn_QMARK_(f);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var G__24127 = f;
if(G__24127){
var bit__4496__auto__ = (G__24127.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4496__auto__) || (G__24127.cljs$core$IFn$)){
return true;
} else {
if((!G__24127.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24127);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24127);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__24140 = n;
return isNaN(G__24140);
})())) && (!((n === Infinity))) && (((function (){var G__24141 = n;
return parseFloat(G__24141);
})() === (function (){var G__24142 = n;
var G__24143 = (10);
return parseInt(G__24142,G__24143);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__24144__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__24145 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__24146 = etc;
s = G__24145;
xs = G__24146;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__24144 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24147__i = 0, G__24147__a = new Array(arguments.length -  2);
while (G__24147__i < G__24147__a.length) {G__24147__a[G__24147__i] = arguments[G__24147__i + 2]; ++G__24147__i;}
  more = new cljs.core.IndexedSeq(G__24147__a,0);
} 
return G__24144__delegate.call(this,x,y,more);};
G__24144.cljs$lang$maxFixedArity = 2;
G__24144.cljs$lang$applyTo = (function (arglist__24148){
var x = cljs.core.first(arglist__24148);
arglist__24148 = cljs.core.next(arglist__24148);
var y = cljs.core.first(arglist__24148);
var more = cljs.core.rest(arglist__24148);
return G__24144__delegate(x,y,more);
});
G__24144.cljs$core$IFn$_invoke$arity$variadic = G__24144__delegate;
return G__24144;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__24149 = null;
if (arguments.length > 2) {
var G__24150__i = 0, G__24150__a = new Array(arguments.length -  2);
while (G__24150__i < G__24150__a.length) {G__24150__a[G__24150__i] = arguments[G__24150__i + 2]; ++G__24150__i;}
G__24149 = new cljs.core.IndexedSeq(G__24150__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24149);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__24154 = x;
if(G__24154){
var bit__4489__auto__ = (G__24154.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4489__auto__) || (G__24154.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__24155 = x;
var G__24156 = y;
return goog.array.defaultCompare(G__24155,G__24156);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__24161 = xs;
var G__24162 = ys;
var G__24163 = len;
var G__24164 = (n + (1));
xs = G__24161;
ys = G__24162;
len = G__24163;
n = G__24164;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__24169 = x;
var G__24170 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24169,G__24170) : f.call(null,G__24169,G__24170));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24171 = y;
var G__24172 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24171,G__24172) : f.call(null,G__24171,G__24172));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__24178 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24178) : cljs.core.to_array.call(null,G__24178));
})();
var G__24179_24181 = a;
var G__24180_24182 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__24179_24181,G__24180_24182);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__24188 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24188) : keyfn.call(null,G__24188));
})(),(function (){var G__24189 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24189) : keyfn.call(null,G__24189));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__24195 = f;
var G__24196 = cljs.core.first(s);
var G__24197 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24195,G__24196,G__24197) : cljs.core.reduce.call(null,G__24195,G__24196,G__24197));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__24198 = val__$1;
var G__24199 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24198,G__24199) : f.call(null,G__24198,G__24199));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24200 = nval;
var G__24201 = cljs.core.next(coll__$1);
val__$1 = G__24200;
coll__$1 = G__24201;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__24205 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24205) : cljs.core.to_array.call(null,G__24205));
})();
var G__24206_24208 = a;
goog.array.shuffle(G__24206_24208);

var G__24207 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__24207) : cljs.core.vec.call(null,G__24207));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__24211 = coll;
if(G__24211){
var bit__4489__auto__ = (G__24211.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4489__auto__) || (G__24211.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__24212 = coll;
if(G__24212){
var bit__4489__auto__ = (G__24212.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4489__auto__) || (G__24212.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__24221 = null;
var G__24221__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__24221__1 = (function (x){
var G__24218 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__24218) : cf.call(null,G__24218));
});
var G__24221__2 = (function (x,y){
var G__24219 = x;
var G__24220 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24219,G__24220) : f.call(null,G__24219,G__24220));
});
G__24221 = function(x,y){
switch(arguments.length){
case 0:
return G__24221__0.call(this);
case 1:
return G__24221__1.call(this,x);
case 2:
return G__24221__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24221.cljs$core$IFn$_invoke$arity$0 = G__24221__0;
G__24221.cljs$core$IFn$_invoke$arity$1 = G__24221__1;
G__24221.cljs$core$IFn$_invoke$arity$2 = G__24221__2;
return G__24221;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__24228 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24228) : xform.call(null,G__24228));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__24229 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__24229) : f__$1.call(null,G__24229));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__24230__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__24230 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24231__i = 0, G__24231__a = new Array(arguments.length -  2);
while (G__24231__i < G__24231__a.length) {G__24231__a[G__24231__i] = arguments[G__24231__i + 2]; ++G__24231__i;}
  more = new cljs.core.IndexedSeq(G__24231__a,0);
} 
return G__24230__delegate.call(this,x,y,more);};
G__24230.cljs$lang$maxFixedArity = 2;
G__24230.cljs$lang$applyTo = (function (arglist__24232){
var x = cljs.core.first(arglist__24232);
arglist__24232 = cljs.core.next(arglist__24232);
var y = cljs.core.first(arglist__24232);
var more = cljs.core.rest(arglist__24232);
return G__24230__delegate(x,y,more);
});
G__24230.cljs$core$IFn$_invoke$arity$variadic = G__24230__delegate;
return G__24230;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__24233 = null;
if (arguments.length > 2) {
var G__24234__i = 0, G__24234__a = new Array(arguments.length -  2);
while (G__24234__i < G__24234__a.length) {G__24234__a[G__24234__i] = arguments[G__24234__i + 2]; ++G__24234__i;}
G__24233 = new cljs.core.IndexedSeq(G__24234__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24233);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__24235__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__24235 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24236__i = 0, G__24236__a = new Array(arguments.length -  2);
while (G__24236__i < G__24236__a.length) {G__24236__a[G__24236__i] = arguments[G__24236__i + 2]; ++G__24236__i;}
  more = new cljs.core.IndexedSeq(G__24236__a,0);
} 
return G__24235__delegate.call(this,x,y,more);};
G__24235.cljs$lang$maxFixedArity = 2;
G__24235.cljs$lang$applyTo = (function (arglist__24237){
var x = cljs.core.first(arglist__24237);
arglist__24237 = cljs.core.next(arglist__24237);
var y = cljs.core.first(arglist__24237);
var more = cljs.core.rest(arglist__24237);
return G__24235__delegate(x,y,more);
});
G__24235.cljs$core$IFn$_invoke$arity$variadic = G__24235__delegate;
return G__24235;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__24238 = null;
if (arguments.length > 2) {
var G__24239__i = 0, G__24239__a = new Array(arguments.length -  2);
while (G__24239__i < G__24239__a.length) {G__24239__a[G__24239__i] = arguments[G__24239__i + 2]; ++G__24239__i;}
G__24238 = new cljs.core.IndexedSeq(G__24239__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24238);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__24240__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__24240 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24241__i = 0, G__24241__a = new Array(arguments.length -  2);
while (G__24241__i < G__24241__a.length) {G__24241__a[G__24241__i] = arguments[G__24241__i + 2]; ++G__24241__i;}
  more = new cljs.core.IndexedSeq(G__24241__a,0);
} 
return G__24240__delegate.call(this,x,y,more);};
G__24240.cljs$lang$maxFixedArity = 2;
G__24240.cljs$lang$applyTo = (function (arglist__24242){
var x = cljs.core.first(arglist__24242);
arglist__24242 = cljs.core.next(arglist__24242);
var y = cljs.core.first(arglist__24242);
var more = cljs.core.rest(arglist__24242);
return G__24240__delegate(x,y,more);
});
G__24240.cljs$core$IFn$_invoke$arity$variadic = G__24240__delegate;
return G__24240;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__24243 = null;
if (arguments.length > 2) {
var G__24244__i = 0, G__24244__a = new Array(arguments.length -  2);
while (G__24244__i < G__24244__a.length) {G__24244__a[G__24244__i] = arguments[G__24244__i + 2]; ++G__24244__i;}
G__24243 = new cljs.core.IndexedSeq(G__24244__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24243);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__24249__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24249 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24250__i = 0, G__24250__a = new Array(arguments.length -  2);
while (G__24250__i < G__24250__a.length) {G__24250__a[G__24250__i] = arguments[G__24250__i + 2]; ++G__24250__i;}
  more = new cljs.core.IndexedSeq(G__24250__a,0);
} 
return G__24249__delegate.call(this,x,y,more);};
G__24249.cljs$lang$maxFixedArity = 2;
G__24249.cljs$lang$applyTo = (function (arglist__24251){
var x = cljs.core.first(arglist__24251);
arglist__24251 = cljs.core.next(arglist__24251);
var y = cljs.core.first(arglist__24251);
var more = cljs.core.rest(arglist__24251);
return G__24249__delegate(x,y,more);
});
G__24249.cljs$core$IFn$_invoke$arity$variadic = G__24249__delegate;
return G__24249;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__24252 = null;
if (arguments.length > 2) {
var G__24253__i = 0, G__24253__a = new Array(arguments.length -  2);
while (G__24253__i < G__24253__a.length) {G__24253__a[G__24253__i] = arguments[G__24253__i + 2]; ++G__24253__i;}
G__24252 = new cljs.core.IndexedSeq(G__24253__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24252);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__24254__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__24255 = y;
var G__24256 = cljs.core.first(more);
var G__24257 = cljs.core.next(more);
x = G__24255;
y = G__24256;
more = G__24257;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24254 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24258__i = 0, G__24258__a = new Array(arguments.length -  2);
while (G__24258__i < G__24258__a.length) {G__24258__a[G__24258__i] = arguments[G__24258__i + 2]; ++G__24258__i;}
  more = new cljs.core.IndexedSeq(G__24258__a,0);
} 
return G__24254__delegate.call(this,x,y,more);};
G__24254.cljs$lang$maxFixedArity = 2;
G__24254.cljs$lang$applyTo = (function (arglist__24259){
var x = cljs.core.first(arglist__24259);
arglist__24259 = cljs.core.next(arglist__24259);
var y = cljs.core.first(arglist__24259);
var more = cljs.core.rest(arglist__24259);
return G__24254__delegate(x,y,more);
});
G__24254.cljs$core$IFn$_invoke$arity$variadic = G__24254__delegate;
return G__24254;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__24260 = null;
if (arguments.length > 2) {
var G__24261__i = 0, G__24261__a = new Array(arguments.length -  2);
while (G__24261__i < G__24261__a.length) {G__24261__a[G__24261__i] = arguments[G__24261__i + 2]; ++G__24261__i;}
G__24260 = new cljs.core.IndexedSeq(G__24261__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__24262__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__24263 = y;
var G__24264 = cljs.core.first(more);
var G__24265 = cljs.core.next(more);
x = G__24263;
y = G__24264;
more = G__24265;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24262 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24266__i = 0, G__24266__a = new Array(arguments.length -  2);
while (G__24266__i < G__24266__a.length) {G__24266__a[G__24266__i] = arguments[G__24266__i + 2]; ++G__24266__i;}
  more = new cljs.core.IndexedSeq(G__24266__a,0);
} 
return G__24262__delegate.call(this,x,y,more);};
G__24262.cljs$lang$maxFixedArity = 2;
G__24262.cljs$lang$applyTo = (function (arglist__24267){
var x = cljs.core.first(arglist__24267);
arglist__24267 = cljs.core.next(arglist__24267);
var y = cljs.core.first(arglist__24267);
var more = cljs.core.rest(arglist__24267);
return G__24262__delegate(x,y,more);
});
G__24262.cljs$core$IFn$_invoke$arity$variadic = G__24262__delegate;
return G__24262;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__24268 = null;
if (arguments.length > 2) {
var G__24269__i = 0, G__24269__a = new Array(arguments.length -  2);
while (G__24269__i < G__24269__a.length) {G__24269__a[G__24269__i] = arguments[G__24269__i + 2]; ++G__24269__i;}
G__24268 = new cljs.core.IndexedSeq(G__24269__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24268);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__24270__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__24271 = y;
var G__24272 = cljs.core.first(more);
var G__24273 = cljs.core.next(more);
x = G__24271;
y = G__24272;
more = G__24273;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24270 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24274__i = 0, G__24274__a = new Array(arguments.length -  2);
while (G__24274__i < G__24274__a.length) {G__24274__a[G__24274__i] = arguments[G__24274__i + 2]; ++G__24274__i;}
  more = new cljs.core.IndexedSeq(G__24274__a,0);
} 
return G__24270__delegate.call(this,x,y,more);};
G__24270.cljs$lang$maxFixedArity = 2;
G__24270.cljs$lang$applyTo = (function (arglist__24275){
var x = cljs.core.first(arglist__24275);
arglist__24275 = cljs.core.next(arglist__24275);
var y = cljs.core.first(arglist__24275);
var more = cljs.core.rest(arglist__24275);
return G__24270__delegate(x,y,more);
});
G__24270.cljs$core$IFn$_invoke$arity$variadic = G__24270__delegate;
return G__24270;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__24276 = null;
if (arguments.length > 2) {
var G__24277__i = 0, G__24277__a = new Array(arguments.length -  2);
while (G__24277__i < G__24277__a.length) {G__24277__a[G__24277__i] = arguments[G__24277__i + 2]; ++G__24277__i;}
G__24276 = new cljs.core.IndexedSeq(G__24277__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24276);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__24278__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__24279 = y;
var G__24280 = cljs.core.first(more);
var G__24281 = cljs.core.next(more);
x = G__24279;
y = G__24280;
more = G__24281;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24278 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24282__i = 0, G__24282__a = new Array(arguments.length -  2);
while (G__24282__i < G__24282__a.length) {G__24282__a[G__24282__i] = arguments[G__24282__i + 2]; ++G__24282__i;}
  more = new cljs.core.IndexedSeq(G__24282__a,0);
} 
return G__24278__delegate.call(this,x,y,more);};
G__24278.cljs$lang$maxFixedArity = 2;
G__24278.cljs$lang$applyTo = (function (arglist__24283){
var x = cljs.core.first(arglist__24283);
arglist__24283 = cljs.core.next(arglist__24283);
var y = cljs.core.first(arglist__24283);
var more = cljs.core.rest(arglist__24283);
return G__24278__delegate(x,y,more);
});
G__24278.cljs$core$IFn$_invoke$arity$variadic = G__24278__delegate;
return G__24278;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__24284 = null;
if (arguments.length > 2) {
var G__24285__i = 0, G__24285__a = new Array(arguments.length -  2);
while (G__24285__i < G__24285__a.length) {G__24285__a[G__24285__i] = arguments[G__24285__i + 2]; ++G__24285__i;}
G__24284 = new cljs.core.IndexedSeq(G__24285__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4132__auto__ = x;
var y__4133__auto__ = y;
return ((x__4132__auto__ > y__4133__auto__) ? x__4132__auto__ : y__4133__auto__);
});
var max__3 = (function() { 
var G__24286__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4132__auto__ = x;
var y__4133__auto__ = y;
return ((x__4132__auto__ > y__4133__auto__) ? x__4132__auto__ : y__4133__auto__);
})(),more);
};
var G__24286 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24287__i = 0, G__24287__a = new Array(arguments.length -  2);
while (G__24287__i < G__24287__a.length) {G__24287__a[G__24287__i] = arguments[G__24287__i + 2]; ++G__24287__i;}
  more = new cljs.core.IndexedSeq(G__24287__a,0);
} 
return G__24286__delegate.call(this,x,y,more);};
G__24286.cljs$lang$maxFixedArity = 2;
G__24286.cljs$lang$applyTo = (function (arglist__24288){
var x = cljs.core.first(arglist__24288);
arglist__24288 = cljs.core.next(arglist__24288);
var y = cljs.core.first(arglist__24288);
var more = cljs.core.rest(arglist__24288);
return G__24286__delegate(x,y,more);
});
G__24286.cljs$core$IFn$_invoke$arity$variadic = G__24286__delegate;
return G__24286;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__24289 = null;
if (arguments.length > 2) {
var G__24290__i = 0, G__24290__a = new Array(arguments.length -  2);
while (G__24290__i < G__24290__a.length) {G__24290__a[G__24290__i] = arguments[G__24290__i + 2]; ++G__24290__i;}
G__24289 = new cljs.core.IndexedSeq(G__24290__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24289);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4139__auto__ = x;
var y__4140__auto__ = y;
return ((x__4139__auto__ < y__4140__auto__) ? x__4139__auto__ : y__4140__auto__);
});
var min__3 = (function() { 
var G__24291__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4139__auto__ = x;
var y__4140__auto__ = y;
return ((x__4139__auto__ < y__4140__auto__) ? x__4139__auto__ : y__4140__auto__);
})(),more);
};
var G__24291 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24292__i = 0, G__24292__a = new Array(arguments.length -  2);
while (G__24292__i < G__24292__a.length) {G__24292__a[G__24292__i] = arguments[G__24292__i + 2]; ++G__24292__i;}
  more = new cljs.core.IndexedSeq(G__24292__a,0);
} 
return G__24291__delegate.call(this,x,y,more);};
G__24291.cljs$lang$maxFixedArity = 2;
G__24291.cljs$lang$applyTo = (function (arglist__24293){
var x = cljs.core.first(arglist__24293);
arglist__24293 = cljs.core.next(arglist__24293);
var y = cljs.core.first(arglist__24293);
var more = cljs.core.rest(arglist__24293);
return G__24291__delegate(x,y,more);
});
G__24291.cljs$core$IFn$_invoke$arity$variadic = G__24291__delegate;
return G__24291;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__24294 = null;
if (arguments.length > 2) {
var G__24295__i = 0, G__24295__a = new Array(arguments.length -  2);
while (G__24295__i < G__24295__a.length) {G__24295__a[G__24295__i] = arguments[G__24295__i + 2]; ++G__24295__i;}
G__24294 = new cljs.core.IndexedSeq(G__24295__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24294);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__24296__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__24296 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24297__i = 0, G__24297__a = new Array(arguments.length -  2);
while (G__24297__i < G__24297__a.length) {G__24297__a[G__24297__i] = arguments[G__24297__i + 2]; ++G__24297__i;}
  more = new cljs.core.IndexedSeq(G__24297__a,0);
} 
return G__24296__delegate.call(this,x,y,more);};
G__24296.cljs$lang$maxFixedArity = 2;
G__24296.cljs$lang$applyTo = (function (arglist__24298){
var x = cljs.core.first(arglist__24298);
arglist__24298 = cljs.core.next(arglist__24298);
var y = cljs.core.first(arglist__24298);
var more = cljs.core.rest(arglist__24298);
return G__24296__delegate(x,y,more);
});
G__24296.cljs$core$IFn$_invoke$arity$variadic = G__24296__delegate;
return G__24296;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__24299 = null;
if (arguments.length > 2) {
var G__24300__i = 0, G__24300__a = new Array(arguments.length -  2);
while (G__24300__i < G__24300__a.length) {G__24300__a[G__24300__i] = arguments[G__24300__i + 2]; ++G__24300__i;}
G__24299 = new cljs.core.IndexedSeq(G__24300__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__24301__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__24301 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24302__i = 0, G__24302__a = new Array(arguments.length -  2);
while (G__24302__i < G__24302__a.length) {G__24302__a[G__24302__i] = arguments[G__24302__i + 2]; ++G__24302__i;}
  more = new cljs.core.IndexedSeq(G__24302__a,0);
} 
return G__24301__delegate.call(this,x,y,more);};
G__24301.cljs$lang$maxFixedArity = 2;
G__24301.cljs$lang$applyTo = (function (arglist__24303){
var x = cljs.core.first(arglist__24303);
arglist__24303 = cljs.core.next(arglist__24303);
var y = cljs.core.first(arglist__24303);
var more = cljs.core.rest(arglist__24303);
return G__24301__delegate(x,y,more);
});
G__24301.cljs$core$IFn$_invoke$arity$variadic = G__24301__delegate;
return G__24301;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__24304 = null;
if (arguments.length > 2) {
var G__24305__i = 0, G__24305__a = new Array(arguments.length -  2);
while (G__24305__i < G__24305__a.length) {G__24305__a[G__24305__i] = arguments[G__24305__i + 2]; ++G__24305__i;}
G__24304 = new cljs.core.IndexedSeq(G__24305__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24304);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__24310__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24310 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24311__i = 0, G__24311__a = new Array(arguments.length -  2);
while (G__24311__i < G__24311__a.length) {G__24311__a[G__24311__i] = arguments[G__24311__i + 2]; ++G__24311__i;}
  more = new cljs.core.IndexedSeq(G__24311__a,0);
} 
return G__24310__delegate.call(this,x,y,more);};
G__24310.cljs$lang$maxFixedArity = 2;
G__24310.cljs$lang$applyTo = (function (arglist__24312){
var x = cljs.core.first(arglist__24312);
arglist__24312 = cljs.core.next(arglist__24312);
var y = cljs.core.first(arglist__24312);
var more = cljs.core.rest(arglist__24312);
return G__24310__delegate(x,y,more);
});
G__24310.cljs$core$IFn$_invoke$arity$variadic = G__24310__delegate;
return G__24310;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__24313 = null;
if (arguments.length > 2) {
var G__24314__i = 0, G__24314__a = new Array(arguments.length -  2);
while (G__24314__i < G__24314__a.length) {G__24314__a[G__24314__i] = arguments[G__24314__i + 2]; ++G__24314__i;}
G__24313 = new cljs.core.IndexedSeq(G__24314__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__24315__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__24315 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24316__i = 0, G__24316__a = new Array(arguments.length -  2);
while (G__24316__i < G__24316__a.length) {G__24316__a[G__24316__i] = arguments[G__24316__i + 2]; ++G__24316__i;}
  more = new cljs.core.IndexedSeq(G__24316__a,0);
} 
return G__24315__delegate.call(this,x,y,more);};
G__24315.cljs$lang$maxFixedArity = 2;
G__24315.cljs$lang$applyTo = (function (arglist__24317){
var x = cljs.core.first(arglist__24317);
arglist__24317 = cljs.core.next(arglist__24317);
var y = cljs.core.first(arglist__24317);
var more = cljs.core.rest(arglist__24317);
return G__24315__delegate(x,y,more);
});
G__24315.cljs$core$IFn$_invoke$arity$variadic = G__24315__delegate;
return G__24315;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__24318 = null;
if (arguments.length > 2) {
var G__24319__i = 0, G__24319__a = new Array(arguments.length -  2);
while (G__24319__i < G__24319__a.length) {G__24319__a[G__24319__i] = arguments[G__24319__i + 2]; ++G__24319__i;}
G__24318 = new cljs.core.IndexedSeq(G__24319__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__24320__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__24320 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24321__i = 0, G__24321__a = new Array(arguments.length -  2);
while (G__24321__i < G__24321__a.length) {G__24321__a[G__24321__i] = arguments[G__24321__i + 2]; ++G__24321__i;}
  more = new cljs.core.IndexedSeq(G__24321__a,0);
} 
return G__24320__delegate.call(this,x,y,more);};
G__24320.cljs$lang$maxFixedArity = 2;
G__24320.cljs$lang$applyTo = (function (arglist__24322){
var x = cljs.core.first(arglist__24322);
arglist__24322 = cljs.core.next(arglist__24322);
var y = cljs.core.first(arglist__24322);
var more = cljs.core.rest(arglist__24322);
return G__24320__delegate(x,y,more);
});
G__24320.cljs$core$IFn$_invoke$arity$variadic = G__24320__delegate;
return G__24320;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__24323 = null;
if (arguments.length > 2) {
var G__24324__i = 0, G__24324__a = new Array(arguments.length -  2);
while (G__24324__i < G__24324__a.length) {G__24324__a[G__24324__i] = arguments[G__24324__i + 2]; ++G__24324__i;}
G__24323 = new cljs.core.IndexedSeq(G__24324__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24323);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__24327 = x;
var G__24328 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__24327,G__24328) : cljs.core.mod.call(null,G__24327,G__24328));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__24329__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__24329 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24330__i = 0, G__24330__a = new Array(arguments.length -  2);
while (G__24330__i < G__24330__a.length) {G__24330__a[G__24330__i] = arguments[G__24330__i + 2]; ++G__24330__i;}
  more = new cljs.core.IndexedSeq(G__24330__a,0);
} 
return G__24329__delegate.call(this,x,y,more);};
G__24329.cljs$lang$maxFixedArity = 2;
G__24329.cljs$lang$applyTo = (function (arglist__24331){
var x = cljs.core.first(arglist__24331);
arglist__24331 = cljs.core.next(arglist__24331);
var y = cljs.core.first(arglist__24331);
var more = cljs.core.rest(arglist__24331);
return G__24329__delegate(x,y,more);
});
G__24329.cljs$core$IFn$_invoke$arity$variadic = G__24329__delegate;
return G__24329;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__24332 = null;
if (arguments.length > 2) {
var G__24333__i = 0, G__24333__a = new Array(arguments.length -  2);
while (G__24333__i < G__24333__a.length) {G__24333__a[G__24333__i] = arguments[G__24333__i + 2]; ++G__24333__i;}
G__24332 = new cljs.core.IndexedSeq(G__24333__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24332);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__24334__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__24334 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24335__i = 0, G__24335__a = new Array(arguments.length -  2);
while (G__24335__i < G__24335__a.length) {G__24335__a[G__24335__i] = arguments[G__24335__i + 2]; ++G__24335__i;}
  more = new cljs.core.IndexedSeq(G__24335__a,0);
} 
return G__24334__delegate.call(this,x,y,more);};
G__24334.cljs$lang$maxFixedArity = 2;
G__24334.cljs$lang$applyTo = (function (arglist__24336){
var x = cljs.core.first(arglist__24336);
arglist__24336 = cljs.core.next(arglist__24336);
var y = cljs.core.first(arglist__24336);
var more = cljs.core.rest(arglist__24336);
return G__24334__delegate(x,y,more);
});
G__24334.cljs$core$IFn$_invoke$arity$variadic = G__24334__delegate;
return G__24334;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__24337 = null;
if (arguments.length > 2) {
var G__24338__i = 0, G__24338__a = new Array(arguments.length -  2);
while (G__24338__i < G__24338__a.length) {G__24338__a[G__24338__i] = arguments[G__24338__i + 2]; ++G__24338__i;}
G__24337 = new cljs.core.IndexedSeq(G__24338__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__24341 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24341) : Math.floor.call(null,G__24341));
} else {
var G__24342 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24342) : Math.ceil.call(null,G__24342));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__24343__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__24343 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24344__i = 0, G__24344__a = new Array(arguments.length -  2);
while (G__24344__i < G__24344__a.length) {G__24344__a[G__24344__i] = arguments[G__24344__i + 2]; ++G__24344__i;}
  more = new cljs.core.IndexedSeq(G__24344__a,0);
} 
return G__24343__delegate.call(this,x,y,more);};
G__24343.cljs$lang$maxFixedArity = 2;
G__24343.cljs$lang$applyTo = (function (arglist__24345){
var x = cljs.core.first(arglist__24345);
arglist__24345 = cljs.core.next(arglist__24345);
var y = cljs.core.first(arglist__24345);
var more = cljs.core.rest(arglist__24345);
return G__24343__delegate(x,y,more);
});
G__24343.cljs$core$IFn$_invoke$arity$variadic = G__24343__delegate;
return G__24343;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__24346 = null;
if (arguments.length > 2) {
var G__24347__i = 0, G__24347__a = new Array(arguments.length -  2);
while (G__24347__i < G__24347__a.length) {G__24347__a[G__24347__i] = arguments[G__24347__i + 2]; ++G__24347__i;}
G__24346 = new cljs.core.IndexedSeq(G__24347__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24346);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__24348__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__24348 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24349__i = 0, G__24349__a = new Array(arguments.length -  2);
while (G__24349__i < G__24349__a.length) {G__24349__a[G__24349__i] = arguments[G__24349__i + 2]; ++G__24349__i;}
  more = new cljs.core.IndexedSeq(G__24349__a,0);
} 
return G__24348__delegate.call(this,x,y,more);};
G__24348.cljs$lang$maxFixedArity = 2;
G__24348.cljs$lang$applyTo = (function (arglist__24350){
var x = cljs.core.first(arglist__24350);
arglist__24350 = cljs.core.next(arglist__24350);
var y = cljs.core.first(arglist__24350);
var more = cljs.core.rest(arglist__24350);
return G__24348__delegate(x,y,more);
});
G__24348.cljs$core$IFn$_invoke$arity$variadic = G__24348__delegate;
return G__24348;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__24351 = null;
if (arguments.length > 2) {
var G__24352__i = 0, G__24352__a = new Array(arguments.length -  2);
while (G__24352__i < G__24352__a.length) {G__24352__a[G__24352__i] = arguments[G__24352__i + 2]; ++G__24352__i;}
G__24351 = new cljs.core.IndexedSeq(G__24352__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__24353__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__24353 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24354__i = 0, G__24354__a = new Array(arguments.length -  2);
while (G__24354__i < G__24354__a.length) {G__24354__a[G__24354__i] = arguments[G__24354__i + 2]; ++G__24354__i;}
  more = new cljs.core.IndexedSeq(G__24354__a,0);
} 
return G__24353__delegate.call(this,x,y,more);};
G__24353.cljs$lang$maxFixedArity = 2;
G__24353.cljs$lang$applyTo = (function (arglist__24355){
var x = cljs.core.first(arglist__24355);
arglist__24355 = cljs.core.next(arglist__24355);
var y = cljs.core.first(arglist__24355);
var more = cljs.core.rest(arglist__24355);
return G__24353__delegate(x,y,more);
});
G__24353.cljs$core$IFn$_invoke$arity$variadic = G__24353__delegate;
return G__24353;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__24356 = null;
if (arguments.length > 2) {
var G__24357__i = 0, G__24357__a = new Array(arguments.length -  2);
while (G__24357__i < G__24357__a.length) {G__24357__a[G__24357__i] = arguments[G__24357__i + 2]; ++G__24357__i;}
G__24356 = new cljs.core.IndexedSeq(G__24357__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__24358__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__24358 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24359__i = 0, G__24359__a = new Array(arguments.length -  2);
while (G__24359__i < G__24359__a.length) {G__24359__a[G__24359__i] = arguments[G__24359__i + 2]; ++G__24359__i;}
  more = new cljs.core.IndexedSeq(G__24359__a,0);
} 
return G__24358__delegate.call(this,x,y,more);};
G__24358.cljs$lang$maxFixedArity = 2;
G__24358.cljs$lang$applyTo = (function (arglist__24360){
var x = cljs.core.first(arglist__24360);
arglist__24360 = cljs.core.next(arglist__24360);
var y = cljs.core.first(arglist__24360);
var more = cljs.core.rest(arglist__24360);
return G__24358__delegate(x,y,more);
});
G__24358.cljs$core$IFn$_invoke$arity$variadic = G__24358__delegate;
return G__24358;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__24361 = null;
if (arguments.length > 2) {
var G__24362__i = 0, G__24362__a = new Array(arguments.length -  2);
while (G__24362__i < G__24362__a.length) {G__24362__a[G__24362__i] = arguments[G__24362__i + 2]; ++G__24362__i;}
G__24361 = new cljs.core.IndexedSeq(G__24362__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24361);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__24367__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24368 = y;
var G__24369 = cljs.core.first(more);
var G__24370 = cljs.core.next(more);
x = G__24368;
y = G__24369;
more = G__24370;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24367 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24371__i = 0, G__24371__a = new Array(arguments.length -  2);
while (G__24371__i < G__24371__a.length) {G__24371__a[G__24371__i] = arguments[G__24371__i + 2]; ++G__24371__i;}
  more = new cljs.core.IndexedSeq(G__24371__a,0);
} 
return G__24367__delegate.call(this,x,y,more);};
G__24367.cljs$lang$maxFixedArity = 2;
G__24367.cljs$lang$applyTo = (function (arglist__24372){
var x = cljs.core.first(arglist__24372);
arglist__24372 = cljs.core.next(arglist__24372);
var y = cljs.core.first(arglist__24372);
var more = cljs.core.rest(arglist__24372);
return G__24367__delegate(x,y,more);
});
G__24367.cljs$core$IFn$_invoke$arity$variadic = G__24367__delegate;
return G__24367;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__24373 = null;
if (arguments.length > 2) {
var G__24374__i = 0, G__24374__a = new Array(arguments.length -  2);
while (G__24374__i < G__24374__a.length) {G__24374__a[G__24374__i] = arguments[G__24374__i + 2]; ++G__24374__i;}
G__24373 = new cljs.core.IndexedSeq(G__24374__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24373);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__24375 = (n__$1 - (1));
var G__24376 = cljs.core.next(xs);
n__$1 = G__24375;
xs = G__24376;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__24380 = x;
return goog.string.buildString(G__24380);
}
});
var str__2 = (function() { 
var G__24381__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__24382 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__24383 = cljs.core.next(more);
sb = G__24382;
more = G__24383;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__24381 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__24384__i = 0, G__24384__a = new Array(arguments.length -  1);
while (G__24384__i < G__24384__a.length) {G__24384__a[G__24384__i] = arguments[G__24384__i + 1]; ++G__24384__i;}
  ys = new cljs.core.IndexedSeq(G__24384__a,0);
} 
return G__24381__delegate.call(this,x,ys);};
G__24381.cljs$lang$maxFixedArity = 1;
G__24381.cljs$lang$applyTo = (function (arglist__24385){
var x = cljs.core.first(arglist__24385);
var ys = cljs.core.rest(arglist__24385);
return G__24381__delegate(x,ys);
});
G__24381.cljs$core$IFn$_invoke$arity$variadic = G__24381__delegate;
return G__24381;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__24386 = null;
if (arguments.length > 1) {
var G__24387__i = 0, G__24387__a = new Array(arguments.length -  1);
while (G__24387__i < G__24387__a.length) {G__24387__a[G__24387__i] = arguments[G__24387__i + 1]; ++G__24387__i;}
G__24386 = new cljs.core.IndexedSeq(G__24387__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24386);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__24388 = cljs.core.next(xs);
var G__24389 = cljs.core.next(ys);
xs = G__24388;
ys = G__24389;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__24390 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__24391 = cljs.core.next(s);
res = G__24390;
s = G__24391;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__24396 = ((h + (cljs.core.hash((function (){var G__24394 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24394) : cljs.core.key.call(null,G__24394));
})()) ^ cljs.core.hash((function (){var G__24395 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24395) : cljs.core.val.call(null,G__24395));
})()))) % (4503599627370496));
var G__24397 = cljs.core.next(s);
h = G__24396;
s = G__24397;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__24398 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__24399 = cljs.core.next(s__$1);
h = G__24398;
s__$1 = G__24399;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__24410_24420 = cljs.core.seq(fn_map);
var chunk__24411_24421 = null;
var count__24412_24422 = (0);
var i__24413_24423 = (0);
while(true){
if((i__24413_24423 < count__24412_24422)){
var vec__24414_24424 = chunk__24411_24421.cljs$core$IIndexed$_nth$arity$2(null,i__24413_24423);
var key_name_24425 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24414_24424,(0),null);
var f_24426 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24414_24424,(1),null);
var str_name_24427 = (function (){var G__24415 = key_name_24425;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24415) : cljs.core.name.call(null,G__24415));
})();
(obj[str_name_24427] = f_24426);

var G__24428 = seq__24410_24420;
var G__24429 = chunk__24411_24421;
var G__24430 = count__24412_24422;
var G__24431 = (i__24413_24423 + (1));
seq__24410_24420 = G__24428;
chunk__24411_24421 = G__24429;
count__24412_24422 = G__24430;
i__24413_24423 = G__24431;
continue;
} else {
var temp__4126__auto___24432 = cljs.core.seq(seq__24410_24420);
if(temp__4126__auto___24432){
var seq__24410_24433__$1 = temp__4126__auto___24432;
if(cljs.core.chunked_seq_QMARK_(seq__24410_24433__$1)){
var c__4602__auto___24434 = (function (){var G__24416 = seq__24410_24433__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__24416) : cljs.core.chunk_first.call(null,G__24416));
})();
var G__24435 = (function (){var G__24417 = seq__24410_24433__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__24417) : cljs.core.chunk_rest.call(null,G__24417));
})();
var G__24436 = c__4602__auto___24434;
var G__24437 = cljs.core.count(c__4602__auto___24434);
var G__24438 = (0);
seq__24410_24420 = G__24435;
chunk__24411_24421 = G__24436;
count__24412_24422 = G__24437;
i__24413_24423 = G__24438;
continue;
} else {
var vec__24418_24439 = cljs.core.first(seq__24410_24433__$1);
var key_name_24440 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24418_24439,(0),null);
var f_24441 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24418_24439,(1),null);
var str_name_24442 = (function (){var G__24419 = key_name_24440;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24419) : cljs.core.name.call(null,G__24419));
})();
(obj[str_name_24442] = f_24441);

var G__24443 = cljs.core.next(seq__24410_24433__$1);
var G__24444 = null;
var G__24445 = (0);
var G__24446 = (0);
seq__24410_24420 = G__24443;
chunk__24411_24421 = G__24444;
count__24412_24422 = G__24445;
i__24413_24423 = G__24446;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__24448 = coll;
if(G__24448){
var bit__4496__auto__ = (G__24448.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4496__auto__) || (G__24448.cljs$core$IReversible$)){
return true;
} else {
if((!G__24448.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24448);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24448);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__24449 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__24449;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__24450 = (i - (1));
var G__24451 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__24450;
r = G__24451;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__24452__i = 0, G__24452__a = new Array(arguments.length -  0);
while (G__24452__i < G__24452__a.length) {G__24452__a[G__24452__i] = arguments[G__24452__i + 0]; ++G__24452__i;}
  xs = new cljs.core.IndexedSeq(G__24452__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__24453){
var xs = cljs.core.seq(arglist__24453);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3815__auto__ = (coll == null);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var G__24457 = coll;
if(G__24457){
var bit__4489__auto__ = (G__24457.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4489__auto__) || (G__24457.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__24459 = x;
if(G__24459){
var bit__4496__auto__ = (G__24459.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4496__auto__) || (G__24459.cljs$core$IList$)){
return true;
} else {
if((!G__24459.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24459);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24459);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3803__auto__ = cljs.core.not(a.ns);
if(and__3803__auto__){
return b.ns;
} else {
return and__3803__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24466 = a.ns;
var G__24467 = b.ns;
return goog.array.defaultCompare(G__24466,G__24467);
})();
if(((0) === nsc)){
var G__24468 = a.name;
var G__24469 = b.name;
return goog.array.defaultCompare(G__24468,G__24469);
} else {
return nsc;
}
}
} else {
var G__24470 = a.name;
var G__24471 = b.name;
return goog.array.defaultCompare(G__24470,G__24471);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4236__auto__ = self__._hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__24473 = null;
var G__24473__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__24473__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__24473 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24473__2.call(this,self__,coll);
case 3:
return G__24473__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24473.cljs$core$IFn$_invoke$arity$2 = G__24473__2;
G__24473.cljs$core$IFn$_invoke$arity$3 = G__24473__3;
return G__24473;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args24472){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24472)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__24475 = x;
if(G__24475){
var bit__4489__auto__ = (G__24475.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4489__auto__) || (G__24475.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__24477 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24477) : cljs.core.name.call(null,G__24477));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__24478 = ls.sval();
ls = G__24478;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__24480 = s;
if(G__24480){
var bit__4489__auto__ = (G__24480.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4489__auto__) || (G__24480.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__24481 = cljs.core.next(s__$1);
s__$1 = G__24481;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_24482 = (0);
var xs_24483 = cljs.core.seq(coll);
while(true){
if(xs_24483){
(ret[i_24482] = cljs.core.to_array(cljs.core.first(xs_24483)));

var G__24484 = (i_24482 + (1));
var G__24485 = cljs.core.next(xs_24483);
i_24482 = G__24484;
xs_24483 = G__24485;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24488 = (i + (1));
var G__24489 = cljs.core.next(s__$1);
i = G__24488;
s__$1 = G__24489;
continue;
} else {
return a;
}
break;
}
} else {
var n__4702__auto___24490 = size;
var i_24491 = (0);
while(true){
if((i_24491 < n__4702__auto___24490)){
(a[i_24491] = init_val_or_seq);

var G__24492 = (i_24491 + (1));
i_24491 = G__24492;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24495 = (i + (1));
var G__24496 = cljs.core.next(s__$1);
i = G__24495;
s__$1 = G__24496;
continue;
} else {
return a;
}
break;
}
} else {
var n__4702__auto___24497 = size;
var i_24498 = (0);
while(true){
if((i_24498 < n__4702__auto___24497)){
(a[i_24498] = init_val_or_seq);

var G__24499 = (i_24498 + (1));
i_24498 = G__24499;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24502 = (i + (1));
var G__24503 = cljs.core.next(s__$1);
i = G__24502;
s__$1 = G__24503;
continue;
} else {
return a;
}
break;
}
} else {
var n__4702__auto___24504 = size;
var i_24505 = (0);
while(true){
if((i_24505 < n__4702__auto___24504)){
(a[i_24505] = init_val_or_seq);

var G__24506 = (i_24505 + (1));
i_24505 = G__24506;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24509 = (i + (1));
var G__24510 = cljs.core.next(s__$1);
i = G__24509;
s__$1 = G__24510;
continue;
} else {
return a;
}
break;
}
} else {
var n__4702__auto___24511 = size;
var i_24512 = (0);
while(true){
if((i_24512 < n__4702__auto___24511)){
(a[i_24512] = init_val_or_seq);

var G__24513 = (i_24512 + (1));
i_24512 = G__24513;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__24514 = cljs.core.next(s__$1);
var G__24515 = (i - (1));
var G__24516 = (sum + (1));
s__$1 = G__24514;
i = G__24515;
sum = G__24516;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__24536__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__24536 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__24537__i = 0, G__24537__a = new Array(arguments.length -  2);
while (G__24537__i < G__24537__a.length) {G__24537__a[G__24537__i] = arguments[G__24537__i + 2]; ++G__24537__i;}
  zs = new cljs.core.IndexedSeq(G__24537__a,0);
} 
return G__24536__delegate.call(this,x,y,zs);};
G__24536.cljs$lang$maxFixedArity = 2;
G__24536.cljs$lang$applyTo = (function (arglist__24538){
var x = cljs.core.first(arglist__24538);
arglist__24538 = cljs.core.next(arglist__24538);
var y = cljs.core.first(arglist__24538);
var zs = cljs.core.rest(arglist__24538);
return G__24536__delegate(x,y,zs);
});
G__24536.cljs$core$IFn$_invoke$arity$variadic = G__24536__delegate;
return G__24536;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__24539 = null;
if (arguments.length > 2) {
var G__24540__i = 0, G__24540__a = new Array(arguments.length -  2);
while (G__24540__i < G__24540__a.length) {G__24540__a[G__24540__i] = arguments[G__24540__i + 2]; ++G__24540__i;}
G__24539 = new cljs.core.IndexedSeq(G__24540__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__24541__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__24541 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__24542__i = 0, G__24542__a = new Array(arguments.length -  4);
while (G__24542__i < G__24542__a.length) {G__24542__a[G__24542__i] = arguments[G__24542__i + 4]; ++G__24542__i;}
  more = new cljs.core.IndexedSeq(G__24542__a,0);
} 
return G__24541__delegate.call(this,a,b,c,d,more);};
G__24541.cljs$lang$maxFixedArity = 4;
G__24541.cljs$lang$applyTo = (function (arglist__24543){
var a = cljs.core.first(arglist__24543);
arglist__24543 = cljs.core.next(arglist__24543);
var b = cljs.core.first(arglist__24543);
arglist__24543 = cljs.core.next(arglist__24543);
var c = cljs.core.first(arglist__24543);
arglist__24543 = cljs.core.next(arglist__24543);
var d = cljs.core.first(arglist__24543);
var more = cljs.core.rest(arglist__24543);
return G__24541__delegate(a,b,c,d,more);
});
G__24541.cljs$core$IFn$_invoke$arity$variadic = G__24541__delegate;
return G__24541;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__24544 = null;
if (arguments.length > 4) {
var G__24545__i = 0, G__24545__a = new Array(arguments.length -  4);
while (G__24545__i < G__24545__a.length) {G__24545__a[G__24545__i] = arguments[G__24545__i + 4]; ++G__24545__i;}
G__24544 = new cljs.core.IndexedSeq(G__24545__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__24544);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__24546__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24547 = ntcoll;
var G__24548 = cljs.core.first(vals);
var G__24549 = cljs.core.next(vals);
tcoll = G__24547;
val = G__24548;
vals = G__24549;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24546 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24550__i = 0, G__24550__a = new Array(arguments.length -  2);
while (G__24550__i < G__24550__a.length) {G__24550__a[G__24550__i] = arguments[G__24550__i + 2]; ++G__24550__i;}
  vals = new cljs.core.IndexedSeq(G__24550__a,0);
} 
return G__24546__delegate.call(this,tcoll,val,vals);};
G__24546.cljs$lang$maxFixedArity = 2;
G__24546.cljs$lang$applyTo = (function (arglist__24551){
var tcoll = cljs.core.first(arglist__24551);
arglist__24551 = cljs.core.next(arglist__24551);
var val = cljs.core.first(arglist__24551);
var vals = cljs.core.rest(arglist__24551);
return G__24546__delegate(tcoll,val,vals);
});
G__24546.cljs$core$IFn$_invoke$arity$variadic = G__24546__delegate;
return G__24546;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__24552 = null;
if (arguments.length > 2) {
var G__24553__i = 0, G__24553__a = new Array(arguments.length -  2);
while (G__24553__i < G__24553__a.length) {G__24553__a[G__24553__i] = arguments[G__24553__i + 2]; ++G__24553__i;}
G__24552 = new cljs.core.IndexedSeq(G__24553__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24552);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__24554__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__24555 = ntcoll;
var G__24556 = cljs.core.first(kvs);
var G__24557 = cljs.core.second(kvs);
var G__24558 = cljs.core.nnext(kvs);
tcoll = G__24555;
key = G__24556;
val = G__24557;
kvs = G__24558;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24554 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24559__i = 0, G__24559__a = new Array(arguments.length -  3);
while (G__24559__i < G__24559__a.length) {G__24559__a[G__24559__i] = arguments[G__24559__i + 3]; ++G__24559__i;}
  kvs = new cljs.core.IndexedSeq(G__24559__a,0);
} 
return G__24554__delegate.call(this,tcoll,key,val,kvs);};
G__24554.cljs$lang$maxFixedArity = 3;
G__24554.cljs$lang$applyTo = (function (arglist__24560){
var tcoll = cljs.core.first(arglist__24560);
arglist__24560 = cljs.core.next(arglist__24560);
var key = cljs.core.first(arglist__24560);
arglist__24560 = cljs.core.next(arglist__24560);
var val = cljs.core.first(arglist__24560);
var kvs = cljs.core.rest(arglist__24560);
return G__24554__delegate(tcoll,key,val,kvs);
});
G__24554.cljs$core$IFn$_invoke$arity$variadic = G__24554__delegate;
return G__24554;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__24561 = null;
if (arguments.length > 3) {
var G__24562__i = 0, G__24562__a = new Array(arguments.length -  3);
while (G__24562__i < G__24562__a.length) {G__24562__a[G__24562__i] = arguments[G__24562__i + 3]; ++G__24562__i;}
G__24561 = new cljs.core.IndexedSeq(G__24562__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__24561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__24563__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__24564 = ntcoll;
var G__24565 = cljs.core.first(ks);
var G__24566 = cljs.core.next(ks);
tcoll = G__24564;
key = G__24565;
ks = G__24566;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24563 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24567__i = 0, G__24567__a = new Array(arguments.length -  2);
while (G__24567__i < G__24567__a.length) {G__24567__a[G__24567__i] = arguments[G__24567__i + 2]; ++G__24567__i;}
  ks = new cljs.core.IndexedSeq(G__24567__a,0);
} 
return G__24563__delegate.call(this,tcoll,key,ks);};
G__24563.cljs$lang$maxFixedArity = 2;
G__24563.cljs$lang$applyTo = (function (arglist__24568){
var tcoll = cljs.core.first(arglist__24568);
arglist__24568 = cljs.core.next(arglist__24568);
var key = cljs.core.first(arglist__24568);
var ks = cljs.core.rest(arglist__24568);
return G__24563__delegate(tcoll,key,ks);
});
G__24563.cljs$core$IFn$_invoke$arity$variadic = G__24563__delegate;
return G__24563;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__24569 = null;
if (arguments.length > 2) {
var G__24570__i = 0, G__24570__a = new Array(arguments.length -  2);
while (G__24570__i < G__24570__a.length) {G__24570__a[G__24570__i] = arguments[G__24570__i + 2]; ++G__24570__i;}
G__24569 = new cljs.core.IndexedSeq(G__24570__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__24569);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__24571__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24572 = ntcoll;
var G__24573 = cljs.core.first(vals);
var G__24574 = cljs.core.next(vals);
tcoll = G__24572;
val = G__24573;
vals = G__24574;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24571 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24575__i = 0, G__24575__a = new Array(arguments.length -  2);
while (G__24575__i < G__24575__a.length) {G__24575__a[G__24575__i] = arguments[G__24575__i + 2]; ++G__24575__i;}
  vals = new cljs.core.IndexedSeq(G__24575__a,0);
} 
return G__24571__delegate.call(this,tcoll,val,vals);};
G__24571.cljs$lang$maxFixedArity = 2;
G__24571.cljs$lang$applyTo = (function (arglist__24576){
var tcoll = cljs.core.first(arglist__24576);
arglist__24576 = cljs.core.next(arglist__24576);
var val = cljs.core.first(arglist__24576);
var vals = cljs.core.rest(arglist__24576);
return G__24571__delegate(tcoll,val,vals);
});
G__24571.cljs$core$IFn$_invoke$arity$variadic = G__24571__delegate;
return G__24571;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__24577 = null;
if (arguments.length > 2) {
var G__24578__i = 0, G__24578__a = new Array(arguments.length -  2);
while (G__24578__i < G__24578__a.length) {G__24578__a[G__24578__i] = arguments[G__24578__i + 2]; ++G__24578__i;}
G__24577 = new cljs.core.IndexedSeq(G__24578__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24577);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4746 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4746);
} else {
var G__24789 = a4746;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24789) : f.call(null,G__24789));
}
} else {
var b4747 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4746,b4747);
} else {
var G__24790 = a4746;
var G__24791 = b4747;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24790,G__24791) : f.call(null,G__24790,G__24791));
}
} else {
var c4748 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4746,b4747,c4748);
} else {
var G__24792 = a4746;
var G__24793 = b4747;
var G__24794 = c4748;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24792,G__24793,G__24794) : f.call(null,G__24792,G__24793,G__24794));
}
} else {
var d4749 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4746,b4747,c4748,d4749);
} else {
var G__24795 = a4746;
var G__24796 = b4747;
var G__24797 = c4748;
var G__24798 = d4749;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24795,G__24796,G__24797,G__24798) : f.call(null,G__24795,G__24796,G__24797,G__24798));
}
} else {
var e4750 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4746,b4747,c4748,d4749,e4750);
} else {
var G__24799 = a4746;
var G__24800 = b4747;
var G__24801 = c4748;
var G__24802 = d4749;
var G__24803 = e4750;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24799,G__24800,G__24801,G__24802,G__24803) : f.call(null,G__24799,G__24800,G__24801,G__24802,G__24803));
}
} else {
var f4751 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4746,b4747,c4748,d4749,e4750,f4751);
} else {
var G__24804 = a4746;
var G__24805 = b4747;
var G__24806 = c4748;
var G__24807 = d4749;
var G__24808 = e4750;
var G__24809 = f4751;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__24804,G__24805,G__24806,G__24807,G__24808,G__24809) : f.call(null,G__24804,G__24805,G__24806,G__24807,G__24808,G__24809));
}
} else {
var g4752 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4746,b4747,c4748,d4749,e4750,f4751,g4752);
} else {
var G__24810 = a4746;
var G__24811 = b4747;
var G__24812 = c4748;
var G__24813 = d4749;
var G__24814 = e4750;
var G__24815 = f4751;
var G__24816 = g4752;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816) : f.call(null,G__24810,G__24811,G__24812,G__24813,G__24814,G__24815,G__24816));
}
} else {
var h4753 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753);
} else {
var G__24817 = a4746;
var G__24818 = b4747;
var G__24819 = c4748;
var G__24820 = d4749;
var G__24821 = e4750;
var G__24822 = f4751;
var G__24823 = g4752;
var G__24824 = h4753;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824) : f.call(null,G__24817,G__24818,G__24819,G__24820,G__24821,G__24822,G__24823,G__24824));
}
} else {
var i4754 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754);
} else {
var G__24825 = a4746;
var G__24826 = b4747;
var G__24827 = c4748;
var G__24828 = d4749;
var G__24829 = e4750;
var G__24830 = f4751;
var G__24831 = g4752;
var G__24832 = h4753;
var G__24833 = i4754;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833) : f.call(null,G__24825,G__24826,G__24827,G__24828,G__24829,G__24830,G__24831,G__24832,G__24833));
}
} else {
var j4755 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755);
} else {
var G__24834 = a4746;
var G__24835 = b4747;
var G__24836 = c4748;
var G__24837 = d4749;
var G__24838 = e4750;
var G__24839 = f4751;
var G__24840 = g4752;
var G__24841 = h4753;
var G__24842 = i4754;
var G__24843 = j4755;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__24834,G__24835,G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843) : f.call(null,G__24834,G__24835,G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842,G__24843));
}
} else {
var k4756 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756);
} else {
var G__24844 = a4746;
var G__24845 = b4747;
var G__24846 = c4748;
var G__24847 = d4749;
var G__24848 = e4750;
var G__24849 = f4751;
var G__24850 = g4752;
var G__24851 = h4753;
var G__24852 = i4754;
var G__24853 = j4755;
var G__24854 = k4756;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854) : f.call(null,G__24844,G__24845,G__24846,G__24847,G__24848,G__24849,G__24850,G__24851,G__24852,G__24853,G__24854));
}
} else {
var l4757 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756,l4757);
} else {
var G__24855 = a4746;
var G__24856 = b4747;
var G__24857 = c4748;
var G__24858 = d4749;
var G__24859 = e4750;
var G__24860 = f4751;
var G__24861 = g4752;
var G__24862 = h4753;
var G__24863 = i4754;
var G__24864 = j4755;
var G__24865 = k4756;
var G__24866 = l4757;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__24855,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866) : f.call(null,G__24855,G__24856,G__24857,G__24858,G__24859,G__24860,G__24861,G__24862,G__24863,G__24864,G__24865,G__24866));
}
} else {
var m4758 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756,l4757,m4758);
} else {
var G__24867 = a4746;
var G__24868 = b4747;
var G__24869 = c4748;
var G__24870 = d4749;
var G__24871 = e4750;
var G__24872 = f4751;
var G__24873 = g4752;
var G__24874 = h4753;
var G__24875 = i4754;
var G__24876 = j4755;
var G__24877 = k4756;
var G__24878 = l4757;
var G__24879 = m4758;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__24867,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879) : f.call(null,G__24867,G__24868,G__24869,G__24870,G__24871,G__24872,G__24873,G__24874,G__24875,G__24876,G__24877,G__24878,G__24879));
}
} else {
var n4759 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756,l4757,m4758,n4759);
} else {
var G__24880 = a4746;
var G__24881 = b4747;
var G__24882 = c4748;
var G__24883 = d4749;
var G__24884 = e4750;
var G__24885 = f4751;
var G__24886 = g4752;
var G__24887 = h4753;
var G__24888 = i4754;
var G__24889 = j4755;
var G__24890 = k4756;
var G__24891 = l4757;
var G__24892 = m4758;
var G__24893 = n4759;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__24880,G__24881,G__24882,G__24883,G__24884,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893) : f.call(null,G__24880,G__24881,G__24882,G__24883,G__24884,G__24885,G__24886,G__24887,G__24888,G__24889,G__24890,G__24891,G__24892,G__24893));
}
} else {
var o4760 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756,l4757,m4758,n4759,o4760);
} else {
var G__24894 = a4746;
var G__24895 = b4747;
var G__24896 = c4748;
var G__24897 = d4749;
var G__24898 = e4750;
var G__24899 = f4751;
var G__24900 = g4752;
var G__24901 = h4753;
var G__24902 = i4754;
var G__24903 = j4755;
var G__24904 = k4756;
var G__24905 = l4757;
var G__24906 = m4758;
var G__24907 = n4759;
var G__24908 = o4760;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__24894,G__24895,G__24896,G__24897,G__24898,G__24899,G__24900,G__24901,G__24902,G__24903,G__24904,G__24905,G__24906,G__24907,G__24908) : f.call(null,G__24894,G__24895,G__24896,G__24897,G__24898,G__24899,G__24900,G__24901,G__24902,G__24903,G__24904,G__24905,G__24906,G__24907,G__24908));
}
} else {
var p4761 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756,l4757,m4758,n4759,o4760,p4761);
} else {
var G__24909 = a4746;
var G__24910 = b4747;
var G__24911 = c4748;
var G__24912 = d4749;
var G__24913 = e4750;
var G__24914 = f4751;
var G__24915 = g4752;
var G__24916 = h4753;
var G__24917 = i4754;
var G__24918 = j4755;
var G__24919 = k4756;
var G__24920 = l4757;
var G__24921 = m4758;
var G__24922 = n4759;
var G__24923 = o4760;
var G__24924 = p4761;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916,G__24917,G__24918,G__24919,G__24920,G__24921,G__24922,G__24923,G__24924) : f.call(null,G__24909,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916,G__24917,G__24918,G__24919,G__24920,G__24921,G__24922,G__24923,G__24924));
}
} else {
var q4762 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756,l4757,m4758,n4759,o4760,p4761,q4762);
} else {
var G__24925 = a4746;
var G__24926 = b4747;
var G__24927 = c4748;
var G__24928 = d4749;
var G__24929 = e4750;
var G__24930 = f4751;
var G__24931 = g4752;
var G__24932 = h4753;
var G__24933 = i4754;
var G__24934 = j4755;
var G__24935 = k4756;
var G__24936 = l4757;
var G__24937 = m4758;
var G__24938 = n4759;
var G__24939 = o4760;
var G__24940 = p4761;
var G__24941 = q4762;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941) : f.call(null,G__24925,G__24926,G__24927,G__24928,G__24929,G__24930,G__24931,G__24932,G__24933,G__24934,G__24935,G__24936,G__24937,G__24938,G__24939,G__24940,G__24941));
}
} else {
var r4763 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756,l4757,m4758,n4759,o4760,p4761,q4762,r4763);
} else {
var G__24942 = a4746;
var G__24943 = b4747;
var G__24944 = c4748;
var G__24945 = d4749;
var G__24946 = e4750;
var G__24947 = f4751;
var G__24948 = g4752;
var G__24949 = h4753;
var G__24950 = i4754;
var G__24951 = j4755;
var G__24952 = k4756;
var G__24953 = l4757;
var G__24954 = m4758;
var G__24955 = n4759;
var G__24956 = o4760;
var G__24957 = p4761;
var G__24958 = q4762;
var G__24959 = r4763;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__24942,G__24943,G__24944,G__24945,G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959) : f.call(null,G__24942,G__24943,G__24944,G__24945,G__24946,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952,G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959));
}
} else {
var s4764 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756,l4757,m4758,n4759,o4760,p4761,q4762,r4763,s4764);
} else {
var G__24960 = a4746;
var G__24961 = b4747;
var G__24962 = c4748;
var G__24963 = d4749;
var G__24964 = e4750;
var G__24965 = f4751;
var G__24966 = g4752;
var G__24967 = h4753;
var G__24968 = i4754;
var G__24969 = j4755;
var G__24970 = k4756;
var G__24971 = l4757;
var G__24972 = m4758;
var G__24973 = n4759;
var G__24974 = o4760;
var G__24975 = p4761;
var G__24976 = q4762;
var G__24977 = r4763;
var G__24978 = s4764;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__24960,G__24961,G__24962,G__24963,G__24964,G__24965,G__24966,G__24967,G__24968,G__24969,G__24970,G__24971,G__24972,G__24973,G__24974,G__24975,G__24976,G__24977,G__24978) : f.call(null,G__24960,G__24961,G__24962,G__24963,G__24964,G__24965,G__24966,G__24967,G__24968,G__24969,G__24970,G__24971,G__24972,G__24973,G__24974,G__24975,G__24976,G__24977,G__24978));
}
} else {
var t4765 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4746,b4747,c4748,d4749,e4750,f4751,g4752,h4753,i4754,j4755,k4756,l4757,m4758,n4759,o4760,p4761,q4762,r4763,s4764,t4765);
} else {
var G__24979 = a4746;
var G__24980 = b4747;
var G__24981 = c4748;
var G__24982 = d4749;
var G__24983 = e4750;
var G__24984 = f4751;
var G__24985 = g4752;
var G__24986 = h4753;
var G__24987 = i4754;
var G__24988 = j4755;
var G__24989 = k4756;
var G__24990 = l4757;
var G__24991 = m4758;
var G__24992 = n4759;
var G__24993 = o4760;
var G__24994 = p4761;
var G__24995 = q4762;
var G__24996 = r4763;
var G__24997 = s4764;
var G__24998 = t4765;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__24979,G__24980,G__24981,G__24982,G__24983,G__24984,G__24985,G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996,G__24997,G__24998) : f.call(null,G__24979,G__24980,G__24981,G__24982,G__24983,G__24984,G__24985,G__24986,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996,G__24997,G__24998));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__24999__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__24999 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__25000__i = 0, G__25000__a = new Array(arguments.length -  5);
while (G__25000__i < G__25000__a.length) {G__25000__a[G__25000__i] = arguments[G__25000__i + 5]; ++G__25000__i;}
  args = new cljs.core.IndexedSeq(G__25000__a,0);
} 
return G__24999__delegate.call(this,f,a,b,c,d,args);};
G__24999.cljs$lang$maxFixedArity = 5;
G__24999.cljs$lang$applyTo = (function (arglist__25001){
var f = cljs.core.first(arglist__25001);
arglist__25001 = cljs.core.next(arglist__25001);
var a = cljs.core.first(arglist__25001);
arglist__25001 = cljs.core.next(arglist__25001);
var b = cljs.core.first(arglist__25001);
arglist__25001 = cljs.core.next(arglist__25001);
var c = cljs.core.first(arglist__25001);
arglist__25001 = cljs.core.next(arglist__25001);
var d = cljs.core.first(arglist__25001);
var args = cljs.core.rest(arglist__25001);
return G__24999__delegate(f,a,b,c,d,args);
});
G__24999.cljs$core$IFn$_invoke$arity$variadic = G__24999__delegate;
return G__24999;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__25002 = null;
if (arguments.length > 5) {
var G__25003__i = 0, G__25003__a = new Array(arguments.length -  5);
while (G__25003__i < G__25003__a.length) {G__25003__a[G__25003__i] = arguments[G__25003__i + 5]; ++G__25003__i;}
G__25002 = new cljs.core.IndexedSeq(G__25003__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__25002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__25019 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25019) : f.call(null,G__25019));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__25020 = cljs.core.meta(obj);
var G__25021 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25020,G__25021) : f.call(null,G__25020,G__25021));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__25022 = cljs.core.meta(obj);
var G__25023 = a;
var G__25024 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25022,G__25023,G__25024) : f.call(null,G__25022,G__25023,G__25024));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__25025 = cljs.core.meta(obj);
var G__25026 = a;
var G__25027 = b;
var G__25028 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25025,G__25026,G__25027,G__25028) : f.call(null,G__25025,G__25026,G__25027,G__25028));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__25029 = cljs.core.meta(obj);
var G__25030 = a;
var G__25031 = b;
var G__25032 = c;
var G__25033 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25029,G__25030,G__25031,G__25032,G__25033) : f.call(null,G__25029,G__25030,G__25031,G__25032,G__25033));
})());
});
var vary_meta__7 = (function() { 
var G__25034__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__25034 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__25035__i = 0, G__25035__a = new Array(arguments.length -  6);
while (G__25035__i < G__25035__a.length) {G__25035__a[G__25035__i] = arguments[G__25035__i + 6]; ++G__25035__i;}
  args = new cljs.core.IndexedSeq(G__25035__a,0);
} 
return G__25034__delegate.call(this,obj,f,a,b,c,d,args);};
G__25034.cljs$lang$maxFixedArity = 6;
G__25034.cljs$lang$applyTo = (function (arglist__25036){
var obj = cljs.core.first(arglist__25036);
arglist__25036 = cljs.core.next(arglist__25036);
var f = cljs.core.first(arglist__25036);
arglist__25036 = cljs.core.next(arglist__25036);
var a = cljs.core.first(arglist__25036);
arglist__25036 = cljs.core.next(arglist__25036);
var b = cljs.core.first(arglist__25036);
arglist__25036 = cljs.core.next(arglist__25036);
var c = cljs.core.first(arglist__25036);
arglist__25036 = cljs.core.next(arglist__25036);
var d = cljs.core.first(arglist__25036);
var args = cljs.core.rest(arglist__25036);
return G__25034__delegate(obj,f,a,b,c,d,args);
});
G__25034.cljs$core$IFn$_invoke$arity$variadic = G__25034__delegate;
return G__25034;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__25037 = null;
if (arguments.length > 6) {
var G__25038__i = 0, G__25038__a = new Array(arguments.length -  6);
while (G__25038__i < G__25038__a.length) {G__25038__a[G__25038__i] = arguments[G__25038__i + 6]; ++G__25038__i;}
G__25037 = new cljs.core.IndexedSeq(G__25038__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__25037);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__25039__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__25039 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25040__i = 0, G__25040__a = new Array(arguments.length -  2);
while (G__25040__i < G__25040__a.length) {G__25040__a[G__25040__i] = arguments[G__25040__i + 2]; ++G__25040__i;}
  more = new cljs.core.IndexedSeq(G__25040__a,0);
} 
return G__25039__delegate.call(this,x,y,more);};
G__25039.cljs$lang$maxFixedArity = 2;
G__25039.cljs$lang$applyTo = (function (arglist__25041){
var x = cljs.core.first(arglist__25041);
arglist__25041 = cljs.core.next(arglist__25041);
var y = cljs.core.first(arglist__25041);
var more = cljs.core.rest(arglist__25041);
return G__25039__delegate(x,y,more);
});
G__25039.cljs$core$IFn$_invoke$arity$variadic = G__25039__delegate;
return G__25039;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__25042 = null;
if (arguments.length > 2) {
var G__25043__i = 0, G__25043__a = new Array(arguments.length -  2);
while (G__25043__i < G__25043__a.length) {G__25043__a[G__25043__i] = arguments[G__25043__i + 2]; ++G__25043__i;}
G__25042 = new cljs.core.IndexedSeq(G__25043__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t25047 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t25047 = (function (nil_iter,meta25048){
this.nil_iter = nil_iter;
this.meta25048 = meta25048;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t25047.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t25047.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t25047.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t25047.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_25049){
var self__ = this;
var _25049__$1 = this;
return self__.meta25048;
});

cljs.core.t25047.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_25049,meta25048__$1){
var self__ = this;
var _25049__$1 = this;
return (new cljs.core.t25047(self__.nil_iter,meta25048__$1));
});

cljs.core.t25047.cljs$lang$type = true;

cljs.core.t25047.cljs$lang$ctorStr = "cljs.core/t25047";

cljs.core.t25047.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/t25047");
});

cljs.core.__GT_t25047 = (function __GT_t25047(nil_iter__$1,meta25048){
return (new cljs.core.t25047(nil_iter__$1,meta25048));
});

}

return (new cljs.core.t25047(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3803__auto__ = !((lt.stepper == null));
if(and__3803__auto__){
return self__.iter.hasNext();
} else {
return and__3803__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__25050 = lt;
var G__25051 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__25050,G__25051) : self__.xform.call(null,G__25050,G__25051));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25052 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25052) : self__.xform.call(null,G__25052));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__25054 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25054) : xform.call(null,G__25054));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__25056 = cljs.core.next(iters__$1);
iters__$1 = G__25056;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4702__auto___25057 = self__.iters.length;
var i_25058 = (0);
while(true){
if((i_25058 < n__4702__auto___25057)){
(self__.nexts[i_25058] = (self__.iters[i_25058]).next());

var G__25059 = (i_25058 + (1));
i_25058 = G__25059;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3803__auto__ = !((lt.stepper == null));
if(and__3803__auto__){
return this$.hasNext();
} else {
return and__3803__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25055 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25055) : self__.xform.call(null,G__25055));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__25064 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25064) : xform.call(null,G__25064));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__25065_25069 = cljs.core.seq(colls);
var chunk__25066_25070 = null;
var count__25067_25071 = (0);
var i__25068_25072 = (0);
while(true){
if((i__25068_25072 < count__25067_25071)){
var coll_25073 = chunk__25066_25070.cljs$core$IIndexed$_nth$arity$2(null,i__25068_25072);
iters.push(cljs.core.iter(coll_25073));

var G__25074 = seq__25065_25069;
var G__25075 = chunk__25066_25070;
var G__25076 = count__25067_25071;
var G__25077 = (i__25068_25072 + (1));
seq__25065_25069 = G__25074;
chunk__25066_25070 = G__25075;
count__25067_25071 = G__25076;
i__25068_25072 = G__25077;
continue;
} else {
var temp__4126__auto___25078 = cljs.core.seq(seq__25065_25069);
if(temp__4126__auto___25078){
var seq__25065_25079__$1 = temp__4126__auto___25078;
if(cljs.core.chunked_seq_QMARK_(seq__25065_25079__$1)){
var c__4602__auto___25080 = cljs.core.chunk_first(seq__25065_25079__$1);
var G__25081 = cljs.core.chunk_rest(seq__25065_25079__$1);
var G__25082 = c__4602__auto___25080;
var G__25083 = cljs.core.count(c__4602__auto___25080);
var G__25084 = (0);
seq__25065_25069 = G__25081;
chunk__25066_25070 = G__25082;
count__25067_25071 = G__25083;
i__25068_25072 = G__25084;
continue;
} else {
var coll_25085 = cljs.core.first(seq__25065_25079__$1);
iters.push(cljs.core.iter(coll_25085));

var G__25086 = cljs.core.next(seq__25065_25079__$1);
var G__25087 = null;
var G__25088 = (0);
var G__25089 = (0);
seq__25065_25069 = G__25086;
chunk__25066_25070 = G__25087;
count__25067_25071 = G__25088;
i__25068_25072 = G__25089;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3815__auto__ = cljs.core.seq(coll);
if(or__3815__auto__){
return or__3815__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__25090__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__25090 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__25091__i = 0, G__25091__a = new Array(arguments.length -  2);
while (G__25091__i < G__25091__a.length) {G__25091__a[G__25091__i] = arguments[G__25091__i + 2]; ++G__25091__i;}
  colls = new cljs.core.IndexedSeq(G__25091__a,0);
} 
return G__25090__delegate.call(this,xform,coll,colls);};
G__25090.cljs$lang$maxFixedArity = 2;
G__25090.cljs$lang$applyTo = (function (arglist__25092){
var xform = cljs.core.first(arglist__25092);
arglist__25092 = cljs.core.next(arglist__25092);
var coll = cljs.core.first(arglist__25092);
var colls = cljs.core.rest(arglist__25092);
return G__25090__delegate(xform,coll,colls);
});
G__25090.cljs$core$IFn$_invoke$arity$variadic = G__25090__delegate;
return G__25090;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__25093 = null;
if (arguments.length > 2) {
var G__25094__i = 0, G__25094__a = new Array(arguments.length -  2);
while (G__25094__i < G__25094__a.length) {G__25094__a[G__25094__i] = arguments[G__25094__i + 2]; ++G__25094__i;}
G__25093 = new cljs.core.IndexedSeq(G__25094__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__25093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__25096 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25096) : pred.call(null,G__25096));
})())){
var G__25097 = pred;
var G__25098 = cljs.core.next(coll);
pred = G__25097;
coll = G__25098;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3815__auto__ = (function (){var G__25102 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25102) : pred.call(null,G__25102));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var G__25103 = pred;
var G__25104 = cljs.core.next(coll);
pred = G__25103;
coll = G__25104;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__25111 = null;
var G__25111__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__25111__1 = (function (x){
return cljs.core.not((function (){var G__25108 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25108) : f.call(null,G__25108));
})());
});
var G__25111__2 = (function (x,y){
return cljs.core.not((function (){var G__25109 = x;
var G__25110 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25109,G__25110) : f.call(null,G__25109,G__25110));
})());
});
var G__25111__3 = (function() { 
var G__25112__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__25112 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25113__i = 0, G__25113__a = new Array(arguments.length -  2);
while (G__25113__i < G__25113__a.length) {G__25113__a[G__25113__i] = arguments[G__25113__i + 2]; ++G__25113__i;}
  zs = new cljs.core.IndexedSeq(G__25113__a,0);
} 
return G__25112__delegate.call(this,x,y,zs);};
G__25112.cljs$lang$maxFixedArity = 2;
G__25112.cljs$lang$applyTo = (function (arglist__25114){
var x = cljs.core.first(arglist__25114);
arglist__25114 = cljs.core.next(arglist__25114);
var y = cljs.core.first(arglist__25114);
var zs = cljs.core.rest(arglist__25114);
return G__25112__delegate(x,y,zs);
});
G__25112.cljs$core$IFn$_invoke$arity$variadic = G__25112__delegate;
return G__25112;
})()
;
G__25111 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__25111__0.call(this);
case 1:
return G__25111__1.call(this,x);
case 2:
return G__25111__2.call(this,x,y);
default:
var G__25115 = null;
if (arguments.length > 2) {
var G__25116__i = 0, G__25116__a = new Array(arguments.length -  2);
while (G__25116__i < G__25116__a.length) {G__25116__a[G__25116__i] = arguments[G__25116__i + 2]; ++G__25116__i;}
G__25115 = new cljs.core.IndexedSeq(G__25116__a,0);
}
return G__25111__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25115);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25111.cljs$lang$maxFixedArity = 2;
G__25111.cljs$lang$applyTo = G__25111__3.cljs$lang$applyTo;
G__25111.cljs$core$IFn$_invoke$arity$0 = G__25111__0;
G__25111.cljs$core$IFn$_invoke$arity$1 = G__25111__1;
G__25111.cljs$core$IFn$_invoke$arity$2 = G__25111__2;
G__25111.cljs$core$IFn$_invoke$arity$variadic = G__25111__3.cljs$core$IFn$_invoke$arity$variadic;
return G__25111;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__25117__delegate = function (args){
return x;
};
var G__25117 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25118__i = 0, G__25118__a = new Array(arguments.length -  0);
while (G__25118__i < G__25118__a.length) {G__25118__a[G__25118__i] = arguments[G__25118__i + 0]; ++G__25118__i;}
  args = new cljs.core.IndexedSeq(G__25118__a,0);
} 
return G__25117__delegate.call(this,args);};
G__25117.cljs$lang$maxFixedArity = 0;
G__25117.cljs$lang$applyTo = (function (arglist__25119){
var args = cljs.core.seq(arglist__25119);
return G__25117__delegate(args);
});
G__25117.cljs$core$IFn$_invoke$arity$variadic = G__25117__delegate;
return G__25117;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__25174 = null;
var G__25174__0 = (function (){
var G__25147 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25147) : f.call(null,G__25147));
});
var G__25174__1 = (function (x){
var G__25148 = (function (){var G__25149 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25149) : g.call(null,G__25149));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25148) : f.call(null,G__25148));
});
var G__25174__2 = (function (x,y){
var G__25150 = (function (){var G__25151 = x;
var G__25152 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25151,G__25152) : g.call(null,G__25151,G__25152));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25150) : f.call(null,G__25150));
});
var G__25174__3 = (function (x,y,z){
var G__25153 = (function (){var G__25154 = x;
var G__25155 = y;
var G__25156 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25154,G__25155,G__25156) : g.call(null,G__25154,G__25155,G__25156));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25153) : f.call(null,G__25153));
});
var G__25174__4 = (function() { 
var G__25175__delegate = function (x,y,z,args){
var G__25157 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25157) : f.call(null,G__25157));
};
var G__25175 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25176__i = 0, G__25176__a = new Array(arguments.length -  3);
while (G__25176__i < G__25176__a.length) {G__25176__a[G__25176__i] = arguments[G__25176__i + 3]; ++G__25176__i;}
  args = new cljs.core.IndexedSeq(G__25176__a,0);
} 
return G__25175__delegate.call(this,x,y,z,args);};
G__25175.cljs$lang$maxFixedArity = 3;
G__25175.cljs$lang$applyTo = (function (arglist__25177){
var x = cljs.core.first(arglist__25177);
arglist__25177 = cljs.core.next(arglist__25177);
var y = cljs.core.first(arglist__25177);
arglist__25177 = cljs.core.next(arglist__25177);
var z = cljs.core.first(arglist__25177);
var args = cljs.core.rest(arglist__25177);
return G__25175__delegate(x,y,z,args);
});
G__25175.cljs$core$IFn$_invoke$arity$variadic = G__25175__delegate;
return G__25175;
})()
;
G__25174 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25174__0.call(this);
case 1:
return G__25174__1.call(this,x);
case 2:
return G__25174__2.call(this,x,y);
case 3:
return G__25174__3.call(this,x,y,z);
default:
var G__25178 = null;
if (arguments.length > 3) {
var G__25179__i = 0, G__25179__a = new Array(arguments.length -  3);
while (G__25179__i < G__25179__a.length) {G__25179__a[G__25179__i] = arguments[G__25179__i + 3]; ++G__25179__i;}
G__25178 = new cljs.core.IndexedSeq(G__25179__a,0);
}
return G__25174__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25174.cljs$lang$maxFixedArity = 3;
G__25174.cljs$lang$applyTo = G__25174__4.cljs$lang$applyTo;
G__25174.cljs$core$IFn$_invoke$arity$0 = G__25174__0;
G__25174.cljs$core$IFn$_invoke$arity$1 = G__25174__1;
G__25174.cljs$core$IFn$_invoke$arity$2 = G__25174__2;
G__25174.cljs$core$IFn$_invoke$arity$3 = G__25174__3;
G__25174.cljs$core$IFn$_invoke$arity$variadic = G__25174__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25174;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__25180 = null;
var G__25180__0 = (function (){
var G__25158 = (function (){var G__25159 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25159) : g.call(null,G__25159));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25158) : f.call(null,G__25158));
});
var G__25180__1 = (function (x){
var G__25160 = (function (){var G__25161 = (function (){var G__25162 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25162) : h.call(null,G__25162));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25161) : g.call(null,G__25161));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25160) : f.call(null,G__25160));
});
var G__25180__2 = (function (x,y){
var G__25163 = (function (){var G__25164 = (function (){var G__25165 = x;
var G__25166 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25165,G__25166) : h.call(null,G__25165,G__25166));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25164) : g.call(null,G__25164));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25163) : f.call(null,G__25163));
});
var G__25180__3 = (function (x,y,z){
var G__25167 = (function (){var G__25168 = (function (){var G__25169 = x;
var G__25170 = y;
var G__25171 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25169,G__25170,G__25171) : h.call(null,G__25169,G__25170,G__25171));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25168) : g.call(null,G__25168));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25167) : f.call(null,G__25167));
});
var G__25180__4 = (function() { 
var G__25181__delegate = function (x,y,z,args){
var G__25172 = (function (){var G__25173 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25173) : g.call(null,G__25173));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25172) : f.call(null,G__25172));
};
var G__25181 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25182__i = 0, G__25182__a = new Array(arguments.length -  3);
while (G__25182__i < G__25182__a.length) {G__25182__a[G__25182__i] = arguments[G__25182__i + 3]; ++G__25182__i;}
  args = new cljs.core.IndexedSeq(G__25182__a,0);
} 
return G__25181__delegate.call(this,x,y,z,args);};
G__25181.cljs$lang$maxFixedArity = 3;
G__25181.cljs$lang$applyTo = (function (arglist__25183){
var x = cljs.core.first(arglist__25183);
arglist__25183 = cljs.core.next(arglist__25183);
var y = cljs.core.first(arglist__25183);
arglist__25183 = cljs.core.next(arglist__25183);
var z = cljs.core.first(arglist__25183);
var args = cljs.core.rest(arglist__25183);
return G__25181__delegate(x,y,z,args);
});
G__25181.cljs$core$IFn$_invoke$arity$variadic = G__25181__delegate;
return G__25181;
})()
;
G__25180 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25180__0.call(this);
case 1:
return G__25180__1.call(this,x);
case 2:
return G__25180__2.call(this,x,y);
case 3:
return G__25180__3.call(this,x,y,z);
default:
var G__25184 = null;
if (arguments.length > 3) {
var G__25185__i = 0, G__25185__a = new Array(arguments.length -  3);
while (G__25185__i < G__25185__a.length) {G__25185__a[G__25185__i] = arguments[G__25185__i + 3]; ++G__25185__i;}
G__25184 = new cljs.core.IndexedSeq(G__25185__a,0);
}
return G__25180__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25184);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25180.cljs$lang$maxFixedArity = 3;
G__25180.cljs$lang$applyTo = G__25180__4.cljs$lang$applyTo;
G__25180.cljs$core$IFn$_invoke$arity$0 = G__25180__0;
G__25180.cljs$core$IFn$_invoke$arity$1 = G__25180__1;
G__25180.cljs$core$IFn$_invoke$arity$2 = G__25180__2;
G__25180.cljs$core$IFn$_invoke$arity$3 = G__25180__3;
G__25180.cljs$core$IFn$_invoke$arity$variadic = G__25180__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25180;
})()
});
var comp__4 = (function() { 
var G__25186__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__25187__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__25188 = cljs.core.first(fs__$2).call(null,ret);
var G__25189 = cljs.core.next(fs__$2);
ret = G__25188;
fs__$2 = G__25189;
continue;
} else {
return ret;
}
break;
}
};
var G__25187 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25190__i = 0, G__25190__a = new Array(arguments.length -  0);
while (G__25190__i < G__25190__a.length) {G__25190__a[G__25190__i] = arguments[G__25190__i + 0]; ++G__25190__i;}
  args = new cljs.core.IndexedSeq(G__25190__a,0);
} 
return G__25187__delegate.call(this,args);};
G__25187.cljs$lang$maxFixedArity = 0;
G__25187.cljs$lang$applyTo = (function (arglist__25191){
var args = cljs.core.seq(arglist__25191);
return G__25187__delegate(args);
});
G__25187.cljs$core$IFn$_invoke$arity$variadic = G__25187__delegate;
return G__25187;
})()
;
;})(fs__$1))
};
var G__25186 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25192__i = 0, G__25192__a = new Array(arguments.length -  3);
while (G__25192__i < G__25192__a.length) {G__25192__a[G__25192__i] = arguments[G__25192__i + 3]; ++G__25192__i;}
  fs = new cljs.core.IndexedSeq(G__25192__a,0);
} 
return G__25186__delegate.call(this,f1,f2,f3,fs);};
G__25186.cljs$lang$maxFixedArity = 3;
G__25186.cljs$lang$applyTo = (function (arglist__25193){
var f1 = cljs.core.first(arglist__25193);
arglist__25193 = cljs.core.next(arglist__25193);
var f2 = cljs.core.first(arglist__25193);
arglist__25193 = cljs.core.next(arglist__25193);
var f3 = cljs.core.first(arglist__25193);
var fs = cljs.core.rest(arglist__25193);
return G__25186__delegate(f1,f2,f3,fs);
});
G__25186.cljs$core$IFn$_invoke$arity$variadic = G__25186__delegate;
return G__25186;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__25194 = null;
if (arguments.length > 3) {
var G__25195__i = 0, G__25195__a = new Array(arguments.length -  3);
while (G__25195__i < G__25195__a.length) {G__25195__a[G__25195__i] = arguments[G__25195__i + 3]; ++G__25195__i;}
G__25194 = new cljs.core.IndexedSeq(G__25195__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__25194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__25280 = null;
var G__25280__0 = (function (){
var G__25238 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25238) : f.call(null,G__25238));
});
var G__25280__1 = (function (x){
var G__25239 = arg1;
var G__25240 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25239,G__25240) : f.call(null,G__25239,G__25240));
});
var G__25280__2 = (function (x,y){
var G__25241 = arg1;
var G__25242 = x;
var G__25243 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25241,G__25242,G__25243) : f.call(null,G__25241,G__25242,G__25243));
});
var G__25280__3 = (function (x,y,z){
var G__25244 = arg1;
var G__25245 = x;
var G__25246 = y;
var G__25247 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25244,G__25245,G__25246,G__25247) : f.call(null,G__25244,G__25245,G__25246,G__25247));
});
var G__25280__4 = (function() { 
var G__25281__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__25281 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25282__i = 0, G__25282__a = new Array(arguments.length -  3);
while (G__25282__i < G__25282__a.length) {G__25282__a[G__25282__i] = arguments[G__25282__i + 3]; ++G__25282__i;}
  args = new cljs.core.IndexedSeq(G__25282__a,0);
} 
return G__25281__delegate.call(this,x,y,z,args);};
G__25281.cljs$lang$maxFixedArity = 3;
G__25281.cljs$lang$applyTo = (function (arglist__25283){
var x = cljs.core.first(arglist__25283);
arglist__25283 = cljs.core.next(arglist__25283);
var y = cljs.core.first(arglist__25283);
arglist__25283 = cljs.core.next(arglist__25283);
var z = cljs.core.first(arglist__25283);
var args = cljs.core.rest(arglist__25283);
return G__25281__delegate(x,y,z,args);
});
G__25281.cljs$core$IFn$_invoke$arity$variadic = G__25281__delegate;
return G__25281;
})()
;
G__25280 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25280__0.call(this);
case 1:
return G__25280__1.call(this,x);
case 2:
return G__25280__2.call(this,x,y);
case 3:
return G__25280__3.call(this,x,y,z);
default:
var G__25284 = null;
if (arguments.length > 3) {
var G__25285__i = 0, G__25285__a = new Array(arguments.length -  3);
while (G__25285__i < G__25285__a.length) {G__25285__a[G__25285__i] = arguments[G__25285__i + 3]; ++G__25285__i;}
G__25284 = new cljs.core.IndexedSeq(G__25285__a,0);
}
return G__25280__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25280.cljs$lang$maxFixedArity = 3;
G__25280.cljs$lang$applyTo = G__25280__4.cljs$lang$applyTo;
G__25280.cljs$core$IFn$_invoke$arity$0 = G__25280__0;
G__25280.cljs$core$IFn$_invoke$arity$1 = G__25280__1;
G__25280.cljs$core$IFn$_invoke$arity$2 = G__25280__2;
G__25280.cljs$core$IFn$_invoke$arity$3 = G__25280__3;
G__25280.cljs$core$IFn$_invoke$arity$variadic = G__25280__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25280;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__25286 = null;
var G__25286__0 = (function (){
var G__25248 = arg1;
var G__25249 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25248,G__25249) : f.call(null,G__25248,G__25249));
});
var G__25286__1 = (function (x){
var G__25250 = arg1;
var G__25251 = arg2;
var G__25252 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25250,G__25251,G__25252) : f.call(null,G__25250,G__25251,G__25252));
});
var G__25286__2 = (function (x,y){
var G__25253 = arg1;
var G__25254 = arg2;
var G__25255 = x;
var G__25256 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25253,G__25254,G__25255,G__25256) : f.call(null,G__25253,G__25254,G__25255,G__25256));
});
var G__25286__3 = (function (x,y,z){
var G__25257 = arg1;
var G__25258 = arg2;
var G__25259 = x;
var G__25260 = y;
var G__25261 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25257,G__25258,G__25259,G__25260,G__25261) : f.call(null,G__25257,G__25258,G__25259,G__25260,G__25261));
});
var G__25286__4 = (function() { 
var G__25287__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__25287 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25288__i = 0, G__25288__a = new Array(arguments.length -  3);
while (G__25288__i < G__25288__a.length) {G__25288__a[G__25288__i] = arguments[G__25288__i + 3]; ++G__25288__i;}
  args = new cljs.core.IndexedSeq(G__25288__a,0);
} 
return G__25287__delegate.call(this,x,y,z,args);};
G__25287.cljs$lang$maxFixedArity = 3;
G__25287.cljs$lang$applyTo = (function (arglist__25289){
var x = cljs.core.first(arglist__25289);
arglist__25289 = cljs.core.next(arglist__25289);
var y = cljs.core.first(arglist__25289);
arglist__25289 = cljs.core.next(arglist__25289);
var z = cljs.core.first(arglist__25289);
var args = cljs.core.rest(arglist__25289);
return G__25287__delegate(x,y,z,args);
});
G__25287.cljs$core$IFn$_invoke$arity$variadic = G__25287__delegate;
return G__25287;
})()
;
G__25286 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25286__0.call(this);
case 1:
return G__25286__1.call(this,x);
case 2:
return G__25286__2.call(this,x,y);
case 3:
return G__25286__3.call(this,x,y,z);
default:
var G__25290 = null;
if (arguments.length > 3) {
var G__25291__i = 0, G__25291__a = new Array(arguments.length -  3);
while (G__25291__i < G__25291__a.length) {G__25291__a[G__25291__i] = arguments[G__25291__i + 3]; ++G__25291__i;}
G__25290 = new cljs.core.IndexedSeq(G__25291__a,0);
}
return G__25286__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25290);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25286.cljs$lang$maxFixedArity = 3;
G__25286.cljs$lang$applyTo = G__25286__4.cljs$lang$applyTo;
G__25286.cljs$core$IFn$_invoke$arity$0 = G__25286__0;
G__25286.cljs$core$IFn$_invoke$arity$1 = G__25286__1;
G__25286.cljs$core$IFn$_invoke$arity$2 = G__25286__2;
G__25286.cljs$core$IFn$_invoke$arity$3 = G__25286__3;
G__25286.cljs$core$IFn$_invoke$arity$variadic = G__25286__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25286;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__25292 = null;
var G__25292__0 = (function (){
var G__25262 = arg1;
var G__25263 = arg2;
var G__25264 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25262,G__25263,G__25264) : f.call(null,G__25262,G__25263,G__25264));
});
var G__25292__1 = (function (x){
var G__25265 = arg1;
var G__25266 = arg2;
var G__25267 = arg3;
var G__25268 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25265,G__25266,G__25267,G__25268) : f.call(null,G__25265,G__25266,G__25267,G__25268));
});
var G__25292__2 = (function (x,y){
var G__25269 = arg1;
var G__25270 = arg2;
var G__25271 = arg3;
var G__25272 = x;
var G__25273 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25269,G__25270,G__25271,G__25272,G__25273) : f.call(null,G__25269,G__25270,G__25271,G__25272,G__25273));
});
var G__25292__3 = (function (x,y,z){
var G__25274 = arg1;
var G__25275 = arg2;
var G__25276 = arg3;
var G__25277 = x;
var G__25278 = y;
var G__25279 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25274,G__25275,G__25276,G__25277,G__25278,G__25279) : f.call(null,G__25274,G__25275,G__25276,G__25277,G__25278,G__25279));
});
var G__25292__4 = (function() { 
var G__25293__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__25293 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25294__i = 0, G__25294__a = new Array(arguments.length -  3);
while (G__25294__i < G__25294__a.length) {G__25294__a[G__25294__i] = arguments[G__25294__i + 3]; ++G__25294__i;}
  args = new cljs.core.IndexedSeq(G__25294__a,0);
} 
return G__25293__delegate.call(this,x,y,z,args);};
G__25293.cljs$lang$maxFixedArity = 3;
G__25293.cljs$lang$applyTo = (function (arglist__25295){
var x = cljs.core.first(arglist__25295);
arglist__25295 = cljs.core.next(arglist__25295);
var y = cljs.core.first(arglist__25295);
arglist__25295 = cljs.core.next(arglist__25295);
var z = cljs.core.first(arglist__25295);
var args = cljs.core.rest(arglist__25295);
return G__25293__delegate(x,y,z,args);
});
G__25293.cljs$core$IFn$_invoke$arity$variadic = G__25293__delegate;
return G__25293;
})()
;
G__25292 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25292__0.call(this);
case 1:
return G__25292__1.call(this,x);
case 2:
return G__25292__2.call(this,x,y);
case 3:
return G__25292__3.call(this,x,y,z);
default:
var G__25296 = null;
if (arguments.length > 3) {
var G__25297__i = 0, G__25297__a = new Array(arguments.length -  3);
while (G__25297__i < G__25297__a.length) {G__25297__a[G__25297__i] = arguments[G__25297__i + 3]; ++G__25297__i;}
G__25296 = new cljs.core.IndexedSeq(G__25297__a,0);
}
return G__25292__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25292.cljs$lang$maxFixedArity = 3;
G__25292.cljs$lang$applyTo = G__25292__4.cljs$lang$applyTo;
G__25292.cljs$core$IFn$_invoke$arity$0 = G__25292__0;
G__25292.cljs$core$IFn$_invoke$arity$1 = G__25292__1;
G__25292.cljs$core$IFn$_invoke$arity$2 = G__25292__2;
G__25292.cljs$core$IFn$_invoke$arity$3 = G__25292__3;
G__25292.cljs$core$IFn$_invoke$arity$variadic = G__25292__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25292;
})()
});
var partial__5 = (function() { 
var G__25298__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__25299__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__25299 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25300__i = 0, G__25300__a = new Array(arguments.length -  0);
while (G__25300__i < G__25300__a.length) {G__25300__a[G__25300__i] = arguments[G__25300__i + 0]; ++G__25300__i;}
  args = new cljs.core.IndexedSeq(G__25300__a,0);
} 
return G__25299__delegate.call(this,args);};
G__25299.cljs$lang$maxFixedArity = 0;
G__25299.cljs$lang$applyTo = (function (arglist__25301){
var args = cljs.core.seq(arglist__25301);
return G__25299__delegate(args);
});
G__25299.cljs$core$IFn$_invoke$arity$variadic = G__25299__delegate;
return G__25299;
})()
;
};
var G__25298 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__25302__i = 0, G__25302__a = new Array(arguments.length -  4);
while (G__25302__i < G__25302__a.length) {G__25302__a[G__25302__i] = arguments[G__25302__i + 4]; ++G__25302__i;}
  more = new cljs.core.IndexedSeq(G__25302__a,0);
} 
return G__25298__delegate.call(this,f,arg1,arg2,arg3,more);};
G__25298.cljs$lang$maxFixedArity = 4;
G__25298.cljs$lang$applyTo = (function (arglist__25303){
var f = cljs.core.first(arglist__25303);
arglist__25303 = cljs.core.next(arglist__25303);
var arg1 = cljs.core.first(arglist__25303);
arglist__25303 = cljs.core.next(arglist__25303);
var arg2 = cljs.core.first(arglist__25303);
arglist__25303 = cljs.core.next(arglist__25303);
var arg3 = cljs.core.first(arglist__25303);
var more = cljs.core.rest(arglist__25303);
return G__25298__delegate(f,arg1,arg2,arg3,more);
});
G__25298.cljs$core$IFn$_invoke$arity$variadic = G__25298__delegate;
return G__25298;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__25304 = null;
if (arguments.length > 4) {
var G__25305__i = 0, G__25305__a = new Array(arguments.length -  4);
while (G__25305__i < G__25305__a.length) {G__25305__a[G__25305__i] = arguments[G__25305__i + 4]; ++G__25305__i;}
G__25304 = new cljs.core.IndexedSeq(G__25305__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__25304);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__25338 = null;
var G__25338__1 = (function (a){
var G__25322 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25322) : f.call(null,G__25322));
});
var G__25338__2 = (function (a,b){
var G__25323 = (((a == null))?x:a);
var G__25324 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25323,G__25324) : f.call(null,G__25323,G__25324));
});
var G__25338__3 = (function (a,b,c){
var G__25325 = (((a == null))?x:a);
var G__25326 = b;
var G__25327 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25325,G__25326,G__25327) : f.call(null,G__25325,G__25326,G__25327));
});
var G__25338__4 = (function() { 
var G__25339__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__25339 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25340__i = 0, G__25340__a = new Array(arguments.length -  3);
while (G__25340__i < G__25340__a.length) {G__25340__a[G__25340__i] = arguments[G__25340__i + 3]; ++G__25340__i;}
  ds = new cljs.core.IndexedSeq(G__25340__a,0);
} 
return G__25339__delegate.call(this,a,b,c,ds);};
G__25339.cljs$lang$maxFixedArity = 3;
G__25339.cljs$lang$applyTo = (function (arglist__25341){
var a = cljs.core.first(arglist__25341);
arglist__25341 = cljs.core.next(arglist__25341);
var b = cljs.core.first(arglist__25341);
arglist__25341 = cljs.core.next(arglist__25341);
var c = cljs.core.first(arglist__25341);
var ds = cljs.core.rest(arglist__25341);
return G__25339__delegate(a,b,c,ds);
});
G__25339.cljs$core$IFn$_invoke$arity$variadic = G__25339__delegate;
return G__25339;
})()
;
G__25338 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__25338__1.call(this,a);
case 2:
return G__25338__2.call(this,a,b);
case 3:
return G__25338__3.call(this,a,b,c);
default:
var G__25342 = null;
if (arguments.length > 3) {
var G__25343__i = 0, G__25343__a = new Array(arguments.length -  3);
while (G__25343__i < G__25343__a.length) {G__25343__a[G__25343__i] = arguments[G__25343__i + 3]; ++G__25343__i;}
G__25342 = new cljs.core.IndexedSeq(G__25343__a,0);
}
return G__25338__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25342);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25338.cljs$lang$maxFixedArity = 3;
G__25338.cljs$lang$applyTo = G__25338__4.cljs$lang$applyTo;
G__25338.cljs$core$IFn$_invoke$arity$1 = G__25338__1;
G__25338.cljs$core$IFn$_invoke$arity$2 = G__25338__2;
G__25338.cljs$core$IFn$_invoke$arity$3 = G__25338__3;
G__25338.cljs$core$IFn$_invoke$arity$variadic = G__25338__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25338;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__25344 = null;
var G__25344__2 = (function (a,b){
var G__25328 = (((a == null))?x:a);
var G__25329 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25328,G__25329) : f.call(null,G__25328,G__25329));
});
var G__25344__3 = (function (a,b,c){
var G__25330 = (((a == null))?x:a);
var G__25331 = (((b == null))?y:b);
var G__25332 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25330,G__25331,G__25332) : f.call(null,G__25330,G__25331,G__25332));
});
var G__25344__4 = (function() { 
var G__25345__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__25345 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25346__i = 0, G__25346__a = new Array(arguments.length -  3);
while (G__25346__i < G__25346__a.length) {G__25346__a[G__25346__i] = arguments[G__25346__i + 3]; ++G__25346__i;}
  ds = new cljs.core.IndexedSeq(G__25346__a,0);
} 
return G__25345__delegate.call(this,a,b,c,ds);};
G__25345.cljs$lang$maxFixedArity = 3;
G__25345.cljs$lang$applyTo = (function (arglist__25347){
var a = cljs.core.first(arglist__25347);
arglist__25347 = cljs.core.next(arglist__25347);
var b = cljs.core.first(arglist__25347);
arglist__25347 = cljs.core.next(arglist__25347);
var c = cljs.core.first(arglist__25347);
var ds = cljs.core.rest(arglist__25347);
return G__25345__delegate(a,b,c,ds);
});
G__25345.cljs$core$IFn$_invoke$arity$variadic = G__25345__delegate;
return G__25345;
})()
;
G__25344 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25344__2.call(this,a,b);
case 3:
return G__25344__3.call(this,a,b,c);
default:
var G__25348 = null;
if (arguments.length > 3) {
var G__25349__i = 0, G__25349__a = new Array(arguments.length -  3);
while (G__25349__i < G__25349__a.length) {G__25349__a[G__25349__i] = arguments[G__25349__i + 3]; ++G__25349__i;}
G__25348 = new cljs.core.IndexedSeq(G__25349__a,0);
}
return G__25344__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25348);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25344.cljs$lang$maxFixedArity = 3;
G__25344.cljs$lang$applyTo = G__25344__4.cljs$lang$applyTo;
G__25344.cljs$core$IFn$_invoke$arity$2 = G__25344__2;
G__25344.cljs$core$IFn$_invoke$arity$3 = G__25344__3;
G__25344.cljs$core$IFn$_invoke$arity$variadic = G__25344__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25344;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__25350 = null;
var G__25350__2 = (function (a,b){
var G__25333 = (((a == null))?x:a);
var G__25334 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25333,G__25334) : f.call(null,G__25333,G__25334));
});
var G__25350__3 = (function (a,b,c){
var G__25335 = (((a == null))?x:a);
var G__25336 = (((b == null))?y:b);
var G__25337 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25335,G__25336,G__25337) : f.call(null,G__25335,G__25336,G__25337));
});
var G__25350__4 = (function() { 
var G__25351__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__25351 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25352__i = 0, G__25352__a = new Array(arguments.length -  3);
while (G__25352__i < G__25352__a.length) {G__25352__a[G__25352__i] = arguments[G__25352__i + 3]; ++G__25352__i;}
  ds = new cljs.core.IndexedSeq(G__25352__a,0);
} 
return G__25351__delegate.call(this,a,b,c,ds);};
G__25351.cljs$lang$maxFixedArity = 3;
G__25351.cljs$lang$applyTo = (function (arglist__25353){
var a = cljs.core.first(arglist__25353);
arglist__25353 = cljs.core.next(arglist__25353);
var b = cljs.core.first(arglist__25353);
arglist__25353 = cljs.core.next(arglist__25353);
var c = cljs.core.first(arglist__25353);
var ds = cljs.core.rest(arglist__25353);
return G__25351__delegate(a,b,c,ds);
});
G__25351.cljs$core$IFn$_invoke$arity$variadic = G__25351__delegate;
return G__25351;
})()
;
G__25350 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25350__2.call(this,a,b);
case 3:
return G__25350__3.call(this,a,b,c);
default:
var G__25354 = null;
if (arguments.length > 3) {
var G__25355__i = 0, G__25355__a = new Array(arguments.length -  3);
while (G__25355__i < G__25355__a.length) {G__25355__a[G__25355__i] = arguments[G__25355__i + 3]; ++G__25355__i;}
G__25354 = new cljs.core.IndexedSeq(G__25355__a,0);
}
return G__25350__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25350.cljs$lang$maxFixedArity = 3;
G__25350.cljs$lang$applyTo = G__25350__4.cljs$lang$applyTo;
G__25350.cljs$core$IFn$_invoke$arity$2 = G__25350__2;
G__25350.cljs$core$IFn$_invoke$arity$3 = G__25350__3;
G__25350.cljs$core$IFn$_invoke$arity$variadic = G__25350__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25350;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__25386 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__25386) : cljs.core.volatile_BANG_.call(null,G__25386));
})();
return ((function (i){
return (function() {
var G__25416 = null;
var G__25416__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25416__1 = (function (result){
var G__25387 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25387) : rf.call(null,G__25387));
});
var G__25416__2 = (function (result,input){
var G__25388 = result;
var G__25389 = (function (){var G__25390 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__25391 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25390,G__25391) : f.call(null,G__25390,G__25391));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25388,G__25389) : rf.call(null,G__25388,G__25389));
});
G__25416 = function(result,input){
switch(arguments.length){
case 0:
return G__25416__0.call(this);
case 1:
return G__25416__1.call(this,result);
case 2:
return G__25416__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25416.cljs$core$IFn$_invoke$arity$0 = G__25416__0;
G__25416.cljs$core$IFn$_invoke$arity$1 = G__25416__1;
G__25416.cljs$core$IFn$_invoke$arity$2 = G__25416__2;
return G__25416;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4702__auto___25417 = size;
var i_25418 = (0);
while(true){
if((i_25418 < n__4702__auto___25417)){
cljs.core.chunk_append(b,(function (){var G__25412 = (idx + i_25418);
var G__25413 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25418);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25412,G__25413) : f.call(null,G__25412,G__25413));
})());

var G__25419 = (i_25418 + (1));
i_25418 = G__25419;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__25414 = idx;
var G__25415 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25414,G__25415) : f.call(null,G__25414,G__25415));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__25438 = null;
var G__25438__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25438__1 = (function (result){
var G__25432 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25432) : rf.call(null,G__25432));
});
var G__25438__2 = (function (result,input){
var v = (function (){var G__25433 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25433) : f.call(null,G__25433));
})();
if((v == null)){
return result;
} else {
var G__25434 = result;
var G__25435 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25434,G__25435) : rf.call(null,G__25434,G__25435));
}
});
G__25438 = function(result,input){
switch(arguments.length){
case 0:
return G__25438__0.call(this);
case 1:
return G__25438__1.call(this,result);
case 2:
return G__25438__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25438.cljs$core$IFn$_invoke$arity$0 = G__25438__0;
G__25438.cljs$core$IFn$_invoke$arity$1 = G__25438__1;
G__25438.cljs$core$IFn$_invoke$arity$2 = G__25438__2;
return G__25438;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4702__auto___25439 = size;
var i_25440 = (0);
while(true){
if((i_25440 < n__4702__auto___25439)){
var x_25441 = (function (){var G__25436 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25440);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25436) : f.call(null,G__25436));
})();
if((x_25441 == null)){
} else {
cljs.core.chunk_append(b,x_25441);
}

var G__25442 = (i_25440 + (1));
i_25440 = G__25442;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25437 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25437) : f.call(null,G__25437));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25443 = this$__$1;
return goog.getUid(G__25443);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__25444 = cljs.core.seq(self__.watches);
var chunk__25445 = null;
var count__25446 = (0);
var i__25447 = (0);
while(true){
if((i__25447 < count__25446)){
var vec__25448 = chunk__25445.cljs$core$IIndexed$_nth$arity$2(null,i__25447);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25448,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25448,(1),null);
var G__25449_25458 = key;
var G__25450_25459 = this$__$1;
var G__25451_25460 = oldval;
var G__25452_25461 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25449_25458,G__25450_25459,G__25451_25460,G__25452_25461) : f.call(null,G__25449_25458,G__25450_25459,G__25451_25460,G__25452_25461));

var G__25462 = seq__25444;
var G__25463 = chunk__25445;
var G__25464 = count__25446;
var G__25465 = (i__25447 + (1));
seq__25444 = G__25462;
chunk__25445 = G__25463;
count__25446 = G__25464;
i__25447 = G__25465;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25444);
if(temp__4126__auto__){
var seq__25444__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25444__$1)){
var c__4602__auto__ = cljs.core.chunk_first(seq__25444__$1);
var G__25466 = cljs.core.chunk_rest(seq__25444__$1);
var G__25467 = c__4602__auto__;
var G__25468 = cljs.core.count(c__4602__auto__);
var G__25469 = (0);
seq__25444 = G__25466;
chunk__25445 = G__25467;
count__25446 = G__25468;
i__25447 = G__25469;
continue;
} else {
var vec__25453 = cljs.core.first(seq__25444__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25453,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25453,(1),null);
var G__25454_25470 = key;
var G__25455_25471 = this$__$1;
var G__25456_25472 = oldval;
var G__25457_25473 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25454_25470,G__25455_25471,G__25456_25472,G__25457_25473) : f.call(null,G__25454_25470,G__25455_25471,G__25456_25472,G__25457_25473));

var G__25474 = cljs.core.next(seq__25444__$1);
var G__25475 = null;
var G__25476 = (0);
var G__25477 = (0);
seq__25444 = G__25474;
chunk__25445 = G__25475;
count__25446 = G__25476;
i__25447 = G__25477;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__25481__delegate = function (x,p__25478){
var map__25480 = p__25478;
var map__25480__$1 = ((cljs.core.seq_QMARK_(map__25480))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25480):map__25480);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25480__$1,cljs.core.constant$keyword$8);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25480__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__25481 = function (x,var_args){
var p__25478 = null;
if (arguments.length > 1) {
var G__25482__i = 0, G__25482__a = new Array(arguments.length -  1);
while (G__25482__i < G__25482__a.length) {G__25482__a[G__25482__i] = arguments[G__25482__i + 1]; ++G__25482__i;}
  p__25478 = new cljs.core.IndexedSeq(G__25482__a,0);
} 
return G__25481__delegate.call(this,x,p__25478);};
G__25481.cljs$lang$maxFixedArity = 1;
G__25481.cljs$lang$applyTo = (function (arglist__25483){
var x = cljs.core.first(arglist__25483);
var p__25478 = cljs.core.rest(arglist__25483);
return G__25481__delegate(x,p__25478);
});
G__25481.cljs$core$IFn$_invoke$arity$variadic = G__25481__delegate;
return G__25481;
})()
;
atom = function(x,var_args){
var p__25478 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__25484 = null;
if (arguments.length > 1) {
var G__25485__i = 0, G__25485__a = new Array(arguments.length -  1);
while (G__25485__i < G__25485__a.length) {G__25485__a[G__25485__i] = arguments[G__25485__i + 1]; ++G__25485__i;}
G__25484 = new cljs.core.IndexedSeq(G__25485__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25484);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__25488 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__25488) : validate.call(null,G__25488));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__25489 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25489) : cljs.core.pr_str.call(null,G__25489));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25496 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25496) : f.call(null,G__25496));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25497 = a.state;
var G__25498 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25497,G__25498) : f.call(null,G__25497,G__25498));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25499 = a.state;
var G__25500 = x;
var G__25501 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25499,G__25500,G__25501) : f.call(null,G__25499,G__25500,G__25501));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__25502__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__25502 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__25503__i = 0, G__25503__a = new Array(arguments.length -  4);
while (G__25503__i < G__25503__a.length) {G__25503__a[G__25503__i] = arguments[G__25503__i + 4]; ++G__25503__i;}
  more = new cljs.core.IndexedSeq(G__25503__a,0);
} 
return G__25502__delegate.call(this,a,f,x,y,more);};
G__25502.cljs$lang$maxFixedArity = 4;
G__25502.cljs$lang$applyTo = (function (arglist__25504){
var a = cljs.core.first(arglist__25504);
arglist__25504 = cljs.core.next(arglist__25504);
var f = cljs.core.first(arglist__25504);
arglist__25504 = cljs.core.next(arglist__25504);
var x = cljs.core.first(arglist__25504);
arglist__25504 = cljs.core.next(arglist__25504);
var y = cljs.core.first(arglist__25504);
var more = cljs.core.rest(arglist__25504);
return G__25502__delegate(a,f,x,y,more);
});
G__25502.cljs$core$IFn$_invoke$arity$variadic = G__25502__delegate;
return G__25502;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__25505 = null;
if (arguments.length > 4) {
var G__25506__i = 0, G__25506__a = new Array(arguments.length -  4);
while (G__25506__i < G__25506__a.length) {G__25506__a[G__25506__i] = arguments[G__25506__i + 4]; ++G__25506__i;}
G__25505 = new cljs.core.IndexedSeq(G__25506__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__25505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25573 = null;
var G__25573__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25573__1 = (function (result){
var G__25540 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25540) : rf.call(null,G__25540));
});
var G__25573__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__25541 = i;
var G__25542 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25541,G__25542) : f.call(null,G__25541,G__25542));
})();
if((v == null)){
return result;
} else {
var G__25543 = result;
var G__25544 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25543,G__25544) : rf.call(null,G__25543,G__25544));
}
});
G__25573 = function(result,input){
switch(arguments.length){
case 0:
return G__25573__0.call(this);
case 1:
return G__25573__1.call(this,result);
case 2:
return G__25573__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25573.cljs$core$IFn$_invoke$arity$0 = G__25573__0;
G__25573.cljs$core$IFn$_invoke$arity$1 = G__25573__1;
G__25573.cljs$core$IFn$_invoke$arity$2 = G__25573__2;
return G__25573;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4702__auto___25574 = size;
var i_25575 = (0);
while(true){
if((i_25575 < n__4702__auto___25574)){
var x_25576 = (function (){var G__25569 = (idx + i_25575);
var G__25570 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25575);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25569,G__25570) : f.call(null,G__25569,G__25570));
})();
if((x_25576 == null)){
} else {
cljs.core.chunk_append(b,x_25576);
}

var G__25577 = (i_25575 + (1));
i_25575 = G__25577;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25571 = idx;
var G__25572 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25571,G__25572) : f.call(null,G__25571,G__25572));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__25791 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25791) : p.call(null,G__25791));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3803__auto__ = (function (){var G__25793 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25793) : p.call(null,G__25793));
})();
if(cljs.core.truth_(and__3803__auto__)){
var G__25794 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25794) : p.call(null,G__25794));
} else {
return and__3803__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3803__auto__ = (function (){var G__25796 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25796) : p.call(null,G__25796));
})();
if(cljs.core.truth_(and__3803__auto__)){
var and__3803__auto____$1 = (function (){var G__25798 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25798) : p.call(null,G__25798));
})();
if(cljs.core.truth_(and__3803__auto____$1)){
var G__25799 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25799) : p.call(null,G__25799));
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__25968__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__25968 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25969__i = 0, G__25969__a = new Array(arguments.length -  3);
while (G__25969__i < G__25969__a.length) {G__25969__a[G__25969__i] = arguments[G__25969__i + 3]; ++G__25969__i;}
  args = new cljs.core.IndexedSeq(G__25969__a,0);
} 
return G__25968__delegate.call(this,x,y,z,args);};
G__25968.cljs$lang$maxFixedArity = 3;
G__25968.cljs$lang$applyTo = (function (arglist__25970){
var x = cljs.core.first(arglist__25970);
arglist__25970 = cljs.core.next(arglist__25970);
var y = cljs.core.first(arglist__25970);
arglist__25970 = cljs.core.next(arglist__25970);
var z = cljs.core.first(arglist__25970);
var args = cljs.core.rest(arglist__25970);
return G__25968__delegate(x,y,z,args);
});
G__25968.cljs$core$IFn$_invoke$arity$variadic = G__25968__delegate;
return G__25968;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__25971 = null;
if (arguments.length > 3) {
var G__25972__i = 0, G__25972__a = new Array(arguments.length -  3);
while (G__25972__i < G__25972__a.length) {G__25972__a[G__25972__i] = arguments[G__25972__i + 3]; ++G__25972__i;}
G__25971 = new cljs.core.IndexedSeq(G__25972__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25971);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3803__auto__ = (function (){var G__25831 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25831) : p1.call(null,G__25831));
})();
if(cljs.core.truth_(and__3803__auto__)){
var G__25832 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25832) : p2.call(null,G__25832));
} else {
return and__3803__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3803__auto__ = (function (){var G__25834 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25834) : p1.call(null,G__25834));
})();
if(cljs.core.truth_(and__3803__auto__)){
var and__3803__auto____$1 = (function (){var G__25836 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25836) : p1.call(null,G__25836));
})();
if(cljs.core.truth_(and__3803__auto____$1)){
var and__3803__auto____$2 = (function (){var G__25838 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25838) : p2.call(null,G__25838));
})();
if(cljs.core.truth_(and__3803__auto____$2)){
var G__25839 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25839) : p2.call(null,G__25839));
} else {
return and__3803__auto____$2;
}
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3803__auto__ = (function (){var G__25841 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25841) : p1.call(null,G__25841));
})();
if(cljs.core.truth_(and__3803__auto__)){
var and__3803__auto____$1 = (function (){var G__25843 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25843) : p1.call(null,G__25843));
})();
if(cljs.core.truth_(and__3803__auto____$1)){
var and__3803__auto____$2 = (function (){var G__25845 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25845) : p1.call(null,G__25845));
})();
if(cljs.core.truth_(and__3803__auto____$2)){
var and__3803__auto____$3 = (function (){var G__25847 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25847) : p2.call(null,G__25847));
})();
if(cljs.core.truth_(and__3803__auto____$3)){
var and__3803__auto____$4 = (function (){var G__25849 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25849) : p2.call(null,G__25849));
})();
if(cljs.core.truth_(and__3803__auto____$4)){
var G__25850 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25850) : p2.call(null,G__25850));
} else {
return and__3803__auto____$4;
}
} else {
return and__3803__auto____$3;
}
} else {
return and__3803__auto____$2;
}
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__25973__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25578_SHARP_){
var and__3803__auto__ = (function (){var G__25855 = p1__25578_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25855) : p1.call(null,G__25855));
})();
if(cljs.core.truth_(and__3803__auto__)){
var G__25856 = p1__25578_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25856) : p2.call(null,G__25856));
} else {
return and__3803__auto__;
}
}),args)));
};
var G__25973 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25974__i = 0, G__25974__a = new Array(arguments.length -  3);
while (G__25974__i < G__25974__a.length) {G__25974__a[G__25974__i] = arguments[G__25974__i + 3]; ++G__25974__i;}
  args = new cljs.core.IndexedSeq(G__25974__a,0);
} 
return G__25973__delegate.call(this,x,y,z,args);};
G__25973.cljs$lang$maxFixedArity = 3;
G__25973.cljs$lang$applyTo = (function (arglist__25975){
var x = cljs.core.first(arglist__25975);
arglist__25975 = cljs.core.next(arglist__25975);
var y = cljs.core.first(arglist__25975);
arglist__25975 = cljs.core.next(arglist__25975);
var z = cljs.core.first(arglist__25975);
var args = cljs.core.rest(arglist__25975);
return G__25973__delegate(x,y,z,args);
});
G__25973.cljs$core$IFn$_invoke$arity$variadic = G__25973__delegate;
return G__25973;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__25976 = null;
if (arguments.length > 3) {
var G__25977__i = 0, G__25977__a = new Array(arguments.length -  3);
while (G__25977__i < G__25977__a.length) {G__25977__a[G__25977__i] = arguments[G__25977__i + 3]; ++G__25977__i;}
G__25976 = new cljs.core.IndexedSeq(G__25977__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25976);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3803__auto__ = (function (){var G__25902 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25902) : p1.call(null,G__25902));
})();
if(cljs.core.truth_(and__3803__auto__)){
var and__3803__auto____$1 = (function (){var G__25904 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25904) : p2.call(null,G__25904));
})();
if(cljs.core.truth_(and__3803__auto____$1)){
var G__25905 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25905) : p3.call(null,G__25905));
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3803__auto__ = (function (){var G__25907 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25907) : p1.call(null,G__25907));
})();
if(cljs.core.truth_(and__3803__auto__)){
var and__3803__auto____$1 = (function (){var G__25909 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25909) : p2.call(null,G__25909));
})();
if(cljs.core.truth_(and__3803__auto____$1)){
var and__3803__auto____$2 = (function (){var G__25911 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25911) : p3.call(null,G__25911));
})();
if(cljs.core.truth_(and__3803__auto____$2)){
var and__3803__auto____$3 = (function (){var G__25913 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25913) : p1.call(null,G__25913));
})();
if(cljs.core.truth_(and__3803__auto____$3)){
var and__3803__auto____$4 = (function (){var G__25915 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25915) : p2.call(null,G__25915));
})();
if(cljs.core.truth_(and__3803__auto____$4)){
var G__25916 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25916) : p3.call(null,G__25916));
} else {
return and__3803__auto____$4;
}
} else {
return and__3803__auto____$3;
}
} else {
return and__3803__auto____$2;
}
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3803__auto__ = (function (){var G__25918 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25918) : p1.call(null,G__25918));
})();
if(cljs.core.truth_(and__3803__auto__)){
var and__3803__auto____$1 = (function (){var G__25920 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25920) : p2.call(null,G__25920));
})();
if(cljs.core.truth_(and__3803__auto____$1)){
var and__3803__auto____$2 = (function (){var G__25922 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25922) : p3.call(null,G__25922));
})();
if(cljs.core.truth_(and__3803__auto____$2)){
var and__3803__auto____$3 = (function (){var G__25924 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25924) : p1.call(null,G__25924));
})();
if(cljs.core.truth_(and__3803__auto____$3)){
var and__3803__auto____$4 = (function (){var G__25926 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25926) : p2.call(null,G__25926));
})();
if(cljs.core.truth_(and__3803__auto____$4)){
var and__3803__auto____$5 = (function (){var G__25928 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25928) : p3.call(null,G__25928));
})();
if(cljs.core.truth_(and__3803__auto____$5)){
var and__3803__auto____$6 = (function (){var G__25930 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25930) : p1.call(null,G__25930));
})();
if(cljs.core.truth_(and__3803__auto____$6)){
var and__3803__auto____$7 = (function (){var G__25932 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25932) : p2.call(null,G__25932));
})();
if(cljs.core.truth_(and__3803__auto____$7)){
var G__25933 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25933) : p3.call(null,G__25933));
} else {
return and__3803__auto____$7;
}
} else {
return and__3803__auto____$6;
}
} else {
return and__3803__auto____$5;
}
} else {
return and__3803__auto____$4;
}
} else {
return and__3803__auto____$3;
}
} else {
return and__3803__auto____$2;
}
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__25978__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25579_SHARP_){
var and__3803__auto__ = (function (){var G__25940 = p1__25579_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25940) : p1.call(null,G__25940));
})();
if(cljs.core.truth_(and__3803__auto__)){
var and__3803__auto____$1 = (function (){var G__25942 = p1__25579_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25942) : p2.call(null,G__25942));
})();
if(cljs.core.truth_(and__3803__auto____$1)){
var G__25943 = p1__25579_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__25943) : p3.call(null,G__25943));
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
}),args)));
};
var G__25978 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25979__i = 0, G__25979__a = new Array(arguments.length -  3);
while (G__25979__i < G__25979__a.length) {G__25979__a[G__25979__i] = arguments[G__25979__i + 3]; ++G__25979__i;}
  args = new cljs.core.IndexedSeq(G__25979__a,0);
} 
return G__25978__delegate.call(this,x,y,z,args);};
G__25978.cljs$lang$maxFixedArity = 3;
G__25978.cljs$lang$applyTo = (function (arglist__25980){
var x = cljs.core.first(arglist__25980);
arglist__25980 = cljs.core.next(arglist__25980);
var y = cljs.core.first(arglist__25980);
arglist__25980 = cljs.core.next(arglist__25980);
var z = cljs.core.first(arglist__25980);
var args = cljs.core.rest(arglist__25980);
return G__25978__delegate(x,y,z,args);
});
G__25978.cljs$core$IFn$_invoke$arity$variadic = G__25978__delegate;
return G__25978;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__25981 = null;
if (arguments.length > 3) {
var G__25982__i = 0, G__25982__a = new Array(arguments.length -  3);
while (G__25982__i < G__25982__a.length) {G__25982__a[G__25982__i] = arguments[G__25982__i + 3]; ++G__25982__i;}
G__25981 = new cljs.core.IndexedSeq(G__25982__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__25983__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25580_SHARP_){
var G__25959 = x;
return (p1__25580_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25580_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25959) : p1__25580_SHARP_.call(null,G__25959));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25581_SHARP_){
var and__3803__auto__ = (function (){var G__25961 = x;
return (p1__25581_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25581_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25961) : p1__25581_SHARP_.call(null,G__25961));
})();
if(cljs.core.truth_(and__3803__auto__)){
var G__25962 = y;
return (p1__25581_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25581_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25962) : p1__25581_SHARP_.call(null,G__25962));
} else {
return and__3803__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25582_SHARP_){
var and__3803__auto__ = (function (){var G__25964 = x;
return (p1__25582_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25582_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25964) : p1__25582_SHARP_.call(null,G__25964));
})();
if(cljs.core.truth_(and__3803__auto__)){
var and__3803__auto____$1 = (function (){var G__25966 = y;
return (p1__25582_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25582_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25966) : p1__25582_SHARP_.call(null,G__25966));
})();
if(cljs.core.truth_(and__3803__auto____$1)){
var G__25967 = z;
return (p1__25582_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25582_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25967) : p1__25582_SHARP_.call(null,G__25967));
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__25984__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25583_SHARP_){
return cljs.core.every_QMARK_(p1__25583_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__25984 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25985__i = 0, G__25985__a = new Array(arguments.length -  3);
while (G__25985__i < G__25985__a.length) {G__25985__a[G__25985__i] = arguments[G__25985__i + 3]; ++G__25985__i;}
  args = new cljs.core.IndexedSeq(G__25985__a,0);
} 
return G__25984__delegate.call(this,x,y,z,args);};
G__25984.cljs$lang$maxFixedArity = 3;
G__25984.cljs$lang$applyTo = (function (arglist__25986){
var x = cljs.core.first(arglist__25986);
arglist__25986 = cljs.core.next(arglist__25986);
var y = cljs.core.first(arglist__25986);
arglist__25986 = cljs.core.next(arglist__25986);
var z = cljs.core.first(arglist__25986);
var args = cljs.core.rest(arglist__25986);
return G__25984__delegate(x,y,z,args);
});
G__25984.cljs$core$IFn$_invoke$arity$variadic = G__25984__delegate;
return G__25984;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__25987 = null;
if (arguments.length > 3) {
var G__25988__i = 0, G__25988__a = new Array(arguments.length -  3);
while (G__25988__i < G__25988__a.length) {G__25988__a[G__25988__i] = arguments[G__25988__i + 3]; ++G__25988__i;}
G__25987 = new cljs.core.IndexedSeq(G__25988__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25987);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__25983 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__25989__i = 0, G__25989__a = new Array(arguments.length -  3);
while (G__25989__i < G__25989__a.length) {G__25989__a[G__25989__i] = arguments[G__25989__i + 3]; ++G__25989__i;}
  ps = new cljs.core.IndexedSeq(G__25989__a,0);
} 
return G__25983__delegate.call(this,p1,p2,p3,ps);};
G__25983.cljs$lang$maxFixedArity = 3;
G__25983.cljs$lang$applyTo = (function (arglist__25990){
var p1 = cljs.core.first(arglist__25990);
arglist__25990 = cljs.core.next(arglist__25990);
var p2 = cljs.core.first(arglist__25990);
arglist__25990 = cljs.core.next(arglist__25990);
var p3 = cljs.core.first(arglist__25990);
var ps = cljs.core.rest(arglist__25990);
return G__25983__delegate(p1,p2,p3,ps);
});
G__25983.cljs$core$IFn$_invoke$arity$variadic = G__25983__delegate;
return G__25983;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__25991 = null;
if (arguments.length > 3) {
var G__25992__i = 0, G__25992__a = new Array(arguments.length -  3);
while (G__25992__i < G__25992__a.length) {G__25992__a[G__25992__i] = arguments[G__25992__i + 3]; ++G__25992__i;}
G__25991 = new cljs.core.IndexedSeq(G__25992__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__25991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__26198 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26198) : p.call(null,G__26198));
});
var sp1__2 = (function (x,y){
var or__3815__auto__ = (function (){var G__26200 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26200) : p.call(null,G__26200));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var G__26201 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26201) : p.call(null,G__26201));
}
});
var sp1__3 = (function (x,y,z){
var or__3815__auto__ = (function (){var G__26203 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26203) : p.call(null,G__26203));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (function (){var G__26205 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26205) : p.call(null,G__26205));
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var G__26206 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26206) : p.call(null,G__26206));
}
}
});
var sp1__4 = (function() { 
var G__26367__delegate = function (x,y,z,args){
var or__3815__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__26367 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26368__i = 0, G__26368__a = new Array(arguments.length -  3);
while (G__26368__i < G__26368__a.length) {G__26368__a[G__26368__i] = arguments[G__26368__i + 3]; ++G__26368__i;}
  args = new cljs.core.IndexedSeq(G__26368__a,0);
} 
return G__26367__delegate.call(this,x,y,z,args);};
G__26367.cljs$lang$maxFixedArity = 3;
G__26367.cljs$lang$applyTo = (function (arglist__26369){
var x = cljs.core.first(arglist__26369);
arglist__26369 = cljs.core.next(arglist__26369);
var y = cljs.core.first(arglist__26369);
arglist__26369 = cljs.core.next(arglist__26369);
var z = cljs.core.first(arglist__26369);
var args = cljs.core.rest(arglist__26369);
return G__26367__delegate(x,y,z,args);
});
G__26367.cljs$core$IFn$_invoke$arity$variadic = G__26367__delegate;
return G__26367;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__26370 = null;
if (arguments.length > 3) {
var G__26371__i = 0, G__26371__a = new Array(arguments.length -  3);
while (G__26371__i < G__26371__a.length) {G__26371__a[G__26371__i] = arguments[G__26371__i + 3]; ++G__26371__i;}
G__26370 = new cljs.core.IndexedSeq(G__26371__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26370);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3815__auto__ = (function (){var G__26238 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26238) : p1.call(null,G__26238));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var G__26239 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26239) : p2.call(null,G__26239));
}
});
var sp2__2 = (function (x,y){
var or__3815__auto__ = (function (){var G__26241 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26241) : p1.call(null,G__26241));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (function (){var G__26243 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26243) : p1.call(null,G__26243));
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var or__3815__auto____$2 = (function (){var G__26245 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26245) : p2.call(null,G__26245));
})();
if(cljs.core.truth_(or__3815__auto____$2)){
return or__3815__auto____$2;
} else {
var G__26246 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26246) : p2.call(null,G__26246));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3815__auto__ = (function (){var G__26248 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26248) : p1.call(null,G__26248));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (function (){var G__26250 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26250) : p1.call(null,G__26250));
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var or__3815__auto____$2 = (function (){var G__26252 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26252) : p1.call(null,G__26252));
})();
if(cljs.core.truth_(or__3815__auto____$2)){
return or__3815__auto____$2;
} else {
var or__3815__auto____$3 = (function (){var G__26254 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26254) : p2.call(null,G__26254));
})();
if(cljs.core.truth_(or__3815__auto____$3)){
return or__3815__auto____$3;
} else {
var or__3815__auto____$4 = (function (){var G__26256 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26256) : p2.call(null,G__26256));
})();
if(cljs.core.truth_(or__3815__auto____$4)){
return or__3815__auto____$4;
} else {
var G__26257 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26257) : p2.call(null,G__26257));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__26372__delegate = function (x,y,z,args){
var or__3815__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return cljs.core.some(((function (or__3815__auto__){
return (function (p1__25993_SHARP_){
var or__3815__auto____$1 = (function (){var G__26259 = p1__25993_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26259) : p1.call(null,G__26259));
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var G__26260 = p1__25993_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26260) : p2.call(null,G__26260));
}
});})(or__3815__auto__))
,args);
}
};
var G__26372 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26373__i = 0, G__26373__a = new Array(arguments.length -  3);
while (G__26373__i < G__26373__a.length) {G__26373__a[G__26373__i] = arguments[G__26373__i + 3]; ++G__26373__i;}
  args = new cljs.core.IndexedSeq(G__26373__a,0);
} 
return G__26372__delegate.call(this,x,y,z,args);};
G__26372.cljs$lang$maxFixedArity = 3;
G__26372.cljs$lang$applyTo = (function (arglist__26374){
var x = cljs.core.first(arglist__26374);
arglist__26374 = cljs.core.next(arglist__26374);
var y = cljs.core.first(arglist__26374);
arglist__26374 = cljs.core.next(arglist__26374);
var z = cljs.core.first(arglist__26374);
var args = cljs.core.rest(arglist__26374);
return G__26372__delegate(x,y,z,args);
});
G__26372.cljs$core$IFn$_invoke$arity$variadic = G__26372__delegate;
return G__26372;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__26375 = null;
if (arguments.length > 3) {
var G__26376__i = 0, G__26376__a = new Array(arguments.length -  3);
while (G__26376__i < G__26376__a.length) {G__26376__a[G__26376__i] = arguments[G__26376__i + 3]; ++G__26376__i;}
G__26375 = new cljs.core.IndexedSeq(G__26376__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26375);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3815__auto__ = (function (){var G__26306 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26306) : p1.call(null,G__26306));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (function (){var G__26308 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26308) : p2.call(null,G__26308));
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var G__26309 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26309) : p3.call(null,G__26309));
}
}
});
var sp3__2 = (function (x,y){
var or__3815__auto__ = (function (){var G__26311 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26311) : p1.call(null,G__26311));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (function (){var G__26313 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26313) : p2.call(null,G__26313));
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var or__3815__auto____$2 = (function (){var G__26315 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26315) : p3.call(null,G__26315));
})();
if(cljs.core.truth_(or__3815__auto____$2)){
return or__3815__auto____$2;
} else {
var or__3815__auto____$3 = (function (){var G__26317 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26317) : p1.call(null,G__26317));
})();
if(cljs.core.truth_(or__3815__auto____$3)){
return or__3815__auto____$3;
} else {
var or__3815__auto____$4 = (function (){var G__26319 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26319) : p2.call(null,G__26319));
})();
if(cljs.core.truth_(or__3815__auto____$4)){
return or__3815__auto____$4;
} else {
var G__26320 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26320) : p3.call(null,G__26320));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3815__auto__ = (function (){var G__26322 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26322) : p1.call(null,G__26322));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (function (){var G__26324 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26324) : p2.call(null,G__26324));
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var or__3815__auto____$2 = (function (){var G__26326 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26326) : p3.call(null,G__26326));
})();
if(cljs.core.truth_(or__3815__auto____$2)){
return or__3815__auto____$2;
} else {
var or__3815__auto____$3 = (function (){var G__26328 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26328) : p1.call(null,G__26328));
})();
if(cljs.core.truth_(or__3815__auto____$3)){
return or__3815__auto____$3;
} else {
var or__3815__auto____$4 = (function (){var G__26330 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26330) : p2.call(null,G__26330));
})();
if(cljs.core.truth_(or__3815__auto____$4)){
return or__3815__auto____$4;
} else {
var or__3815__auto____$5 = (function (){var G__26332 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26332) : p3.call(null,G__26332));
})();
if(cljs.core.truth_(or__3815__auto____$5)){
return or__3815__auto____$5;
} else {
var or__3815__auto____$6 = (function (){var G__26334 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26334) : p1.call(null,G__26334));
})();
if(cljs.core.truth_(or__3815__auto____$6)){
return or__3815__auto____$6;
} else {
var or__3815__auto____$7 = (function (){var G__26336 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26336) : p2.call(null,G__26336));
})();
if(cljs.core.truth_(or__3815__auto____$7)){
return or__3815__auto____$7;
} else {
var G__26337 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26337) : p3.call(null,G__26337));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__26377__delegate = function (x,y,z,args){
var or__3815__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return cljs.core.some(((function (or__3815__auto__){
return (function (p1__25994_SHARP_){
var or__3815__auto____$1 = (function (){var G__26339 = p1__25994_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26339) : p1.call(null,G__26339));
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var or__3815__auto____$2 = (function (){var G__26341 = p1__25994_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26341) : p2.call(null,G__26341));
})();
if(cljs.core.truth_(or__3815__auto____$2)){
return or__3815__auto____$2;
} else {
var G__26342 = p1__25994_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26342) : p3.call(null,G__26342));
}
}
});})(or__3815__auto__))
,args);
}
};
var G__26377 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26378__i = 0, G__26378__a = new Array(arguments.length -  3);
while (G__26378__i < G__26378__a.length) {G__26378__a[G__26378__i] = arguments[G__26378__i + 3]; ++G__26378__i;}
  args = new cljs.core.IndexedSeq(G__26378__a,0);
} 
return G__26377__delegate.call(this,x,y,z,args);};
G__26377.cljs$lang$maxFixedArity = 3;
G__26377.cljs$lang$applyTo = (function (arglist__26379){
var x = cljs.core.first(arglist__26379);
arglist__26379 = cljs.core.next(arglist__26379);
var y = cljs.core.first(arglist__26379);
arglist__26379 = cljs.core.next(arglist__26379);
var z = cljs.core.first(arglist__26379);
var args = cljs.core.rest(arglist__26379);
return G__26377__delegate(x,y,z,args);
});
G__26377.cljs$core$IFn$_invoke$arity$variadic = G__26377__delegate;
return G__26377;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__26380 = null;
if (arguments.length > 3) {
var G__26381__i = 0, G__26381__a = new Array(arguments.length -  3);
while (G__26381__i < G__26381__a.length) {G__26381__a[G__26381__i] = arguments[G__26381__i + 3]; ++G__26381__i;}
G__26380 = new cljs.core.IndexedSeq(G__26381__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26380);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__26382__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__25995_SHARP_){
var G__26358 = x;
return (p1__25995_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25995_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26358) : p1__25995_SHARP_.call(null,G__26358));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__25996_SHARP_){
var or__3815__auto__ = (function (){var G__26360 = x;
return (p1__25996_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25996_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26360) : p1__25996_SHARP_.call(null,G__26360));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var G__26361 = y;
return (p1__25996_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25996_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26361) : p1__25996_SHARP_.call(null,G__26361));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__25997_SHARP_){
var or__3815__auto__ = (function (){var G__26363 = x;
return (p1__25997_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25997_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26363) : p1__25997_SHARP_.call(null,G__26363));
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (function (){var G__26365 = y;
return (p1__25997_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25997_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26365) : p1__25997_SHARP_.call(null,G__26365));
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var G__26366 = z;
return (p1__25997_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25997_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26366) : p1__25997_SHARP_.call(null,G__26366));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__26383__delegate = function (x,y,z,args){
var or__3815__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return cljs.core.some(((function (or__3815__auto__,ps__$1){
return (function (p1__25998_SHARP_){
return cljs.core.some(p1__25998_SHARP_,args);
});})(or__3815__auto__,ps__$1))
,ps__$1);
}
};
var G__26383 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26384__i = 0, G__26384__a = new Array(arguments.length -  3);
while (G__26384__i < G__26384__a.length) {G__26384__a[G__26384__i] = arguments[G__26384__i + 3]; ++G__26384__i;}
  args = new cljs.core.IndexedSeq(G__26384__a,0);
} 
return G__26383__delegate.call(this,x,y,z,args);};
G__26383.cljs$lang$maxFixedArity = 3;
G__26383.cljs$lang$applyTo = (function (arglist__26385){
var x = cljs.core.first(arglist__26385);
arglist__26385 = cljs.core.next(arglist__26385);
var y = cljs.core.first(arglist__26385);
arglist__26385 = cljs.core.next(arglist__26385);
var z = cljs.core.first(arglist__26385);
var args = cljs.core.rest(arglist__26385);
return G__26383__delegate(x,y,z,args);
});
G__26383.cljs$core$IFn$_invoke$arity$variadic = G__26383__delegate;
return G__26383;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__26386 = null;
if (arguments.length > 3) {
var G__26387__i = 0, G__26387__a = new Array(arguments.length -  3);
while (G__26387__i < G__26387__a.length) {G__26387__a[G__26387__i] = arguments[G__26387__i + 3]; ++G__26387__i;}
G__26386 = new cljs.core.IndexedSeq(G__26387__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26386);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__26382 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26388__i = 0, G__26388__a = new Array(arguments.length -  3);
while (G__26388__i < G__26388__a.length) {G__26388__a[G__26388__i] = arguments[G__26388__i + 3]; ++G__26388__i;}
  ps = new cljs.core.IndexedSeq(G__26388__a,0);
} 
return G__26382__delegate.call(this,p1,p2,p3,ps);};
G__26382.cljs$lang$maxFixedArity = 3;
G__26382.cljs$lang$applyTo = (function (arglist__26389){
var p1 = cljs.core.first(arglist__26389);
arglist__26389 = cljs.core.next(arglist__26389);
var p2 = cljs.core.first(arglist__26389);
arglist__26389 = cljs.core.next(arglist__26389);
var p3 = cljs.core.first(arglist__26389);
var ps = cljs.core.rest(arglist__26389);
return G__26382__delegate(p1,p2,p3,ps);
});
G__26382.cljs$core$IFn$_invoke$arity$variadic = G__26382__delegate;
return G__26382;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__26390 = null;
if (arguments.length > 3) {
var G__26391__i = 0, G__26391__a = new Array(arguments.length -  3);
while (G__26391__i < G__26391__a.length) {G__26391__a[G__26391__i] = arguments[G__26391__i + 3]; ++G__26391__i;}
G__26390 = new cljs.core.IndexedSeq(G__26391__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__26446 = null;
var G__26446__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26446__1 = (function (result){
var G__26432 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26432) : rf.call(null,G__26432));
});
var G__26446__2 = (function (result,input){
var G__26433 = result;
var G__26434 = (function (){var G__26435 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26435) : f.call(null,G__26435));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26433,G__26434) : rf.call(null,G__26433,G__26434));
});
var G__26446__3 = (function() { 
var G__26447__delegate = function (result,input,inputs){
var G__26436 = result;
var G__26437 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26436,G__26437) : rf.call(null,G__26436,G__26437));
};
var G__26447 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__26448__i = 0, G__26448__a = new Array(arguments.length -  2);
while (G__26448__i < G__26448__a.length) {G__26448__a[G__26448__i] = arguments[G__26448__i + 2]; ++G__26448__i;}
  inputs = new cljs.core.IndexedSeq(G__26448__a,0);
} 
return G__26447__delegate.call(this,result,input,inputs);};
G__26447.cljs$lang$maxFixedArity = 2;
G__26447.cljs$lang$applyTo = (function (arglist__26449){
var result = cljs.core.first(arglist__26449);
arglist__26449 = cljs.core.next(arglist__26449);
var input = cljs.core.first(arglist__26449);
var inputs = cljs.core.rest(arglist__26449);
return G__26447__delegate(result,input,inputs);
});
G__26447.cljs$core$IFn$_invoke$arity$variadic = G__26447__delegate;
return G__26447;
})()
;
G__26446 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__26446__0.call(this);
case 1:
return G__26446__1.call(this,result);
case 2:
return G__26446__2.call(this,result,input);
default:
var G__26450 = null;
if (arguments.length > 2) {
var G__26451__i = 0, G__26451__a = new Array(arguments.length -  2);
while (G__26451__i < G__26451__a.length) {G__26451__a[G__26451__i] = arguments[G__26451__i + 2]; ++G__26451__i;}
G__26450 = new cljs.core.IndexedSeq(G__26451__a,0);
}
return G__26446__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__26450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26446.cljs$lang$maxFixedArity = 2;
G__26446.cljs$lang$applyTo = G__26446__3.cljs$lang$applyTo;
G__26446.cljs$core$IFn$_invoke$arity$0 = G__26446__0;
G__26446.cljs$core$IFn$_invoke$arity$1 = G__26446__1;
G__26446.cljs$core$IFn$_invoke$arity$2 = G__26446__2;
G__26446.cljs$core$IFn$_invoke$arity$variadic = G__26446__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26446;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4702__auto___26452 = size;
var i_26453 = (0);
while(true){
if((i_26453 < n__4702__auto___26452)){
cljs.core.chunk_append(b,(function (){var G__26438 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26453);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26438) : f.call(null,G__26438));
})());

var G__26454 = (i_26453 + (1));
i_26453 = G__26454;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26439 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26439) : f.call(null,G__26439));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__26440 = cljs.core.first(s1);
var G__26441 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26440,G__26441) : f.call(null,G__26440,G__26441));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__26442 = cljs.core.first(s1);
var G__26443 = cljs.core.first(s2);
var G__26444 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26442,G__26443,G__26444) : f.call(null,G__26442,G__26443,G__26444));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__26455__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__26392_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__26392_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__26455 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26456__i = 0, G__26456__a = new Array(arguments.length -  4);
while (G__26456__i < G__26456__a.length) {G__26456__a[G__26456__i] = arguments[G__26456__i + 4]; ++G__26456__i;}
  colls = new cljs.core.IndexedSeq(G__26456__a,0);
} 
return G__26455__delegate.call(this,f,c1,c2,c3,colls);};
G__26455.cljs$lang$maxFixedArity = 4;
G__26455.cljs$lang$applyTo = (function (arglist__26457){
var f = cljs.core.first(arglist__26457);
arglist__26457 = cljs.core.next(arglist__26457);
var c1 = cljs.core.first(arglist__26457);
arglist__26457 = cljs.core.next(arglist__26457);
var c2 = cljs.core.first(arglist__26457);
arglist__26457 = cljs.core.next(arglist__26457);
var c3 = cljs.core.first(arglist__26457);
var colls = cljs.core.rest(arglist__26457);
return G__26455__delegate(f,c1,c2,c3,colls);
});
G__26455.cljs$core$IFn$_invoke$arity$variadic = G__26455__delegate;
return G__26455;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__26458 = null;
if (arguments.length > 4) {
var G__26459__i = 0, G__26459__a = new Array(arguments.length -  4);
while (G__26459__i < G__26459__a.length) {G__26459__a[G__26459__i] = arguments[G__26459__i + 4]; ++G__26459__i;}
G__26458 = new cljs.core.IndexedSeq(G__26459__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26458);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26468 = null;
var G__26468__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26468__1 = (function (result){
var G__26465 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26465) : rf.call(null,G__26465));
});
var G__26468__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__26466 = result;
var G__26467 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26466,G__26467) : rf.call(null,G__26466,G__26467));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__26468 = function(result,input){
switch(arguments.length){
case 0:
return G__26468__0.call(this);
case 1:
return G__26468__1.call(this,result);
case 2:
return G__26468__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26468.cljs$core$IFn$_invoke$arity$0 = G__26468__0;
G__26468.cljs$core$IFn$_invoke$arity$1 = G__26468__1;
G__26468.cljs$core$IFn$_invoke$arity$2 = G__26468__2;
return G__26468;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26475 = null;
var G__26475__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26475__1 = (function (result){
var G__26472 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26472) : rf.call(null,G__26472));
});
var G__26475__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__26473 = result;
var G__26474 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26473,G__26474) : rf.call(null,G__26473,G__26474));
}
});
G__26475 = function(result,input){
switch(arguments.length){
case 0:
return G__26475__0.call(this);
case 1:
return G__26475__1.call(this,result);
case 2:
return G__26475__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26475.cljs$core$IFn$_invoke$arity$0 = G__26475__0;
G__26475.cljs$core$IFn$_invoke$arity$1 = G__26475__1;
G__26475.cljs$core$IFn$_invoke$arity$2 = G__26475__2;
return G__26475;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__26476 = (n__$1 - (1));
var G__26477 = cljs.core.rest(s);
n__$1 = G__26476;
coll__$1 = G__26477;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__26480 = cljs.core.next(s);
var G__26481 = cljs.core.next(lead);
s = G__26480;
lead = G__26481;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__26494 = null;
var G__26494__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26494__1 = (function (result){
var G__26488 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26488) : rf.call(null,G__26488));
});
var G__26494__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3803__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3803__auto__)){
var G__26489 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26489) : pred.call(null,G__26489));
} else {
return and__3803__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__26490 = result;
var G__26491 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26490,G__26491) : rf.call(null,G__26490,G__26491));
}
});
G__26494 = function(result,input){
switch(arguments.length){
case 0:
return G__26494__0.call(this);
case 1:
return G__26494__1.call(this,result);
case 2:
return G__26494__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26494.cljs$core$IFn$_invoke$arity$0 = G__26494__0;
G__26494.cljs$core$IFn$_invoke$arity$1 = G__26494__1;
G__26494.cljs$core$IFn$_invoke$arity$2 = G__26494__2;
return G__26494;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3803__auto__ = s;
if(and__3803__auto__){
var G__26493 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__26493) : pred__$1.call(null,G__26493));
} else {
return and__3803__auto__;
}
})())){
var G__26495 = pred__$1;
var G__26496 = cljs.core.rest(s);
pred__$1 = G__26495;
coll__$1 = G__26496;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__26505 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26505) : f.call(null,G__26505));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__26508__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__26508 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26509__i = 0, G__26509__a = new Array(arguments.length -  2);
while (G__26509__i < G__26509__a.length) {G__26509__a[G__26509__i] = arguments[G__26509__i + 2]; ++G__26509__i;}
  colls = new cljs.core.IndexedSeq(G__26509__a,0);
} 
return G__26508__delegate.call(this,c1,c2,colls);};
G__26508.cljs$lang$maxFixedArity = 2;
G__26508.cljs$lang$applyTo = (function (arglist__26510){
var c1 = cljs.core.first(arglist__26510);
arglist__26510 = cljs.core.next(arglist__26510);
var c2 = cljs.core.first(arglist__26510);
var colls = cljs.core.rest(arglist__26510);
return G__26508__delegate(c1,c2,colls);
});
G__26508.cljs$core$IFn$_invoke$arity$variadic = G__26508__delegate;
return G__26508;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__26511 = null;
if (arguments.length > 2) {
var G__26512__i = 0, G__26512__a = new Array(arguments.length -  2);
while (G__26512__i < G__26512__a.length) {G__26512__a[G__26512__i] = arguments[G__26512__i + 2]; ++G__26512__i;}
G__26511 = new cljs.core.IndexedSeq(G__26512__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__26511);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__26527 = null;
var G__26527__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26527__1 = (function (result){
var G__26520 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26520) : rf.call(null,G__26520));
});
var G__26527__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__26521 = result;
var G__26522 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26521,G__26522) : rf.call(null,G__26521,G__26522));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__26523 = sepr;
var G__26524 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26523,G__26524) : rf.call(null,G__26523,G__26524));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__26525 = result;
var G__26526 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26525,G__26526) : rf.call(null,G__26525,G__26526));
}
});
G__26527 = function(result,input){
switch(arguments.length){
case 0:
return G__26527__0.call(this);
case 1:
return G__26527__1.call(this,result);
case 2:
return G__26527__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26527.cljs$core$IFn$_invoke$arity$0 = G__26527__0;
G__26527.cljs$core$IFn$_invoke$arity$1 = G__26527__1;
G__26527.cljs$core$IFn$_invoke$arity$2 = G__26527__2;
return G__26527;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__26536__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__26536 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__26537__i = 0, G__26537__a = new Array(arguments.length -  1);
while (G__26537__i < G__26537__a.length) {G__26537__a[G__26537__i] = arguments[G__26537__i + 1]; ++G__26537__i;}
  colls = new cljs.core.IndexedSeq(G__26537__a,0);
} 
return G__26536__delegate.call(this,f,colls);};
G__26536.cljs$lang$maxFixedArity = 1;
G__26536.cljs$lang$applyTo = (function (arglist__26538){
var f = cljs.core.first(arglist__26538);
var colls = cljs.core.rest(arglist__26538);
return G__26536__delegate(f,colls);
});
G__26536.cljs$core$IFn$_invoke$arity$variadic = G__26536__delegate;
return G__26536;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__26539 = null;
if (arguments.length > 1) {
var G__26540__i = 0, G__26540__a = new Array(arguments.length -  1);
while (G__26540__i < G__26540__a.length) {G__26540__a[G__26540__i] = arguments[G__26540__i + 1]; ++G__26540__i;}
G__26539 = new cljs.core.IndexedSeq(G__26540__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__26539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__26559 = null;
var G__26559__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26559__1 = (function (result){
var G__26553 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26553) : rf.call(null,G__26553));
});
var G__26559__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__26554 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26554) : pred.call(null,G__26554));
})())){
var G__26555 = result;
var G__26556 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26555,G__26556) : rf.call(null,G__26555,G__26556));
} else {
return result;
}
});
G__26559 = function(result,input){
switch(arguments.length){
case 0:
return G__26559__0.call(this);
case 1:
return G__26559__1.call(this,result);
case 2:
return G__26559__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26559.cljs$core$IFn$_invoke$arity$0 = G__26559__0;
G__26559.cljs$core$IFn$_invoke$arity$1 = G__26559__1;
G__26559.cljs$core$IFn$_invoke$arity$2 = G__26559__2;
return G__26559;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4702__auto___26560 = size;
var i_26561 = (0);
while(true){
if((i_26561 < n__4702__auto___26560)){
if(cljs.core.truth_((function (){var G__26557 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26561);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26557) : pred.call(null,G__26557));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26561));
} else {
}

var G__26562 = (i_26561 + (1));
i_26561 = G__26562;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__26558 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26558) : pred.call(null,G__26558));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__26569 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__26569) : branch_QMARK_.call(null,G__26569));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__26570 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__26570) : children.call(null,G__26570));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__26571_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__26571_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__26574 = to;
if(G__26574){
var bit__4489__auto__ = (G__26574.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4489__auto__) || (G__26574.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__26575 = to;
if(G__26575){
var bit__4489__auto__ = (G__26575.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4489__auto__) || (G__26575.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__26577 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26577) : f.call(null,G__26577));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__26578__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__26578 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26579__i = 0, G__26579__a = new Array(arguments.length -  4);
while (G__26579__i < G__26579__a.length) {G__26579__a[G__26579__i] = arguments[G__26579__i + 4]; ++G__26579__i;}
  colls = new cljs.core.IndexedSeq(G__26579__a,0);
} 
return G__26578__delegate.call(this,f,c1,c2,c3,colls);};
G__26578.cljs$lang$maxFixedArity = 4;
G__26578.cljs$lang$applyTo = (function (arglist__26580){
var f = cljs.core.first(arglist__26580);
arglist__26580 = cljs.core.next(arglist__26580);
var c1 = cljs.core.first(arglist__26580);
arglist__26580 = cljs.core.next(arglist__26580);
var c2 = cljs.core.first(arglist__26580);
arglist__26580 = cljs.core.next(arglist__26580);
var c3 = cljs.core.first(arglist__26580);
var colls = cljs.core.rest(arglist__26580);
return G__26578__delegate(f,c1,c2,c3,colls);
});
G__26578.cljs$core$IFn$_invoke$arity$variadic = G__26578__delegate;
return G__26578;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__26581 = null;
if (arguments.length > 4) {
var G__26582__i = 0, G__26582__a = new Array(arguments.length -  4);
while (G__26582__i < G__26582__a.length) {G__26582__a[G__26582__i] = arguments[G__26582__i + 4]; ++G__26582__i;}
G__26581 = new cljs.core.IndexedSeq(G__26582__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26581);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__26584 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26584) : pred.call(null,G__26584));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__26599 = m__$1;
if(G__26599){
var bit__4496__auto__ = (G__26599.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4496__auto__) || (G__26599.cljs$core$ILookup$)){
return true;
} else {
if((!G__26599.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26599);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26599);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__26600 = sentinel;
var G__26601 = m__$2;
var G__26602 = cljs.core.next(ks__$1);
sentinel = G__26600;
m__$1 = G__26601;
ks__$1 = G__26602;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__26603,v){
var vec__26608 = p__26603;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26608,(0),null);
var ks = cljs.core.nthnext(vec__26608,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__26609,f){
var vec__26647 = p__26609;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26647,(0),null);
var ks = cljs.core.nthnext(vec__26647,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26648 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26648) : f.call(null,G__26648));
})());
}
});
var update_in__4 = (function (m,p__26610,f,a){
var vec__26649 = p__26610;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26649,(0),null);
var ks = cljs.core.nthnext(vec__26649,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26650 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26651 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26650,G__26651) : f.call(null,G__26650,G__26651));
})());
}
});
var update_in__5 = (function (m,p__26611,f,a,b){
var vec__26652 = p__26611;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26652,(0),null);
var ks = cljs.core.nthnext(vec__26652,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26653 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26654 = a;
var G__26655 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26653,G__26654,G__26655) : f.call(null,G__26653,G__26654,G__26655));
})());
}
});
var update_in__6 = (function (m,p__26612,f,a,b,c){
var vec__26656 = p__26612;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26656,(0),null);
var ks = cljs.core.nthnext(vec__26656,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26657 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26658 = a;
var G__26659 = b;
var G__26660 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26657,G__26658,G__26659,G__26660) : f.call(null,G__26657,G__26658,G__26659,G__26660));
})());
}
});
var update_in__7 = (function() { 
var G__26662__delegate = function (m,p__26613,f,a,b,c,args){
var vec__26661 = p__26613;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26661,(0),null);
var ks = cljs.core.nthnext(vec__26661,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__26662 = function (m,p__26613,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__26663__i = 0, G__26663__a = new Array(arguments.length -  6);
while (G__26663__i < G__26663__a.length) {G__26663__a[G__26663__i] = arguments[G__26663__i + 6]; ++G__26663__i;}
  args = new cljs.core.IndexedSeq(G__26663__a,0);
} 
return G__26662__delegate.call(this,m,p__26613,f,a,b,c,args);};
G__26662.cljs$lang$maxFixedArity = 6;
G__26662.cljs$lang$applyTo = (function (arglist__26664){
var m = cljs.core.first(arglist__26664);
arglist__26664 = cljs.core.next(arglist__26664);
var p__26613 = cljs.core.first(arglist__26664);
arglist__26664 = cljs.core.next(arglist__26664);
var f = cljs.core.first(arglist__26664);
arglist__26664 = cljs.core.next(arglist__26664);
var a = cljs.core.first(arglist__26664);
arglist__26664 = cljs.core.next(arglist__26664);
var b = cljs.core.first(arglist__26664);
arglist__26664 = cljs.core.next(arglist__26664);
var c = cljs.core.first(arglist__26664);
var args = cljs.core.rest(arglist__26664);
return G__26662__delegate(m,p__26613,f,a,b,c,args);
});
G__26662.cljs$core$IFn$_invoke$arity$variadic = G__26662__delegate;
return G__26662;
})()
;
update_in = function(m,p__26613,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__26613,f);
case 4:
return update_in__4.call(this,m,p__26613,f,a);
case 5:
return update_in__5.call(this,m,p__26613,f,a,b);
case 6:
return update_in__6.call(this,m,p__26613,f,a,b,c);
default:
var G__26665 = null;
if (arguments.length > 6) {
var G__26666__i = 0, G__26666__a = new Array(arguments.length -  6);
while (G__26666__i < G__26666__a.length) {G__26666__a[G__26666__i] = arguments[G__26666__i + 6]; ++G__26666__i;}
G__26665 = new cljs.core.IndexedSeq(G__26666__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__26613,f,a,b,c, G__26665);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26677 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26677) : f.call(null,G__26677));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26678 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26679 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26678,G__26679) : f.call(null,G__26678,G__26679));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26680 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26681 = x;
var G__26682 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26680,G__26681,G__26682) : f.call(null,G__26680,G__26681,G__26682));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26683 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26684 = x;
var G__26685 = y;
var G__26686 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26683,G__26684,G__26685,G__26686) : f.call(null,G__26683,G__26684,G__26685,G__26686));
})());
});
var update__7 = (function() { 
var G__26687__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__26687 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__26688__i = 0, G__26688__a = new Array(arguments.length -  6);
while (G__26688__i < G__26688__a.length) {G__26688__a[G__26688__i] = arguments[G__26688__i + 6]; ++G__26688__i;}
  more = new cljs.core.IndexedSeq(G__26688__a,0);
} 
return G__26687__delegate.call(this,m,k,f,x,y,z,more);};
G__26687.cljs$lang$maxFixedArity = 6;
G__26687.cljs$lang$applyTo = (function (arglist__26689){
var m = cljs.core.first(arglist__26689);
arglist__26689 = cljs.core.next(arglist__26689);
var k = cljs.core.first(arglist__26689);
arglist__26689 = cljs.core.next(arglist__26689);
var f = cljs.core.first(arglist__26689);
arglist__26689 = cljs.core.next(arglist__26689);
var x = cljs.core.first(arglist__26689);
arglist__26689 = cljs.core.next(arglist__26689);
var y = cljs.core.first(arglist__26689);
arglist__26689 = cljs.core.next(arglist__26689);
var z = cljs.core.first(arglist__26689);
var more = cljs.core.rest(arglist__26689);
return G__26687__delegate(m,k,f,x,y,z,more);
});
G__26687.cljs$core$IFn$_invoke$arity$variadic = G__26687__delegate;
return G__26687;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__26690 = null;
if (arguments.length > 6) {
var G__26691__i = 0, G__26691__a = new Array(arguments.length -  6);
while (G__26691__i < G__26691__a.length) {G__26691__a[G__26691__i] = arguments[G__26691__i + 6]; ++G__26691__i;}
G__26690 = new cljs.core.IndexedSeq(G__26691__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__26690);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__26692 = (ll - (5));
var G__26693 = r;
ll = G__26692;
ret = G__26693;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26698 = cljs.core.pv_aget(node,(0));
var G__26699 = (level - (5));
node = G__26698;
level = G__26699;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26700 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__26701 = (level - (5));
node = G__26700;
level = G__26701;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26711 = init__$2;
var G__26712 = (j + i);
var G__26713 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26711,G__26712,G__26713) : f.call(null,G__26711,G__26712,G__26713));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26724 = (j + (1));
var G__26725 = init__$3;
j = G__26724;
init__$2 = G__26725;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26714 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26714) : cljs.core.deref.call(null,G__26714));
} else {
var G__26726 = (i + len);
var G__26727 = init__$2;
i = G__26726;
init__$1 = G__26727;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__26715 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__26715) : cljs.core.tv_editable_root.call(null,G__26715));
})(),(function (){var G__26716 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__26716) : cljs.core.tv_editable_tail.call(null,G__26716));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26717 = init__$2;
var G__26718 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26717,G__26718) : f.call(null,G__26717,G__26718));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26728 = (j + (1));
var G__26729 = init__$3;
j = G__26728;
init__$2 = G__26729;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26719 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26719) : cljs.core.deref.call(null,G__26719));
} else {
var G__26730 = (i + len);
var G__26731 = init__$2;
i = G__26730;
init__$1 = G__26731;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__26720 = coll__$1;
var G__26721 = cljs.core.first_array_for_longvec(coll__$1);
var G__26722 = (0);
var G__26723 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26720,G__26721,G__26722,G__26723) : cljs.core.chunked_seq.call(null,G__26720,G__26721,G__26722,G__26723));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4702__auto___26732 = len;
var i_26733 = (0);
while(true){
if((i_26733 < n__4702__auto___26732)){
(new_tail[i_26733] = (self__.tail[i_26733]));

var G__26734 = (i_26733 + (1));
i_26733 = G__26734;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__26735 = null;
var G__26735__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26735__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26735 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26735__2.call(this,self__,k);
case 3:
return G__26735__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26735.cljs$core$IFn$_invoke$arity$2 = G__26735__2;
G__26735.cljs$core$IFn$_invoke$arity$3 = G__26735__3;
return G__26735;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args26710){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26710)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__26736 = (i + (1));
var G__26737 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__26736;
out = G__26737;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26738__i = 0, G__26738__a = new Array(arguments.length -  0);
while (G__26738__i < G__26738__a.length) {G__26738__a[G__26738__i] = arguments[G__26738__i + 0]; ++G__26738__i;}
  args = new cljs.core.IndexedSeq(G__26738__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__26739){
var args = cljs.core.seq(arglist__26739);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26740 = self__.vec;
var G__26741 = self__.node;
var G__26742 = self__.i;
var G__26743 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26740,G__26741,G__26742,G__26743) : cljs.core.chunked_seq.call(null,G__26740,G__26741,G__26742,G__26743));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__26744 = self__.vec;
var G__26745 = (self__.i + self__.off);
var G__26746 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26744,G__26745,G__26746) : cljs.core.subvec.call(null,G__26744,G__26745,G__26746));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__26747 = self__.vec;
var G__26748 = (self__.i + self__.off);
var G__26749 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26747,G__26748,G__26749) : cljs.core.subvec.call(null,G__26747,G__26748,G__26749));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26750 = self__.vec;
var G__26751 = self__.node;
var G__26752 = self__.i;
var G__26753 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26750,G__26751,G__26752,G__26753) : cljs.core.chunked_seq.call(null,G__26750,G__26751,G__26752,G__26753));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26754 = self__.vec;
var G__26755 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26756 = end;
var G__26757 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26754,G__26755,G__26756,G__26757) : cljs.core.chunked_seq.call(null,G__26754,G__26755,G__26756,G__26757));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__26758 = self__.vec;
var G__26759 = self__.node;
var G__26760 = self__.i;
var G__26761 = self__.off;
var G__26762 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__26758,G__26759,G__26760,G__26761,G__26762) : cljs.core.chunked_seq.call(null,G__26758,G__26759,G__26760,G__26761,G__26762));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26763 = self__.vec;
var G__26764 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26765 = end;
var G__26766 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26763,G__26764,G__26765,G__26766) : cljs.core.chunked_seq.call(null,G__26763,G__26764,G__26765,G__26766));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__26768 = self__.meta;
var G__26769 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__26770 = self__.start;
var G__26771 = (function (){var x__4132__auto__ = self__.end;
var y__4133__auto__ = (v_pos + (1));
return ((x__4132__auto__ > y__4133__auto__) ? x__4132__auto__ : y__4133__auto__);
})();
var G__26772 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26768,G__26769,G__26770,G__26771,G__26772) : cljs.core.build_subvec.call(null,G__26768,G__26769,G__26770,G__26771,G__26772));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__26773 = self__.meta;
var G__26774 = self__.v;
var G__26775 = self__.start;
var G__26776 = (self__.end - (1));
var G__26777 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26773,G__26774,G__26775,G__26776,G__26777) : cljs.core.build_subvec.call(null,G__26773,G__26774,G__26775,G__26776,G__26777));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__26779 = meta__$1;
var G__26780 = self__.v;
var G__26781 = self__.start;
var G__26782 = self__.end;
var G__26783 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26779,G__26780,G__26781,G__26782,G__26783) : cljs.core.build_subvec.call(null,G__26779,G__26780,G__26781,G__26782,G__26783));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26784 = self__.meta;
var G__26785 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__26786 = self__.start;
var G__26787 = (self__.end + (1));
var G__26788 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26784,G__26785,G__26786,G__26787,G__26788) : cljs.core.build_subvec.call(null,G__26784,G__26785,G__26786,G__26787,G__26788));
});

cljs.core.Subvec.prototype.call = (function() {
var G__26789 = null;
var G__26789__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26789__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26789 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26789__2.call(this,self__,k);
case 3:
return G__26789__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26789.cljs$core$IFn$_invoke$arity$2 = G__26789__2;
G__26789.cljs$core$IFn$_invoke$arity$3 = G__26789__3;
return G__26789;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args26767){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26767)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__26790 = meta;
var G__26791 = v.v;
var G__26792 = (v.start + start);
var G__26793 = (v.start + end);
var G__26794 = __hash;
meta = G__26790;
v = G__26791;
start = G__26792;
end = G__26793;
__hash = G__26794;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj26801 = {};
return obj26801;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__26809 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__26810 = (level - (5));
node = G__26809;
level = G__26810;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__26814 = null;
var G__26814__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26814__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26814 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26814__2.call(this,self__,k);
case 3:
return G__26814__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26814.cljs$core$IFn$_invoke$arity$2 = G__26814__2;
G__26814.cljs$core$IFn$_invoke$arity$3 = G__26814__3;
return G__26814;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args26811){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26811)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3815__auto__ = self__.front;
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3815__auto__ = self__.rear;
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__26815 = (i + incr);
i = G__26815;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__26816 = (i + (1));
var G__26817 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__26816;
out = G__26817;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj26821 = {};
return obj26821;
})();
var l = ks.length;
var i_26822 = (0);
while(true){
if((i_26822 < l)){
var k_26823 = (ks[i_26822]);
(new_obj[k_26823] = (obj[k_26823]));

var G__26824 = (i_26822 + (1));
i_26822 = G__26824;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3803__auto__ = (function (){var G__26828 = k;
return goog.isString(G__26828);
})();
if(cljs.core.truth_(and__3803__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3803__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__26829 = init__$1;
var G__26830 = k;
var G__26831 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26829,G__26830,G__26831) : f.call(null,G__26829,G__26830,G__26831));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26832 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26832) : cljs.core.deref.call(null,G__26832));
} else {
var G__26838 = cljs.core.rest(keys__$1);
var G__26839 = init__$2;
keys__$1 = G__26838;
init__$1 = G__26839;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3803__auto__ = (function (){var G__26834 = k;
return goog.isString(G__26834);
})();
if(cljs.core.truth_(and__3803__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3803__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__26835 = k;
return goog.isString(G__26835);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3803__auto__ = (function (){var G__26837 = k;
return goog.isString(G__26837);
})();
if(cljs.core.truth_(and__3803__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3803__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__26825_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__26825_SHARP_,(self__.strobj[p1__26825_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__26840 = null;
var G__26840__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26840__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26840 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26840__2.call(this,self__,k);
case 3:
return G__26840__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26840.cljs$core$IFn$_invoke$arity$2 = G__26840__2;
G__26840.cljs$core$IFn$_invoke$arity$3 = G__26840__3;
return G__26840;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args26826){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26826)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj26842 = {};
return obj26842;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__26843 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26843,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26843,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__26844 = (i + (2));
i = G__26844;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__26845 = (i + (2));
i = G__26845;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__26846 = (i + (2));
i = G__26846;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__26847 = (i + (2));
i = G__26847;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__26848 = (i + (2));
i = G__26848;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3815__auto__ = (function (){var G__26852 = k;
return goog.isString(G__26852);
})();
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_26853 = (0);
while(true){
if((i_26853 < l)){
(narr[i_26853] = (arr[i_26853]));

var G__26854 = (i_26853 + (1));
i_26853 = G__26854;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26856 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26856) : cljs.core.keys.call(null,G__26856));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26857 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26857) : cljs.core.vals.call(null,G__26857));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26858 = cljs.core.seq(coll);
var chunk__26859 = null;
var count__26860 = (0);
var i__26861 = (0);
while(true){
if((i__26861 < count__26860)){
var vec__26862 = chunk__26859.cljs$core$IIndexed$_nth$arity$2(null,i__26861);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26862,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26862,(1),null);
var G__26863_26876 = v;
var G__26864_26877 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26863_26876,G__26864_26877) : f.call(null,G__26863_26876,G__26864_26877));

var G__26878 = seq__26858;
var G__26879 = chunk__26859;
var G__26880 = count__26860;
var G__26881 = (i__26861 + (1));
seq__26858 = G__26878;
chunk__26859 = G__26879;
count__26860 = G__26880;
i__26861 = G__26881;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26858);
if(temp__4126__auto__){
var seq__26858__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26858__$1)){
var c__4602__auto__ = cljs.core.chunk_first(seq__26858__$1);
var G__26882 = cljs.core.chunk_rest(seq__26858__$1);
var G__26883 = c__4602__auto__;
var G__26884 = cljs.core.count(c__4602__auto__);
var G__26885 = (0);
seq__26858 = G__26882;
chunk__26859 = G__26883;
count__26860 = G__26884;
i__26861 = G__26885;
continue;
} else {
var vec__26865 = cljs.core.first(seq__26858__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26865,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26865,(1),null);
var G__26866_26886 = v;
var G__26867_26887 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26866_26886,G__26867_26887) : f.call(null,G__26866_26886,G__26867_26887));

var G__26888 = cljs.core.next(seq__26858__$1);
var G__26889 = null;
var G__26890 = (0);
var G__26891 = (0);
seq__26858 = G__26888;
chunk__26859 = G__26889;
count__26860 = G__26890;
i__26861 = G__26891;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__26868 = init__$1;
var G__26869 = (self__.arr[i]);
var G__26870 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26868,G__26869,G__26870) : f.call(null,G__26868,G__26869,G__26870));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26871 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26871) : cljs.core.deref.call(null,G__26871));
} else {
var G__26892 = (i + (2));
var G__26893 = init__$2;
i = G__26892;
init__$1 = G__26893;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__26872 = other;
if(G__26872){
var bit__4489__auto__ = (G__26872.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4489__auto__) || (G__26872.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__26894 = (i + (2));
i = G__26894;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj26874 = {};
return obj26874;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__26895 = (s + (2));
var G__26896 = d;
s = G__26895;
d = G__26896;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__26897 = (s + (2));
var G__26898 = (d + (2));
s = G__26897;
d = G__26898;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__26875 = cljs.core.aclone(self__.arr);
(G__26875[(idx + (1))] = v);

return G__26875;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__26899 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__26900 = cljs.core.next(es);
ret = G__26899;
es = G__26900;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__26901 = null;
var G__26901__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26901__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26901 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26901__2.call(this,self__,k);
case 3:
return G__26901__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26901.cljs$core$IFn$_invoke$arity$2 = G__26901__2;
G__26901.cljs$core$IFn$_invoke$arity$3 = G__26901__3;
return G__26901;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args26855){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26855)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__26902 = (i + (2));
var G__26903 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__26902;
ret = G__26903;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__26904_26912 = self__.arr;
G__26904_26912.pop();

G__26904_26912.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__26905 = self__.len;
var G__26906 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__26905,G__26906) : cljs.core.array__GT_transient_hash_map.call(null,G__26905,G__26906));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__26907 = o;
if(G__26907){
var bit__4496__auto__ = (G__26907.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4496__auto__) || (G__26907.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__26907.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26907);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__26907);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__26908 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26908) : cljs.core.key.call(null,G__26908));
})(),(function (){var G__26909 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26909) : cljs.core.val.call(null,G__26909));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__26913 = cljs.core.next(es);
var G__26914 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__26910 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__26910) : cljs.core.key.call(null,G__26910));
})(),(function (){var G__26911 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__26911) : cljs.core.val.call(null,G__26911));
})());
es = G__26913;
tcoll__$2 = G__26914;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__26915 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__26916 = (i + (2));
out = G__26915;
i = G__26916;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__26919 = cljs.core.aclone(arr);
(G__26919[i] = a);

return G__26919;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__26920 = cljs.core.aclone(arr);
(G__26920[i] = a);

(G__26920[j] = b);

return G__26920;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__26925 = init__$1;
var G__26926 = k;
var G__26927 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26925,G__26926,G__26927) : f.call(null,G__26925,G__26926,G__26927));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26928 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26928) : cljs.core.deref.call(null,G__26928));
} else {
var G__26929 = (i + (2));
var G__26930 = init__$2;
i = G__26929;
init__$1 = G__26930;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26931 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__26931) : cljs.core.create_inode_seq.call(null,G__26931));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_26945 = (0);
var j_26946 = (0);
while(true){
if((i_26945 < (32))){
if((((self__.bitmap >>> i_26945) & (1)) === (0))){
var G__26947 = (i_26945 + (1));
var G__26948 = j_26946;
i_26945 = G__26947;
j_26946 = G__26948;
continue;
} else {
(nodes[i_26945] = ((!(((self__.arr[j_26946]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_26946])),(self__.arr[j_26946]),(self__.arr[(j_26946 + (1))]),added_leaf_QMARK_):(self__.arr[(j_26946 + (1))])));

var G__26949 = (i_26945 + (1));
var G__26950 = (j_26946 + (2));
i_26945 = G__26949;
j_26946 = G__26950;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__26932 = edit__$1;
var G__26933 = (shift + (5));
var G__26934 = key_or_nil;
var G__26935 = val_or_node;
var G__26936 = hash;
var G__26937 = key;
var G__26938 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__26932,G__26933,G__26934,G__26935,G__26936,G__26937,G__26938) : cljs.core.create_node.call(null,G__26932,G__26933,G__26934,G__26935,G__26936,G__26937,G__26938));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_26951 = (0);
var j_26952 = (0);
while(true){
if((i_26951 < (32))){
if((((self__.bitmap >>> i_26951) & (1)) === (0))){
var G__26953 = (i_26951 + (1));
var G__26954 = j_26952;
i_26951 = G__26953;
j_26952 = G__26954;
continue;
} else {
(nodes[i_26951] = ((!(((self__.arr[j_26952]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_26952])),(self__.arr[j_26952]),(self__.arr[(j_26952 + (1))]),added_leaf_QMARK_):(self__.arr[(j_26952 + (1))])));

var G__26955 = (i_26951 + (1));
var G__26956 = (j_26952 + (2));
i_26951 = G__26955;
j_26952 = G__26956;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__26939 = (shift + (5));
var G__26940 = key_or_nil;
var G__26941 = val_or_node;
var G__26942 = hash;
var G__26943 = key;
var G__26944 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__26939,G__26940,G__26941,G__26942,G__26943,G__26944) : cljs.core.create_node.call(null,G__26939,G__26940,G__26941,G__26942,G__26943,G__26944));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__26957 = (i + (1));
var G__26958 = (j + (2));
var G__26959 = (bitmap | ((1) << i));
i = G__26957;
j = G__26958;
bitmap = G__26959;
continue;
} else {
var G__26960 = (i + (1));
var G__26961 = j;
var G__26962 = bitmap;
i = G__26960;
j = G__26961;
bitmap = G__26962;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26963 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__26963) : cljs.core.create_array_node_seq.call(null,G__26963));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26964 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26964) : cljs.core.deref.call(null,G__26964));
} else {
var G__26965 = (i + (1));
var G__26966 = init__$2;
i = G__26965;
init__$1 = G__26966;
continue;
}
} else {
var G__26967 = (i + (1));
var G__26968 = init__$1;
i = G__26967;
init__$1 = G__26968;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__26969 = (i + (2));
i = G__26969;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__26970 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__26970) : cljs.core.create_inode_seq.call(null,G__26970));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__26971 = self__.nodes;
var G__26972 = (self__.i + (2));
var G__26973 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26971,G__26972,G__26973) : cljs.core.create_inode_seq.call(null,G__26971,G__26972,G__26973));
} else {
var G__26974 = self__.nodes;
var G__26975 = self__.i;
var G__26976 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__26974,G__26975,G__26976) : cljs.core.create_inode_seq.call(null,G__26974,G__26975,G__26976));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__26980 = (j + (2));
j = G__26980;
continue;
}
} else {
var G__26981 = (j + (2));
j = G__26981;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__26982 = null;
var G__26983 = self__.nodes;
var G__26984 = self__.i;
var G__26985 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__26982,G__26983,G__26984,G__26985) : cljs.core.create_array_node_seq.call(null,G__26982,G__26983,G__26984,G__26985));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__26990 = (j + (1));
j = G__26990;
continue;
}
} else {
var G__26991 = (j + (1));
j = G__26991;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26993 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26993) : cljs.core.keys.call(null,G__26993));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26994 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__26994) : cljs.core.vals.call(null,G__26994));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__26995 = cljs.core.seq(coll);
var chunk__26996 = null;
var count__26997 = (0);
var i__26998 = (0);
while(true){
if((i__26998 < count__26997)){
var vec__26999 = chunk__26996.cljs$core$IIndexed$_nth$arity$2(null,i__26998);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26999,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26999,(1),null);
var G__27000_27011 = v;
var G__27001_27012 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27000_27011,G__27001_27012) : f.call(null,G__27000_27011,G__27001_27012));

var G__27013 = seq__26995;
var G__27014 = chunk__26996;
var G__27015 = count__26997;
var G__27016 = (i__26998 + (1));
seq__26995 = G__27013;
chunk__26996 = G__27014;
count__26997 = G__27015;
i__26998 = G__27016;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__26995);
if(temp__4126__auto__){
var seq__26995__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__26995__$1)){
var c__4602__auto__ = cljs.core.chunk_first(seq__26995__$1);
var G__27017 = cljs.core.chunk_rest(seq__26995__$1);
var G__27018 = c__4602__auto__;
var G__27019 = cljs.core.count(c__4602__auto__);
var G__27020 = (0);
seq__26995 = G__27017;
chunk__26996 = G__27018;
count__26997 = G__27019;
i__26998 = G__27020;
continue;
} else {
var vec__27002 = cljs.core.first(seq__26995__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27002,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27002,(1),null);
var G__27003_27021 = v;
var G__27004_27022 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27003_27021,G__27004_27022) : f.call(null,G__27003_27021,G__27004_27022));

var G__27023 = cljs.core.next(seq__26995__$1);
var G__27024 = null;
var G__27025 = (0);
var G__27026 = (0);
seq__26995 = G__27023;
chunk__26996 = G__27024;
count__26997 = G__27025;
i__26998 = G__27026;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__27005 = init;
var G__27006 = null;
var G__27007 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27005,G__27006,G__27007) : f.call(null,G__27005,G__27006,G__27007));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27008 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27008) : cljs.core.deref.call(null,G__27008));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj27010 = {};
return obj27010;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27027 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27028 = cljs.core.next(es);
ret = G__27027;
es = G__27028;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__27029 = null;
var G__27029__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27029__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27029 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27029__2.call(this,self__,k);
case 3:
return G__27029__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27029.cljs$core$IFn$_invoke$arity$2 = G__27029__2;
G__27029.cljs$core$IFn$_invoke$arity$3 = G__27029__3;
return G__27029;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args26992){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26992)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27030 = (i + (2));
var G__27031 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27030;
ret = G__27031;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27032 = (i + (1));
var G__27033 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__27032;
out = G__27033;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__27034 = o;
if(G__27034){
var bit__4496__auto__ = (G__27034.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4496__auto__) || (G__27034.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27034.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27034);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27034);
}
})()){
return tcoll.assoc_BANG_((function (){var G__27035 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27035) : cljs.core.key.call(null,G__27035));
})(),(function (){var G__27036 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27036) : cljs.core.val.call(null,G__27036));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27039 = cljs.core.next(es);
var G__27040 = tcoll__$1.assoc_BANG_((function (){var G__27037 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27037) : cljs.core.key.call(null,G__27037));
})(),(function (){var G__27038 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27038) : cljs.core.val.call(null,G__27038));
})());
es = G__27039;
tcoll__$1 = G__27040;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__27041 = ((ascending_QMARK_)?t.left:t.right);
var G__27042 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__27041;
stack__$1 = G__27042;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27055 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27055) : cljs.core.deref.call(null,G__27055));
} else {
var init__$2 = (function (){var G__27056 = init__$1;
var G__27057 = node.key;
var G__27058 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27056,G__27057,G__27058) : f.call(null,G__27056,G__27057,G__27058));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27059 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27059) : cljs.core.deref.call(null,G__27059));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__27060 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27060) : cljs.core.deref.call(null,G__27060));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__27062 = null;
var G__27062__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27062__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27062 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27062__2.call(this,self__,k);
case 3:
return G__27062__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27062.cljs$core$IFn$_invoke$arity$2 = G__27062__2;
G__27062.cljs$core$IFn$_invoke$arity$3 = G__27062__3;
return G__27062;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args27061){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27061)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__27064 = null;
var G__27064__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27064__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27064 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27064__2.call(this,self__,k);
case 3:
return G__27064__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27064.cljs$core$IFn$_invoke$arity$2 = G__27064__2;
G__27064.cljs$core$IFn$_invoke$arity$3 = G__27064__3;
return G__27064;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args27063){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27063)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__27077 = k;
var G__27078 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27077,G__27078) : comp.call(null,G__27077,G__27078));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__27097 = k;
var G__27098 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27097,G__27098) : comp.call(null,G__27097,G__27098));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__27109 = k;
var G__27110 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27109,G__27110) : comp.call(null,G__27109,G__27110));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27112 = cljs.core.seq(coll);
var chunk__27113 = null;
var count__27114 = (0);
var i__27115 = (0);
while(true){
if((i__27115 < count__27114)){
var vec__27116 = chunk__27113.cljs$core$IIndexed$_nth$arity$2(null,i__27115);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27116,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27116,(1),null);
var G__27117_27129 = v;
var G__27118_27130 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27117_27129,G__27118_27130) : f.call(null,G__27117_27129,G__27118_27130));

var G__27131 = seq__27112;
var G__27132 = chunk__27113;
var G__27133 = count__27114;
var G__27134 = (i__27115 + (1));
seq__27112 = G__27131;
chunk__27113 = G__27132;
count__27114 = G__27133;
i__27115 = G__27134;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27112);
if(temp__4126__auto__){
var seq__27112__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27112__$1)){
var c__4602__auto__ = cljs.core.chunk_first(seq__27112__$1);
var G__27135 = cljs.core.chunk_rest(seq__27112__$1);
var G__27136 = c__4602__auto__;
var G__27137 = cljs.core.count(c__4602__auto__);
var G__27138 = (0);
seq__27112 = G__27135;
chunk__27113 = G__27136;
count__27114 = G__27137;
i__27115 = G__27138;
continue;
} else {
var vec__27119 = cljs.core.first(seq__27112__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27119,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27119,(1),null);
var G__27120_27139 = v;
var G__27121_27140 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27120_27139,G__27121_27140) : f.call(null,G__27120_27139,G__27121_27140));

var G__27141 = cljs.core.next(seq__27112__$1);
var G__27142 = null;
var G__27143 = (0);
var G__27144 = (0);
seq__27112 = G__27141;
chunk__27113 = G__27142;
count__27114 = G__27143;
i__27115 = G__27144;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27122 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27122) : cljs.core.keys.call(null,G__27122));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27123 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27123) : cljs.core.vals.call(null,G__27123));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27124 = k;
var G__27125 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27124,G__27125) : self__.comp.call(null,G__27124,G__27125));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__27145 = t.left;
t = G__27145;
continue;
} else {
var G__27146 = t.right;
t = G__27146;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27147 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27148 = cljs.core.next(es);
ret = G__27147;
es = G__27148;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__27149 = null;
var G__27149__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27149__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27149 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27149__2.call(this,self__,k);
case 3:
return G__27149__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27149.cljs$core$IFn$_invoke$arity$2 = G__27149__2;
G__27149.cljs$core$IFn$_invoke$arity$3 = G__27149__3;
return G__27149;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args27111){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27111)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27126 = k;
var G__27127 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27126,G__27127) : self__.comp.call(null,G__27126,G__27127));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__27150 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27151 = t.left;
stack = G__27150;
t = G__27151;
continue;
} else {
var G__27152 = stack;
var G__27153 = t.right;
stack = G__27152;
t = G__27153;
continue;
}
} else {
if((c > (0))){
var G__27154 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27155 = t.right;
stack = G__27154;
t = G__27155;
continue;
} else {
var G__27156 = stack;
var G__27157 = t.left;
stack = G__27156;
t = G__27157;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__27128 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27128) : cljs.core.key.call(null,G__27128));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__27158 = cljs.core.nnext(in$);
var G__27159 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27158;
out = G__27159;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27160__i = 0, G__27160__a = new Array(arguments.length -  0);
while (G__27160__i < G__27160__a.length) {G__27160__a[G__27160__i] = arguments[G__27160__i + 0]; ++G__27160__i;}
  keyvals = new cljs.core.IndexedSeq(G__27160__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__27161){
var keyvals = cljs.core.seq(arglist__27161);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27162__i = 0, G__27162__a = new Array(arguments.length -  0);
while (G__27162__i < G__27162__a.length) {G__27162__a[G__27162__i] = arguments[G__27162__i + 0]; ++G__27162__i;}
  keyvals = new cljs.core.IndexedSeq(G__27162__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__27163){
var keyvals = cljs.core.seq(arglist__27163);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj27167 = {};
return obj27167;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__27168 = cljs.core.nnext(kvs);
kvs = G__27168;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27169__i = 0, G__27169__a = new Array(arguments.length -  0);
while (G__27169__i < G__27169__a.length) {G__27169__a[G__27169__i] = arguments[G__27169__i + 0]; ++G__27169__i;}
  keyvals = new cljs.core.IndexedSeq(G__27169__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__27170){
var keyvals = cljs.core.seq(arglist__27170);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__27171 = cljs.core.nnext(in$);
var G__27172 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27171;
out = G__27172;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27173__i = 0, G__27173__a = new Array(arguments.length -  0);
while (G__27173__i < G__27173__a.length) {G__27173__a[G__27173__i] = arguments[G__27173__i + 0]; ++G__27173__i;}
  keyvals = new cljs.core.IndexedSeq(G__27173__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__27174){
var keyvals = cljs.core.seq(arglist__27174);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__27175 = cljs.core.nnext(in$);
var G__27176 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27175;
out = G__27176;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__27177__i = 0, G__27177__a = new Array(arguments.length -  1);
while (G__27177__i < G__27177__a.length) {G__27177__a[G__27177__i] = arguments[G__27177__i + 1]; ++G__27177__i;}
  keyvals = new cljs.core.IndexedSeq(G__27177__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__27178){
var comparator = cljs.core.first(arglist__27178);
var keyvals = cljs.core.rest(arglist__27178);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27179 = self__.mseq;
if(G__27179){
var bit__4496__auto__ = (G__27179.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4496__auto__) || (G__27179.cljs$core$INext$)){
return true;
} else {
if((!G__27179.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27179);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27179);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27180 = self__.mseq;
if(G__27180){
var bit__4496__auto__ = (G__27180.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4496__auto__) || (G__27180.cljs$core$INext$)){
return true;
} else {
if((!G__27180.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27180);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27180);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27181 = self__.mseq;
if(G__27181){
var bit__4496__auto__ = (G__27181.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4496__auto__) || (G__27181.cljs$core$INext$)){
return true;
} else {
if((!G__27181.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27181);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27181);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27182 = self__.mseq;
if(G__27182){
var bit__4496__auto__ = (G__27182.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4496__auto__) || (G__27182.cljs$core$INext$)){
return true;
} else {
if((!G__27182.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27182);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27182);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__27183_SHARP_,p2__27184_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3815__auto__ = p1__27183_SHARP_;
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__27184_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__27185__i = 0, G__27185__a = new Array(arguments.length -  0);
while (G__27185__i < G__27185__a.length) {G__27185__a[G__27185__i] = arguments[G__27185__i + 0]; ++G__27185__i;}
  maps = new cljs.core.IndexedSeq(G__27185__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__27186){
var maps = cljs.core.seq(arglist__27186);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27189 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27190 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27189,G__27190) : f.call(null,G__27189,G__27190));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3815__auto__ = m1;
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__27191__i = 0, G__27191__a = new Array(arguments.length -  1);
while (G__27191__i < G__27191__a.length) {G__27191__a[G__27191__i] = arguments[G__27191__i + 1]; ++G__27191__i;}
  maps = new cljs.core.IndexedSeq(G__27191__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__27192){
var f = cljs.core.first(arglist__27192);
var maps = cljs.core.rest(arglist__27192);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__27193 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__27194 = cljs.core.next(keys);
ret = G__27193;
keys = G__27194;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27197 = cljs.core.seq(coll);
var chunk__27198 = null;
var count__27199 = (0);
var i__27200 = (0);
while(true){
if((i__27200 < count__27199)){
var vec__27201 = chunk__27198.cljs$core$IIndexed$_nth$arity$2(null,i__27200);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27201,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27201,(1),null);
var G__27202_27207 = v;
var G__27203_27208 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27202_27207,G__27203_27208) : f.call(null,G__27202_27207,G__27203_27208));

var G__27209 = seq__27197;
var G__27210 = chunk__27198;
var G__27211 = count__27199;
var G__27212 = (i__27200 + (1));
seq__27197 = G__27209;
chunk__27198 = G__27210;
count__27199 = G__27211;
i__27200 = G__27212;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27197);
if(temp__4126__auto__){
var seq__27197__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27197__$1)){
var c__4602__auto__ = cljs.core.chunk_first(seq__27197__$1);
var G__27213 = cljs.core.chunk_rest(seq__27197__$1);
var G__27214 = c__4602__auto__;
var G__27215 = cljs.core.count(c__4602__auto__);
var G__27216 = (0);
seq__27197 = G__27213;
chunk__27198 = G__27214;
count__27199 = G__27215;
i__27200 = G__27216;
continue;
} else {
var vec__27204 = cljs.core.first(seq__27197__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27204,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27204,(1),null);
var G__27205_27217 = v;
var G__27206_27218 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27205_27217,G__27206_27218) : f.call(null,G__27205_27217,G__27206_27218));

var G__27219 = cljs.core.next(seq__27197__$1);
var G__27220 = null;
var G__27221 = (0);
var G__27222 = (0);
seq__27197 = G__27219;
chunk__27198 = G__27220;
count__27199 = G__27221;
i__27200 = G__27222;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27195_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27195_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__27223 = null;
var G__27223__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27223__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27223 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27223__2.call(this,self__,k);
case 3:
return G__27223__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27223.cljs$core$IFn$_invoke$arity$2 = G__27223__2;
G__27223.cljs$core$IFn$_invoke$arity$3 = G__27223__3;
return G__27223;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args27196){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27196)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27224 = (i + (1));
var G__27225 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__27224;
out = G__27225;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__27226 = (i + (1));
var G__27227 = cljs.core._conj_BANG_(out,(items[i]));
i = G__27226;
out = G__27227;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__27229 = null;
var G__27229__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__27229__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__27229 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27229__2.call(this,self__,k);
case 3:
return G__27229__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27229.cljs$core$IFn$_invoke$arity$2 = G__27229__2;
G__27229.cljs$core$IFn$_invoke$arity$3 = G__27229__3;
return G__27229;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args27228){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27228)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27232 = cljs.core.seq(coll);
var chunk__27233 = null;
var count__27234 = (0);
var i__27235 = (0);
while(true){
if((i__27235 < count__27234)){
var vec__27236 = chunk__27233.cljs$core$IIndexed$_nth$arity$2(null,i__27235);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27236,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27236,(1),null);
var G__27237_27242 = v;
var G__27238_27243 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27237_27242,G__27238_27243) : f.call(null,G__27237_27242,G__27238_27243));

var G__27244 = seq__27232;
var G__27245 = chunk__27233;
var G__27246 = count__27234;
var G__27247 = (i__27235 + (1));
seq__27232 = G__27244;
chunk__27233 = G__27245;
count__27234 = G__27246;
i__27235 = G__27247;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27232);
if(temp__4126__auto__){
var seq__27232__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27232__$1)){
var c__4602__auto__ = cljs.core.chunk_first(seq__27232__$1);
var G__27248 = cljs.core.chunk_rest(seq__27232__$1);
var G__27249 = c__4602__auto__;
var G__27250 = cljs.core.count(c__4602__auto__);
var G__27251 = (0);
seq__27232 = G__27248;
chunk__27233 = G__27249;
count__27234 = G__27250;
i__27235 = G__27251;
continue;
} else {
var vec__27239 = cljs.core.first(seq__27232__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27239,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27239,(1),null);
var G__27240_27252 = v;
var G__27241_27253 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27240_27252,G__27241_27253) : f.call(null,G__27240_27252,G__27241_27253));

var G__27254 = cljs.core.next(seq__27232__$1);
var G__27255 = null;
var G__27256 = (0);
var G__27257 = (0);
seq__27232 = G__27254;
chunk__27233 = G__27255;
count__27234 = G__27256;
i__27235 = G__27257;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27230_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27230_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__27258 = null;
var G__27258__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27258__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27258 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27258__2.call(this,self__,k);
case 3:
return G__27258__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27258.cljs$core$IFn$_invoke$arity$2 = G__27258__2;
G__27258.cljs$core$IFn$_invoke$arity$3 = G__27258__3;
return G__27258;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args27231){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27231)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4696__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4696__auto__.length)){
var G__27259 = (i + (1));
var G__27260 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__27259;
res = G__27260;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__27261 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__27262 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__27261;
out = G__27262;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__27263__delegate = function (keys){
return cljs.core.set(keys);
};
var G__27263 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27264__i = 0, G__27264__a = new Array(arguments.length -  0);
while (G__27264__i < G__27264__a.length) {G__27264__a[G__27264__i] = arguments[G__27264__i + 0]; ++G__27264__i;}
  keys = new cljs.core.IndexedSeq(G__27264__a,0);
} 
return G__27263__delegate.call(this,keys);};
G__27263.cljs$lang$maxFixedArity = 0;
G__27263.cljs$lang$applyTo = (function (arglist__27265){
var keys = cljs.core.seq(arglist__27265);
return G__27263__delegate(keys);
});
G__27263.cljs$core$IFn$_invoke$arity$variadic = G__27263__delegate;
return G__27263;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__27266 = null;
if (arguments.length > 0) {
var G__27267__i = 0, G__27267__a = new Array(arguments.length -  0);
while (G__27267__i < G__27267__a.length) {G__27267__a[G__27267__i] = arguments[G__27267__i + 0]; ++G__27267__i;}
G__27266 = new cljs.core.IndexedSeq(G__27267__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__27266);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27268__i = 0, G__27268__a = new Array(arguments.length -  0);
while (G__27268__i < G__27268__a.length) {G__27268__a[G__27268__i] = arguments[G__27268__i + 0]; ++G__27268__i;}
  keys = new cljs.core.IndexedSeq(G__27268__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__27269){
var keys = cljs.core.seq(arglist__27269);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__27270__i = 0, G__27270__a = new Array(arguments.length -  1);
while (G__27270__i < G__27270__a.length) {G__27270__a[G__27270__i] = arguments[G__27270__i + 1]; ++G__27270__i;}
  keys = new cljs.core.IndexedSeq(G__27270__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__27271){
var comparator = cljs.core.first(arglist__27271);
var keys = cljs.core.rest(arglist__27271);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__27272_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27272_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__27272_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__27273_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27273_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__27273_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__27294 = null;
var G__27294__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27294__1 = (function (result){
var G__27284 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27284) : rf.call(null,G__27284));
});
var G__27294__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__27285 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27285) : cljs.core.deref.call(null,G__27285));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__27286 = result;
var G__27287 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27286,G__27287) : rf.call(null,G__27286,G__27287));
}
});
G__27294 = function(result,input){
switch(arguments.length){
case 0:
return G__27294__0.call(this);
case 1:
return G__27294__1.call(this,result);
case 2:
return G__27294__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27294.cljs$core$IFn$_invoke$arity$0 = G__27294__0;
G__27294.cljs$core$IFn$_invoke$arity$1 = G__27294__1;
G__27294.cljs$core$IFn$_invoke$arity$2 = G__27294__2;
return G__27294;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__27292,seen__$1){
while(true){
var vec__27293 = p__27292;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27293,(0),null);
var xs__$1 = vec__27293;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__27295 = cljs.core.rest(s);
var G__27296 = seen__$1;
p__27292 = G__27295;
seen__$1 = G__27296;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__27297 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__27298 = cljs.core.next(s__$1);
ret = G__27297;
s__$1 = G__27298;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__27300 = x;
if(G__27300){
var bit__4489__auto__ = (G__27300.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4489__auto__) || (G__27300.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__27301 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__27302 = cljs.core.next(ks);
var G__27303 = cljs.core.next(vs);
map = G__27301;
ks = G__27302;
vs = G__27303;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__27314 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27314) : k.call(null,G__27314));
})() > (function (){var G__27315 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27315) : k.call(null,G__27315));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__27316__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27304_SHARP_,p2__27305_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__27304_SHARP_,p2__27305_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27316 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27317__i = 0, G__27317__a = new Array(arguments.length -  3);
while (G__27317__i < G__27317__a.length) {G__27317__a[G__27317__i] = arguments[G__27317__i + 3]; ++G__27317__i;}
  more = new cljs.core.IndexedSeq(G__27317__a,0);
} 
return G__27316__delegate.call(this,k,x,y,more);};
G__27316.cljs$lang$maxFixedArity = 3;
G__27316.cljs$lang$applyTo = (function (arglist__27318){
var k = cljs.core.first(arglist__27318);
arglist__27318 = cljs.core.next(arglist__27318);
var x = cljs.core.first(arglist__27318);
arglist__27318 = cljs.core.next(arglist__27318);
var y = cljs.core.first(arglist__27318);
var more = cljs.core.rest(arglist__27318);
return G__27316__delegate(k,x,y,more);
});
G__27316.cljs$core$IFn$_invoke$arity$variadic = G__27316__delegate;
return G__27316;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__27319 = null;
if (arguments.length > 3) {
var G__27320__i = 0, G__27320__a = new Array(arguments.length -  3);
while (G__27320__i < G__27320__a.length) {G__27320__a[G__27320__i] = arguments[G__27320__i + 3]; ++G__27320__i;}
G__27319 = new cljs.core.IndexedSeq(G__27320__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27319);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__27331 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27331) : k.call(null,G__27331));
})() < (function (){var G__27332 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27332) : k.call(null,G__27332));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__27333__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27321_SHARP_,p2__27322_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__27321_SHARP_,p2__27322_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27333 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27334__i = 0, G__27334__a = new Array(arguments.length -  3);
while (G__27334__i < G__27334__a.length) {G__27334__a[G__27334__i] = arguments[G__27334__i + 3]; ++G__27334__i;}
  more = new cljs.core.IndexedSeq(G__27334__a,0);
} 
return G__27333__delegate.call(this,k,x,y,more);};
G__27333.cljs$lang$maxFixedArity = 3;
G__27333.cljs$lang$applyTo = (function (arglist__27335){
var k = cljs.core.first(arglist__27335);
arglist__27335 = cljs.core.next(arglist__27335);
var x = cljs.core.first(arglist__27335);
arglist__27335 = cljs.core.next(arglist__27335);
var y = cljs.core.first(arglist__27335);
var more = cljs.core.rest(arglist__27335);
return G__27333__delegate(k,x,y,more);
});
G__27333.cljs$core$IFn$_invoke$arity$variadic = G__27333__delegate;
return G__27333;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__27336 = null;
if (arguments.length > 3) {
var G__27337__i = 0, G__27337__a = new Array(arguments.length -  3);
while (G__27337__i < G__27337__a.length) {G__27337__a[G__27337__i] = arguments[G__27337__i + 3]; ++G__27337__i;}
G__27336 = new cljs.core.IndexedSeq(G__27337__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__27354 = null;
var G__27354__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27354__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27349 = result;
var G__27350 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27349,G__27350) : rf.call(null,G__27349,G__27350));
})());
})());
var G__27351 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27351) : rf.call(null,G__27351));
});
var G__27354__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__27352 = result;
var G__27353 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27352,G__27353) : rf.call(null,G__27352,G__27353));
} else {
return result;
}
});
G__27354 = function(result,input){
switch(arguments.length){
case 0:
return G__27354__0.call(this);
case 1:
return G__27354__1.call(this,result);
case 2:
return G__27354__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27354.cljs$core$IFn$_invoke$arity$0 = G__27354__0;
G__27354.cljs$core$IFn$_invoke$arity$1 = G__27354__1;
G__27354.cljs$core$IFn$_invoke$arity$2 = G__27354__2;
return G__27354;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__27367 = null;
var G__27367__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27367__1 = (function (result){
var G__27362 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27362) : rf.call(null,G__27362));
});
var G__27367__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27363 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27363) : pred.call(null,G__27363));
})())){
var G__27364 = result;
var G__27365 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27364,G__27365) : rf.call(null,G__27364,G__27365));
} else {
return cljs.core.reduced(result);
}
});
G__27367 = function(result,input){
switch(arguments.length){
case 0:
return G__27367__0.call(this);
case 1:
return G__27367__1.call(this,result);
case 2:
return G__27367__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27367.cljs$core$IFn$_invoke$arity$0 = G__27367__0;
G__27367.cljs$core$IFn$_invoke$arity$1 = G__27367__1;
G__27367.cljs$core$IFn$_invoke$arity$2 = G__27367__2;
return G__27367;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__27366 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27366) : pred.call(null,G__27366));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__27372 = (function (){var G__27374 = cljs.core._entry_key(sc,e);
var G__27375 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27374,G__27375) : comp.call(null,G__27374,G__27375));
})();
var G__27373 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__27372,G__27373) : test.call(null,G__27372,G__27373));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27379 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27379,(0),null);
var s = vec__27379;
if(cljs.core.truth_((function (){var G__27380 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27380) : include.call(null,G__27380));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27381 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27381,(0),null);
var s = vec__27381;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27385 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27385,(0),null);
var s = vec__27385;
if(cljs.core.truth_((function (){var G__27386 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27386) : include.call(null,G__27386));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27387 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27387,(0),null);
var s = vec__27387;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__27388 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__27388) : Math.ceil.call(null,G__27388));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4236__auto__ = self__.__hash;
if(!((h__4236__auto__ == null))){
return h__4236__auto__;
} else {
var h__4236__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4236__auto____$1;

return h__4236__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__27389 = ret;
var G__27390 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27389,G__27390) : f.call(null,G__27389,G__27390));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__27391 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27391) : cljs.core.deref.call(null,G__27391));
} else {
var G__27392 = (i + self__.step);
var G__27393 = ret__$1;
i = G__27392;
ret = G__27393;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__27411 = null;
var G__27411__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27411__1 = (function (result){
var G__27408 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27408) : rf.call(null,G__27408));
});
var G__27411__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__27409 = result;
var G__27410 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27409,G__27410) : rf.call(null,G__27409,G__27410));
} else {
return result;
}
});
G__27411 = function(result,input){
switch(arguments.length){
case 0:
return G__27411__0.call(this);
case 1:
return G__27411__1.call(this,result);
case 2:
return G__27411__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27411.cljs$core$IFn$_invoke$arity$0 = G__27411__0;
G__27411.cljs$core$IFn$_invoke$arity$1 = G__27411__1;
G__27411.cljs$core$IFn$_invoke$arity$2 = G__27411__2;
return G__27411;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__27433 = null;
var G__27433__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27433__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27424 = result;
var G__27425 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27424,G__27425) : rf.call(null,G__27424,G__27425));
})());
})());
var G__27426 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27426) : rf.call(null,G__27426));
});
var G__27433__2 = (function (result,input){
var pval = (function (){var G__27427 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27427) : cljs.core.deref.call(null,G__27427));
})();
var val = (function (){var G__27428 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27428) : f.call(null,G__27428));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__27429 = result;
var G__27430 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27429,G__27430) : rf.call(null,G__27429,G__27430));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__27433 = function(result,input){
switch(arguments.length){
case 0:
return G__27433__0.call(this);
case 1:
return G__27433__1.call(this,result);
case 2:
return G__27433__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27433.cljs$core$IFn$_invoke$arity$0 = G__27433__0;
G__27433.cljs$core$IFn$_invoke$arity$1 = G__27433__1;
G__27433.cljs$core$IFn$_invoke$arity$2 = G__27433__2;
return G__27433;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__27431 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27431) : f.call(null,G__27431));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__27412_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__27432 = p1__27412_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27432) : f.call(null,G__27432));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__27442 = init;
var G__27443 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27442,G__27443) : f.call(null,G__27442,G__27443));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__27538 = null;
var G__27538__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__27538__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27496 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27496) : f.call(null,G__27496));
})()],null));
});
var G__27538__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27497 = x;
var G__27498 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27497,G__27498) : f.call(null,G__27497,G__27498));
})()],null));
});
var G__27538__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27499 = x;
var G__27500 = y;
var G__27501 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27499,G__27500,G__27501) : f.call(null,G__27499,G__27500,G__27501));
})()],null));
});
var G__27538__4 = (function() { 
var G__27539__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__27539 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27540__i = 0, G__27540__a = new Array(arguments.length -  3);
while (G__27540__i < G__27540__a.length) {G__27540__a[G__27540__i] = arguments[G__27540__i + 3]; ++G__27540__i;}
  args = new cljs.core.IndexedSeq(G__27540__a,0);
} 
return G__27539__delegate.call(this,x,y,z,args);};
G__27539.cljs$lang$maxFixedArity = 3;
G__27539.cljs$lang$applyTo = (function (arglist__27541){
var x = cljs.core.first(arglist__27541);
arglist__27541 = cljs.core.next(arglist__27541);
var y = cljs.core.first(arglist__27541);
arglist__27541 = cljs.core.next(arglist__27541);
var z = cljs.core.first(arglist__27541);
var args = cljs.core.rest(arglist__27541);
return G__27539__delegate(x,y,z,args);
});
G__27539.cljs$core$IFn$_invoke$arity$variadic = G__27539__delegate;
return G__27539;
})()
;
G__27538 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27538__0.call(this);
case 1:
return G__27538__1.call(this,x);
case 2:
return G__27538__2.call(this,x,y);
case 3:
return G__27538__3.call(this,x,y,z);
default:
var G__27542 = null;
if (arguments.length > 3) {
var G__27543__i = 0, G__27543__a = new Array(arguments.length -  3);
while (G__27543__i < G__27543__a.length) {G__27543__a[G__27543__i] = arguments[G__27543__i + 3]; ++G__27543__i;}
G__27542 = new cljs.core.IndexedSeq(G__27543__a,0);
}
return G__27538__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27538.cljs$lang$maxFixedArity = 3;
G__27538.cljs$lang$applyTo = G__27538__4.cljs$lang$applyTo;
G__27538.cljs$core$IFn$_invoke$arity$0 = G__27538__0;
G__27538.cljs$core$IFn$_invoke$arity$1 = G__27538__1;
G__27538.cljs$core$IFn$_invoke$arity$2 = G__27538__2;
G__27538.cljs$core$IFn$_invoke$arity$3 = G__27538__3;
G__27538.cljs$core$IFn$_invoke$arity$variadic = G__27538__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27538;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__27544 = null;
var G__27544__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__27544__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27502 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27502) : f.call(null,G__27502));
})(),(function (){var G__27503 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27503) : g.call(null,G__27503));
})()],null));
});
var G__27544__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27504 = x;
var G__27505 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27504,G__27505) : f.call(null,G__27504,G__27505));
})(),(function (){var G__27506 = x;
var G__27507 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27506,G__27507) : g.call(null,G__27506,G__27507));
})()],null));
});
var G__27544__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27508 = x;
var G__27509 = y;
var G__27510 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27508,G__27509,G__27510) : f.call(null,G__27508,G__27509,G__27510));
})(),(function (){var G__27511 = x;
var G__27512 = y;
var G__27513 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27511,G__27512,G__27513) : g.call(null,G__27511,G__27512,G__27513));
})()],null));
});
var G__27544__4 = (function() { 
var G__27545__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__27545 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27546__i = 0, G__27546__a = new Array(arguments.length -  3);
while (G__27546__i < G__27546__a.length) {G__27546__a[G__27546__i] = arguments[G__27546__i + 3]; ++G__27546__i;}
  args = new cljs.core.IndexedSeq(G__27546__a,0);
} 
return G__27545__delegate.call(this,x,y,z,args);};
G__27545.cljs$lang$maxFixedArity = 3;
G__27545.cljs$lang$applyTo = (function (arglist__27547){
var x = cljs.core.first(arglist__27547);
arglist__27547 = cljs.core.next(arglist__27547);
var y = cljs.core.first(arglist__27547);
arglist__27547 = cljs.core.next(arglist__27547);
var z = cljs.core.first(arglist__27547);
var args = cljs.core.rest(arglist__27547);
return G__27545__delegate(x,y,z,args);
});
G__27545.cljs$core$IFn$_invoke$arity$variadic = G__27545__delegate;
return G__27545;
})()
;
G__27544 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27544__0.call(this);
case 1:
return G__27544__1.call(this,x);
case 2:
return G__27544__2.call(this,x,y);
case 3:
return G__27544__3.call(this,x,y,z);
default:
var G__27548 = null;
if (arguments.length > 3) {
var G__27549__i = 0, G__27549__a = new Array(arguments.length -  3);
while (G__27549__i < G__27549__a.length) {G__27549__a[G__27549__i] = arguments[G__27549__i + 3]; ++G__27549__i;}
G__27548 = new cljs.core.IndexedSeq(G__27549__a,0);
}
return G__27544__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27544.cljs$lang$maxFixedArity = 3;
G__27544.cljs$lang$applyTo = G__27544__4.cljs$lang$applyTo;
G__27544.cljs$core$IFn$_invoke$arity$0 = G__27544__0;
G__27544.cljs$core$IFn$_invoke$arity$1 = G__27544__1;
G__27544.cljs$core$IFn$_invoke$arity$2 = G__27544__2;
G__27544.cljs$core$IFn$_invoke$arity$3 = G__27544__3;
G__27544.cljs$core$IFn$_invoke$arity$variadic = G__27544__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27544;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__27550 = null;
var G__27550__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__27550__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27514 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27514) : f.call(null,G__27514));
})(),(function (){var G__27515 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27515) : g.call(null,G__27515));
})(),(function (){var G__27516 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__27516) : h.call(null,G__27516));
})()],null));
});
var G__27550__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27517 = x;
var G__27518 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27517,G__27518) : f.call(null,G__27517,G__27518));
})(),(function (){var G__27519 = x;
var G__27520 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27519,G__27520) : g.call(null,G__27519,G__27520));
})(),(function (){var G__27521 = x;
var G__27522 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__27521,G__27522) : h.call(null,G__27521,G__27522));
})()],null));
});
var G__27550__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27523 = x;
var G__27524 = y;
var G__27525 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27523,G__27524,G__27525) : f.call(null,G__27523,G__27524,G__27525));
})(),(function (){var G__27526 = x;
var G__27527 = y;
var G__27528 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27526,G__27527,G__27528) : g.call(null,G__27526,G__27527,G__27528));
})(),(function (){var G__27529 = x;
var G__27530 = y;
var G__27531 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__27529,G__27530,G__27531) : h.call(null,G__27529,G__27530,G__27531));
})()],null));
});
var G__27550__4 = (function() { 
var G__27551__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__27551 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27552__i = 0, G__27552__a = new Array(arguments.length -  3);
while (G__27552__i < G__27552__a.length) {G__27552__a[G__27552__i] = arguments[G__27552__i + 3]; ++G__27552__i;}
  args = new cljs.core.IndexedSeq(G__27552__a,0);
} 
return G__27551__delegate.call(this,x,y,z,args);};
G__27551.cljs$lang$maxFixedArity = 3;
G__27551.cljs$lang$applyTo = (function (arglist__27553){
var x = cljs.core.first(arglist__27553);
arglist__27553 = cljs.core.next(arglist__27553);
var y = cljs.core.first(arglist__27553);
arglist__27553 = cljs.core.next(arglist__27553);
var z = cljs.core.first(arglist__27553);
var args = cljs.core.rest(arglist__27553);
return G__27551__delegate(x,y,z,args);
});
G__27551.cljs$core$IFn$_invoke$arity$variadic = G__27551__delegate;
return G__27551;
})()
;
G__27550 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27550__0.call(this);
case 1:
return G__27550__1.call(this,x);
case 2:
return G__27550__2.call(this,x,y);
case 3:
return G__27550__3.call(this,x,y,z);
default:
var G__27554 = null;
if (arguments.length > 3) {
var G__27555__i = 0, G__27555__a = new Array(arguments.length -  3);
while (G__27555__i < G__27555__a.length) {G__27555__a[G__27555__i] = arguments[G__27555__i + 3]; ++G__27555__i;}
G__27554 = new cljs.core.IndexedSeq(G__27555__a,0);
}
return G__27550__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27554);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27550.cljs$lang$maxFixedArity = 3;
G__27550.cljs$lang$applyTo = G__27550__4.cljs$lang$applyTo;
G__27550.cljs$core$IFn$_invoke$arity$0 = G__27550__0;
G__27550.cljs$core$IFn$_invoke$arity$1 = G__27550__1;
G__27550.cljs$core$IFn$_invoke$arity$2 = G__27550__2;
G__27550.cljs$core$IFn$_invoke$arity$3 = G__27550__3;
G__27550.cljs$core$IFn$_invoke$arity$variadic = G__27550__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27550;
})()
});
var juxt__4 = (function() { 
var G__27556__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__27557 = null;
var G__27557__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27444_SHARP_,p2__27445_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27444_SHARP_,(function (){return (p2__27445_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__27445_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__27445_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27557__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27446_SHARP_,p2__27447_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27446_SHARP_,(function (){var G__27532 = x;
return (p2__27447_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__27447_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27532) : p2__27447_SHARP_.call(null,G__27532));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27557__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27448_SHARP_,p2__27449_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27448_SHARP_,(function (){var G__27533 = x;
var G__27534 = y;
return (p2__27449_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__27449_SHARP_.cljs$core$IFn$_invoke$arity$2(G__27533,G__27534) : p2__27449_SHARP_.call(null,G__27533,G__27534));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27557__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27450_SHARP_,p2__27451_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27450_SHARP_,(function (){var G__27535 = x;
var G__27536 = y;
var G__27537 = z;
return (p2__27451_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__27451_SHARP_.cljs$core$IFn$_invoke$arity$3(G__27535,G__27536,G__27537) : p2__27451_SHARP_.call(null,G__27535,G__27536,G__27537));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27557__4 = (function() { 
var G__27558__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27452_SHARP_,p2__27453_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27452_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__27453_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__27558 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27559__i = 0, G__27559__a = new Array(arguments.length -  3);
while (G__27559__i < G__27559__a.length) {G__27559__a[G__27559__i] = arguments[G__27559__i + 3]; ++G__27559__i;}
  args = new cljs.core.IndexedSeq(G__27559__a,0);
} 
return G__27558__delegate.call(this,x,y,z,args);};
G__27558.cljs$lang$maxFixedArity = 3;
G__27558.cljs$lang$applyTo = (function (arglist__27560){
var x = cljs.core.first(arglist__27560);
arglist__27560 = cljs.core.next(arglist__27560);
var y = cljs.core.first(arglist__27560);
arglist__27560 = cljs.core.next(arglist__27560);
var z = cljs.core.first(arglist__27560);
var args = cljs.core.rest(arglist__27560);
return G__27558__delegate(x,y,z,args);
});
G__27558.cljs$core$IFn$_invoke$arity$variadic = G__27558__delegate;
return G__27558;
})()
;
G__27557 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27557__0.call(this);
case 1:
return G__27557__1.call(this,x);
case 2:
return G__27557__2.call(this,x,y);
case 3:
return G__27557__3.call(this,x,y,z);
default:
var G__27561 = null;
if (arguments.length > 3) {
var G__27562__i = 0, G__27562__a = new Array(arguments.length -  3);
while (G__27562__i < G__27562__a.length) {G__27562__a[G__27562__i] = arguments[G__27562__i + 3]; ++G__27562__i;}
G__27561 = new cljs.core.IndexedSeq(G__27562__a,0);
}
return G__27557__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27557.cljs$lang$maxFixedArity = 3;
G__27557.cljs$lang$applyTo = G__27557__4.cljs$lang$applyTo;
G__27557.cljs$core$IFn$_invoke$arity$0 = G__27557__0;
G__27557.cljs$core$IFn$_invoke$arity$1 = G__27557__1;
G__27557.cljs$core$IFn$_invoke$arity$2 = G__27557__2;
G__27557.cljs$core$IFn$_invoke$arity$3 = G__27557__3;
G__27557.cljs$core$IFn$_invoke$arity$variadic = G__27557__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27557;
})()
;})(fs__$1))
};
var G__27556 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__27563__i = 0, G__27563__a = new Array(arguments.length -  3);
while (G__27563__i < G__27563__a.length) {G__27563__a[G__27563__i] = arguments[G__27563__i + 3]; ++G__27563__i;}
  fs = new cljs.core.IndexedSeq(G__27563__a,0);
} 
return G__27556__delegate.call(this,f,g,h,fs);};
G__27556.cljs$lang$maxFixedArity = 3;
G__27556.cljs$lang$applyTo = (function (arglist__27564){
var f = cljs.core.first(arglist__27564);
arglist__27564 = cljs.core.next(arglist__27564);
var g = cljs.core.first(arglist__27564);
arglist__27564 = cljs.core.next(arglist__27564);
var h = cljs.core.first(arglist__27564);
var fs = cljs.core.rest(arglist__27564);
return G__27556__delegate(f,g,h,fs);
});
G__27556.cljs$core$IFn$_invoke$arity$variadic = G__27556__delegate;
return G__27556;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__27565 = null;
if (arguments.length > 3) {
var G__27566__i = 0, G__27566__a = new Array(arguments.length -  3);
while (G__27566__i < G__27566__a.length) {G__27566__a[G__27566__i] = arguments[G__27566__i + 3]; ++G__27566__i;}
G__27565 = new cljs.core.IndexedSeq(G__27566__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__27565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__27567 = cljs.core.next(coll);
coll = G__27567;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__27568 = (n - (1));
var G__27569 = cljs.core.next(coll);
n = G__27568;
coll = G__27569;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__27573 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27573,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27573,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27573,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_27581 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3815__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__27582_27588 = cljs.core.first(coll);
var G__27583_27589 = writer;
var G__27584_27590 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27582_27588,G__27583_27589,G__27584_27590) : print_one.call(null,G__27582_27588,G__27583_27589,G__27584_27590));
} else {
}

var coll_27591__$1 = cljs.core.next(coll);
var n_27592 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_27591__$1) && (((n_27592 == null)) || (!((n_27592 === (0)))))){
cljs.core._write(writer,sep);

var G__27585_27593 = cljs.core.first(coll_27591__$1);
var G__27586_27594 = writer;
var G__27587_27595 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27585_27593,G__27586_27594,G__27587_27595) : print_one.call(null,G__27585_27593,G__27586_27594,G__27587_27595));

var G__27596 = cljs.core.next(coll_27591__$1);
var G__27597 = (n_27592 - (1));
coll_27591__$1 = G__27596;
n_27592 = G__27597;
continue;
} else {
if((cljs.core.seq(coll_27591__$1)) && ((n_27592 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3815__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_27581;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__27602 = cljs.core.seq(ss);
var chunk__27603 = null;
var count__27604 = (0);
var i__27605 = (0);
while(true){
if((i__27605 < count__27604)){
var s = chunk__27603.cljs$core$IIndexed$_nth$arity$2(null,i__27605);
cljs.core._write(writer,s);

var G__27606 = seq__27602;
var G__27607 = chunk__27603;
var G__27608 = count__27604;
var G__27609 = (i__27605 + (1));
seq__27602 = G__27606;
chunk__27603 = G__27607;
count__27604 = G__27608;
i__27605 = G__27609;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27602);
if(temp__4126__auto__){
var seq__27602__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27602__$1)){
var c__4602__auto__ = cljs.core.chunk_first(seq__27602__$1);
var G__27610 = cljs.core.chunk_rest(seq__27602__$1);
var G__27611 = c__4602__auto__;
var G__27612 = cljs.core.count(c__4602__auto__);
var G__27613 = (0);
seq__27602 = G__27610;
chunk__27603 = G__27611;
count__27604 = G__27612;
i__27605 = G__27613;
continue;
} else {
var s = cljs.core.first(seq__27602__$1);
cljs.core._write(writer,s);

var G__27614 = cljs.core.next(seq__27602__$1);
var G__27615 = null;
var G__27616 = (0);
var G__27617 = (0);
seq__27602 = G__27614;
chunk__27603 = G__27615;
count__27604 = G__27616;
i__27605 = G__27617;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__27618__i = 0, G__27618__a = new Array(arguments.length -  1);
while (G__27618__i < G__27618__a.length) {G__27618__a[G__27618__i] = arguments[G__27618__i + 1]; ++G__27618__i;}
  ss = new cljs.core.IndexedSeq(G__27618__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__27619){
var writer = cljs.core.first(arglist__27619);
var ss = cljs.core.rest(arglist__27619);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj27621 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj27621;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__27624 = "[\\\\\"\b\f\n\r\t]";
var G__27625 = "g";
return RegExp(G__27624,G__27625);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3803__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3803__auto__)){
var and__3803__auto____$1 = (function (){var G__27639 = obj;
if(G__27639){
var bit__4496__auto__ = (G__27639.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4496__auto__) || (G__27639.cljs$core$IMeta$)){
return true;
} else {
if((!G__27639.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27639);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27639);
}
})();
if(and__3803__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__27640_27650 = cljs.core.meta(obj);
var G__27641_27651 = writer;
var G__27642_27652 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__27640_27650,G__27641_27651,G__27642_27652) : cljs.core.pr_writer.call(null,G__27640_27650,G__27641_27651,G__27642_27652));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__27643 = obj;
if(G__27643){
var bit__4489__auto__ = (G__27643.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4489__auto__) || (G__27643.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__27644 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__27645 = cljs.core.pr_writer;
var G__27646 = writer;
var G__27647 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__27644,G__27645,G__27646,G__27647) : cljs.core.print_map.call(null,G__27644,G__27645,G__27646,G__27647));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__27648 = obj;
return goog.isString(G__27648);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__27653 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__27653;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__27649 = obj;
if(G__27649){
var bit__4496__auto__ = (G__27649.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4496__auto__) || (G__27649.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__27649.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27649);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27649);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__27657 = obj;
var G__27658 = writer;
var G__27659 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$13,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__27657,G__27658,G__27659) : alt_impl.call(null,G__27657,G__27658,G__27659));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__27664 = cljs.core.seq(cljs.core.next(objs));
var chunk__27665 = null;
var count__27666 = (0);
var i__27667 = (0);
while(true){
if((i__27667 < count__27666)){
var obj = chunk__27665.cljs$core$IIndexed$_nth$arity$2(null,i__27667);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27668 = seq__27664;
var G__27669 = chunk__27665;
var G__27670 = count__27666;
var G__27671 = (i__27667 + (1));
seq__27664 = G__27668;
chunk__27665 = G__27669;
count__27666 = G__27670;
i__27667 = G__27671;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27664);
if(temp__4126__auto__){
var seq__27664__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27664__$1)){
var c__4602__auto__ = cljs.core.chunk_first(seq__27664__$1);
var G__27672 = cljs.core.chunk_rest(seq__27664__$1);
var G__27673 = c__4602__auto__;
var G__27674 = cljs.core.count(c__4602__auto__);
var G__27675 = (0);
seq__27664 = G__27672;
chunk__27665 = G__27673;
count__27666 = G__27674;
i__27667 = G__27675;
continue;
} else {
var obj = cljs.core.first(seq__27664__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27676 = cljs.core.next(seq__27664__$1);
var G__27677 = null;
var G__27678 = (0);
var G__27679 = (0);
seq__27664 = G__27676;
chunk__27665 = G__27677;
count__27666 = G__27678;
i__27667 = G__27679;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27680__i = 0, G__27680__a = new Array(arguments.length -  0);
while (G__27680__i < G__27680__a.length) {G__27680__a[G__27680__i] = arguments[G__27680__i + 0]; ++G__27680__i;}
  objs = new cljs.core.IndexedSeq(G__27680__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__27681){
var objs = cljs.core.seq(arglist__27681);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27682__i = 0, G__27682__a = new Array(arguments.length -  0);
while (G__27682__i < G__27682__a.length) {G__27682__a[G__27682__i] = arguments[G__27682__i + 0]; ++G__27682__i;}
  objs = new cljs.core.IndexedSeq(G__27682__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__27683){
var objs = cljs.core.seq(arglist__27683);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27684__i = 0, G__27684__a = new Array(arguments.length -  0);
while (G__27684__i < G__27684__a.length) {G__27684__a[G__27684__i] = arguments[G__27684__i + 0]; ++G__27684__i;}
  objs = new cljs.core.IndexedSeq(G__27684__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__27685){
var objs = cljs.core.seq(arglist__27685);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27686__i = 0, G__27686__a = new Array(arguments.length -  0);
while (G__27686__i < G__27686__a.length) {G__27686__a[G__27686__i] = arguments[G__27686__i + 0]; ++G__27686__i;}
  objs = new cljs.core.IndexedSeq(G__27686__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__27687){
var objs = cljs.core.seq(arglist__27687);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27688__i = 0, G__27688__a = new Array(arguments.length -  0);
while (G__27688__i < G__27688__a.length) {G__27688__a[G__27688__i] = arguments[G__27688__i + 0]; ++G__27688__i;}
  objs = new cljs.core.IndexedSeq(G__27688__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__27689){
var objs = cljs.core.seq(arglist__27689);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27690__i = 0, G__27690__a = new Array(arguments.length -  0);
while (G__27690__i < G__27690__a.length) {G__27690__a[G__27690__i] = arguments[G__27690__i + 0]; ++G__27690__i;}
  objs = new cljs.core.IndexedSeq(G__27690__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__27691){
var objs = cljs.core.seq(arglist__27691);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27692__i = 0, G__27692__a = new Array(arguments.length -  0);
while (G__27692__i < G__27692__a.length) {G__27692__a[G__27692__i] = arguments[G__27692__i + 0]; ++G__27692__i;}
  objs = new cljs.core.IndexedSeq(G__27692__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__27693){
var objs = cljs.core.seq(arglist__27693);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27694__i = 0, G__27694__a = new Array(arguments.length -  0);
while (G__27694__i < G__27694__a.length) {G__27694__a[G__27694__i] = arguments[G__27694__i + 0]; ++G__27694__i;}
  objs = new cljs.core.IndexedSeq(G__27694__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__27695){
var objs = cljs.core.seq(arglist__27695);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__27702_27708 = cljs.core.key(e);
var G__27703_27709 = w;
var G__27704_27710 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27702_27708,G__27703_27709,G__27704_27710) : print_one.call(null,G__27702_27708,G__27703_27709,G__27704_27710));

cljs.core._write(w," ");

var G__27705 = cljs.core.val(e);
var G__27706 = w;
var G__27707 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27705,G__27706,G__27707) : print_one.call(null,G__27705,G__27706,G__27707));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__27711__i = 0, G__27711__a = new Array(arguments.length -  2);
while (G__27711__i < G__27711__a.length) {G__27711__a[G__27711__i] = arguments[G__27711__i + 2]; ++G__27711__i;}
  args = new cljs.core.IndexedSeq(G__27711__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__27712){
var iref = cljs.core.first(arglist__27712);
arglist__27712 = cljs.core.next(arglist__27712);
var f = cljs.core.first(arglist__27712);
var args = cljs.core.rest(arglist__27712);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__27715 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27715) : cljs.core.atom.call(null,G__27715));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__27717 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27717) : cljs.core.deref.call(null,G__27717));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__27718_SHARP_,p2__27719_SHARP_){
var ret = (function (){var G__27722 = p1__27718_SHARP_;
var G__27723 = p2__27719_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27722,G__27723) : rf.call(null,G__27722,G__27723));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__27726 = null;
var G__27726__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27726__1 = (function (result){
var G__27725 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27725) : rf.call(null,G__27725));
});
var G__27726__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__27726 = function(result,input){
switch(arguments.length){
case 0:
return G__27726__0.call(this);
case 1:
return G__27726__1.call(this,result);
case 2:
return G__27726__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27726.cljs$core$IFn$_invoke$arity$0 = G__27726__0;
G__27726.cljs$core$IFn$_invoke$arity$1 = G__27726__1;
G__27726.cljs$core$IFn$_invoke$arity$2 = G__27726__2;
return G__27726;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__27735 = null;
var G__27735__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27735__1 = (function (result){
var G__27731 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27731) : rf.call(null,G__27731));
});
var G__27735__2 = (function (result,input){
var prior = (function (){var G__27732 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27732) : cljs.core.deref.call(null,G__27732));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__27733 = result;
var G__27734 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27733,G__27734) : rf.call(null,G__27733,G__27734));
}
});
G__27735 = function(result,input){
switch(arguments.length){
case 0:
return G__27735__0.call(this);
case 1:
return G__27735__1.call(this,result);
case 2:
return G__27735__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27735.cljs$core$IFn$_invoke$arity$0 = G__27735__0;
G__27735.cljs$core$IFn$_invoke$arity$1 = G__27735__1;
G__27735.cljs$core$IFn$_invoke$arity$2 = G__27735__2;
return G__27735;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4793__auto__ = this;
return cljs.core.es6_iterator(this__4793__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27737_SHARP_,p2__27736_SHARP_){
var G__27739 = p2__27736_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__27739) : proc.call(null,G__27739));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj27741 = {};
return obj27741;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3803__auto__ = x;
if(and__3803__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3803__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4459__auto__ = (((x == null))?null:x);
return (function (){var or__3815__auto__ = (cljs.core._clj__GT_js[(function (){var G__27745 = x__4459__auto__;
return goog.typeOf(G__27745);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3803__auto__ = x;
if(and__3803__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3803__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4459__auto__ = (((x == null))?null:x);
return (function (){var or__3815__auto__ = (cljs.core._key__GT_js[(function (){var G__27749 = x__4459__auto__;
return goog.typeOf(G__27749);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__27752 = k;
if(G__27752){
var bit__4496__auto__ = null;
if(cljs.core.truth_((function (){var or__3815__auto__ = bit__4496__auto__;
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return G__27752.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27752.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27752);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27752);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__27753 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__27753) : cljs.core.clj__GT_js.call(null,G__27753));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__27769 = x;
if(G__27769){
var bit__4496__auto__ = null;
if(cljs.core.truth_((function (){var or__3815__auto__ = bit__4496__auto__;
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return G__27769.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27769.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27769);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27769);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj27771 = {};
return obj27771;
})();
var seq__27772_27782 = cljs.core.seq(x);
var chunk__27773_27783 = null;
var count__27774_27784 = (0);
var i__27775_27785 = (0);
while(true){
if((i__27775_27785 < count__27774_27784)){
var vec__27776_27786 = chunk__27773_27783.cljs$core$IIndexed$_nth$arity$2(null,i__27775_27785);
var k_27787 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27776_27786,(0),null);
var v_27788 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27776_27786,(1),null);
(m[cljs.core.key__GT_js(k_27787)] = clj__GT_js(v_27788));

var G__27789 = seq__27772_27782;
var G__27790 = chunk__27773_27783;
var G__27791 = count__27774_27784;
var G__27792 = (i__27775_27785 + (1));
seq__27772_27782 = G__27789;
chunk__27773_27783 = G__27790;
count__27774_27784 = G__27791;
i__27775_27785 = G__27792;
continue;
} else {
var temp__4126__auto___27793 = cljs.core.seq(seq__27772_27782);
if(temp__4126__auto___27793){
var seq__27772_27794__$1 = temp__4126__auto___27793;
if(cljs.core.chunked_seq_QMARK_(seq__27772_27794__$1)){
var c__4602__auto___27795 = cljs.core.chunk_first(seq__27772_27794__$1);
var G__27796 = cljs.core.chunk_rest(seq__27772_27794__$1);
var G__27797 = c__4602__auto___27795;
var G__27798 = cljs.core.count(c__4602__auto___27795);
var G__27799 = (0);
seq__27772_27782 = G__27796;
chunk__27773_27783 = G__27797;
count__27774_27784 = G__27798;
i__27775_27785 = G__27799;
continue;
} else {
var vec__27777_27800 = cljs.core.first(seq__27772_27794__$1);
var k_27801 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27777_27800,(0),null);
var v_27802 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27777_27800,(1),null);
(m[cljs.core.key__GT_js(k_27801)] = clj__GT_js(v_27802));

var G__27803 = cljs.core.next(seq__27772_27794__$1);
var G__27804 = null;
var G__27805 = (0);
var G__27806 = (0);
seq__27772_27782 = G__27803;
chunk__27773_27783 = G__27804;
count__27774_27784 = G__27805;
i__27775_27785 = G__27806;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__27778_27807 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__27779_27808 = null;
var count__27780_27809 = (0);
var i__27781_27810 = (0);
while(true){
if((i__27781_27810 < count__27780_27809)){
var x_27811__$1 = chunk__27779_27808.cljs$core$IIndexed$_nth$arity$2(null,i__27781_27810);
arr.push(x_27811__$1);

var G__27812 = seq__27778_27807;
var G__27813 = chunk__27779_27808;
var G__27814 = count__27780_27809;
var G__27815 = (i__27781_27810 + (1));
seq__27778_27807 = G__27812;
chunk__27779_27808 = G__27813;
count__27780_27809 = G__27814;
i__27781_27810 = G__27815;
continue;
} else {
var temp__4126__auto___27816 = cljs.core.seq(seq__27778_27807);
if(temp__4126__auto___27816){
var seq__27778_27817__$1 = temp__4126__auto___27816;
if(cljs.core.chunked_seq_QMARK_(seq__27778_27817__$1)){
var c__4602__auto___27818 = cljs.core.chunk_first(seq__27778_27817__$1);
var G__27819 = cljs.core.chunk_rest(seq__27778_27817__$1);
var G__27820 = c__4602__auto___27818;
var G__27821 = cljs.core.count(c__4602__auto___27818);
var G__27822 = (0);
seq__27778_27807 = G__27819;
chunk__27779_27808 = G__27820;
count__27780_27809 = G__27821;
i__27781_27810 = G__27822;
continue;
} else {
var x_27823__$1 = cljs.core.first(seq__27778_27817__$1);
arr.push(x_27823__$1);

var G__27824 = cljs.core.next(seq__27778_27817__$1);
var G__27825 = null;
var G__27826 = (0);
var G__27827 = (0);
seq__27778_27807 = G__27824;
chunk__27779_27808 = G__27825;
count__27780_27809 = G__27826;
i__27781_27810 = G__27827;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj27829 = {};
return obj27829;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3803__auto__ = x;
if(and__3803__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3803__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4459__auto__ = (((x == null))?null:x);
return (function (){var or__3815__auto__ = (cljs.core._js__GT_clj[(function (){var G__27833 = x__4459__auto__;
return goog.typeOf(G__27833);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$14,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__27890__delegate = function (x,opts){
var map__27863 = opts;
var map__27863__$1 = ((cljs.core.seq_QMARK_(map__27863))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__27863):map__27863);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__27863__$1,cljs.core.constant$keyword$14);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__27863,map__27863__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__27879 = x__$1;
if(G__27879){
var bit__4496__auto__ = null;
if(cljs.core.truth_((function (){var or__3815__auto__ = bit__4496__auto__;
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return G__27879.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__27879.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__27879);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__27879);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4571__auto__ = ((function (map__27863,map__27863__$1,keywordize_keys,keyfn){
return (function iter__27880(s__27881){
return (new cljs.core.LazySeq(null,((function (map__27863,map__27863__$1,keywordize_keys,keyfn){
return (function (){
var s__27881__$1 = s__27881;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__27881__$1);
if(temp__4126__auto__){
var s__27881__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__27881__$2)){
var c__4569__auto__ = cljs.core.chunk_first(s__27881__$2);
var size__4570__auto__ = cljs.core.count(c__4569__auto__);
var b__27883 = cljs.core.chunk_buffer(size__4570__auto__);
if((function (){var i__27882 = (0);
while(true){
if((i__27882 < size__4570__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4569__auto__,i__27882);
cljs.core.chunk_append(b__27883,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__27888 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27888) : keyfn.call(null,G__27888));
})(),thisfn((x__$1[k]))], null));

var G__27891 = (i__27882 + (1));
i__27882 = G__27891;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__27883),iter__27880(cljs.core.chunk_rest(s__27881__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__27883),null);
}
} else {
var k = cljs.core.first(s__27881__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__27889 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__27889) : keyfn.call(null,G__27889));
})(),thisfn((x__$1[k]))], null),iter__27880(cljs.core.rest(s__27881__$2)));
}
} else {
return null;
}
break;
}
});})(map__27863,map__27863__$1,keywordize_keys,keyfn))
,null,null));
});})(map__27863,map__27863__$1,keywordize_keys,keyfn))
;
return iter__4571__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__27863,map__27863__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__27890 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__27892__i = 0, G__27892__a = new Array(arguments.length -  1);
while (G__27892__i < G__27892__a.length) {G__27892__a[G__27892__i] = arguments[G__27892__i + 1]; ++G__27892__i;}
  opts = new cljs.core.IndexedSeq(G__27892__a,0);
} 
return G__27890__delegate.call(this,x,opts);};
G__27890.cljs$lang$maxFixedArity = 1;
G__27890.cljs$lang$applyTo = (function (arglist__27893){
var x = cljs.core.first(arglist__27893);
var opts = cljs.core.rest(arglist__27893);
return G__27890__delegate(x,opts);
});
G__27890.cljs$core$IFn$_invoke$arity$variadic = G__27890__delegate;
return G__27890;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__27894 = null;
if (arguments.length > 1) {
var G__27895__i = 0, G__27895__a = new Array(arguments.length -  1);
while (G__27895__i < G__27895__a.length) {G__27895__a[G__27895__i] = arguments[G__27895__i + 1]; ++G__27895__i;}
G__27894 = new cljs.core.IndexedSeq(G__27895__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__27894);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__27898 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27898) : cljs.core.atom.call(null,G__27898));
})();
return ((function (mem){
return (function() { 
var G__27900__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__27899 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27899) : cljs.core.deref.call(null,G__27899));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__27900 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__27901__i = 0, G__27901__a = new Array(arguments.length -  0);
while (G__27901__i < G__27901__a.length) {G__27901__a[G__27901__i] = arguments[G__27901__i + 0]; ++G__27901__i;}
  args = new cljs.core.IndexedSeq(G__27901__a,0);
} 
return G__27900__delegate.call(this,args);};
G__27900.cljs$lang$maxFixedArity = 0;
G__27900.cljs$lang$applyTo = (function (arglist__27902){
var args = cljs.core.seq(arglist__27902);
return G__27900__delegate(args);
});
G__27900.cljs$core$IFn$_invoke$arity$variadic = G__27900__delegate;
return G__27900;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__27904 = ret;
f = G__27904;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__27905__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__27905 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__27906__i = 0, G__27906__a = new Array(arguments.length -  1);
while (G__27906__i < G__27906__a.length) {G__27906__a[G__27906__i] = arguments[G__27906__i + 1]; ++G__27906__i;}
  args = new cljs.core.IndexedSeq(G__27906__a,0);
} 
return G__27905__delegate.call(this,f,args);};
G__27905.cljs$lang$maxFixedArity = 1;
G__27905.cljs$lang$applyTo = (function (arglist__27907){
var f = cljs.core.first(arglist__27907);
var args = cljs.core.rest(arglist__27907);
return G__27905__delegate(f,args);
});
G__27905.cljs$core$IFn$_invoke$arity$variadic = G__27905__delegate;
return G__27905;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__27908 = null;
if (arguments.length > 1) {
var G__27909__i = 0, G__27909__a = new Array(arguments.length -  1);
while (G__27909__i < G__27909__a.length) {G__27909__a[G__27909__i] = arguments[G__27909__i + 1]; ++G__27909__i;}
G__27908 = new cljs.core.IndexedSeq(G__27909__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__27908);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__27912 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__27912) : Math.floor.call(null,G__27912));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__27914 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27914) : f.call(null,G__27914));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$16,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__27916 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27916) : cljs.core.atom.call(null,G__27916));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__27917__i = 0, G__27917__a = new Array(arguments.length -  1);
while (G__27917__i < G__27917__a.length) {G__27917__a[G__27917__i] = arguments[G__27917__i + 1]; ++G__27917__i;}
  args = new cljs.core.IndexedSeq(G__27917__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__27918){
var f = cljs.core.first(arglist__27918);
var args = cljs.core.rest(arglist__27918);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__27983 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27983) : cljs.core.deref.call(null,G__27983));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3815__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
var and__3803__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3803__auto__){
var and__3803__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3803__auto____$1){
var and__3803__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3803__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__28008 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__28006 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__28006) : child.call(null,G__28006));
})(),(function (){var G__28007 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__28007) : parent.call(null,G__28007));
})());
var G__28009 = (i + (1));
ret = G__28008;
i = G__28009;
continue;
}
break;
}
} else {
return and__3803__auto____$2;
}
} else {
return and__3803__auto____$1;
}
} else {
return and__3803__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__28013 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28013) : cljs.core.deref.call(null,G__28013));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__28017 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28017) : cljs.core.deref.call(null,G__28017));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__28021 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28021) : cljs.core.deref.call(null,G__28021));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__28030 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__28030) : targets.call(null,G__28030));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__28031 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__28031) : sources.call(null,G__28031));
})()));
});})(tp,td,ta))
;
var or__3815__auto__ = ((cljs.core.contains_QMARK_((function (){var G__28035 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__28035) : tp.call(null,G__28035));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__28036 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28036) : ta.call(null,G__28036));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__28037 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28037) : ta.call(null,G__28037));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$17,tf(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$16,tf(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__28044 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28044) : parentMap.call(null,G__28044));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__28045 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28045) : parentMap.call(null,G__28045));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__28038_SHARP_){
return cljs.core.cons(cljs.core.first(p1__28038_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__28038_SHARP_),cljs.core.second(p1__28038_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__28046 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28046) : parentMap.call(null,G__28046));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__28039_SHARP_,p2__28040_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__28039_SHARP_,p2__28040_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__28049 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28049) : cljs.core.deref.call(null,G__28049));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__28050 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28050) : cljs.core.deref.call(null,G__28050));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__28066 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28066) : cljs.core.deref.call(null,G__28066));
})().call(null,x);
var or__3815__auto__ = (cljs.core.truth_((function (){var and__3803__auto__ = xprefs;
if(cljs.core.truth_(and__3803__auto__)){
var G__28068 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__28068) : xprefs.call(null,G__28068));
} else {
return and__3803__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__28069 = cljs.core.rest(ps);
ps = G__28069;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3815__auto____$1)){
return or__3815__auto____$1;
} else {
var or__3815__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__28070 = cljs.core.rest(ps);
ps = G__28070;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3815__auto____$2)){
return or__3815__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3815__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3815__auto__)){
return or__3815__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__28084){
var vec__28085 = p__28084;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28085,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28085,(1),null);
var e = vec__28085;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28086 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28086) : cljs.core.deref.call(null,G__28086));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3815__auto__ = (be == null);
if(or__3815__auto__){
return or__3815__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__28087 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28087) : cljs.core.deref.call(null,G__28087));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28088 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28088) : cljs.core.deref.call(null,G__28088));
})(),(function (){var G__28089 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28089) : cljs.core.deref.call(null,G__28089));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj28091 = {};
return obj28091;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3803__auto__ = mf;
if(and__3803__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3803__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4459__auto__ = (((mf == null))?null:mf);
return (function (){var or__3815__auto__ = (cljs.core._reset[(function (){var G__28095 = x__4459__auto__;
return goog.typeOf(G__28095);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._reset["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3803__auto__ = mf;
if(and__3803__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3803__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4459__auto__ = (((mf == null))?null:mf);
return (function (){var or__3815__auto__ = (cljs.core._add_method[(function (){var G__28099 = x__4459__auto__;
return goog.typeOf(G__28099);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._add_method["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3803__auto__ = mf;
if(and__3803__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3803__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4459__auto__ = (((mf == null))?null:mf);
return (function (){var or__3815__auto__ = (cljs.core._remove_method[(function (){var G__28103 = x__4459__auto__;
return goog.typeOf(G__28103);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3803__auto__ = mf;
if(and__3803__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3803__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4459__auto__ = (((mf == null))?null:mf);
return (function (){var or__3815__auto__ = (cljs.core._prefer_method[(function (){var G__28107 = x__4459__auto__;
return goog.typeOf(G__28107);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3803__auto__ = mf;
if(and__3803__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3803__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4459__auto__ = (((mf == null))?null:mf);
return (function (){var or__3815__auto__ = (cljs.core._get_method[(function (){var G__28111 = x__4459__auto__;
return goog.typeOf(G__28111);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._get_method["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3803__auto__ = mf;
if(and__3803__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3803__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4459__auto__ = (((mf == null))?null:mf);
return (function (){var or__3815__auto__ = (cljs.core._methods[(function (){var G__28115 = x__4459__auto__;
return goog.typeOf(G__28115);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._methods["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3803__auto__ = mf;
if(and__3803__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3803__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4459__auto__ = (((mf == null))?null:mf);
return (function (){var or__3815__auto__ = (cljs.core._prefers[(function (){var G__28119 = x__4459__auto__;
return goog.typeOf(G__28119);
})()]);
if(or__3815__auto__){
return or__3815__auto__;
} else {
var or__3815__auto____$1 = (cljs.core._prefers["_"]);
if(or__3815__auto____$1){
return or__3815__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28121 = this$__$1;
return goog.getUid(G__28121);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28122 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28122) : cljs.core.deref.call(null,G__28122));
})(),(function (){var G__28123 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28123) : cljs.core.deref.call(null,G__28123));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__28124 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28124) : cljs.core.deref.call(null,G__28124));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__28125 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28125) : cljs.core.deref.call(null,G__28125));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28126 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28126) : cljs.core.deref.call(null,G__28126));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28127 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28127) : cljs.core.deref.call(null,G__28127));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__28968 = null;
var G__28968__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__28968__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28128 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28128) : self__.dispatch_fn.call(null,G__28128));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28129 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28129) : target_fn.call(null,G__28129));
});
var G__28968__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28130 = a;
var G__28131 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28130,G__28131) : self__.dispatch_fn.call(null,G__28130,G__28131));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28132 = a;
var G__28133 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28132,G__28133) : target_fn.call(null,G__28132,G__28133));
});
var G__28968__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28134 = a;
var G__28135 = b;
var G__28136 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28134,G__28135,G__28136) : self__.dispatch_fn.call(null,G__28134,G__28135,G__28136));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28137 = a;
var G__28138 = b;
var G__28139 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28137,G__28138,G__28139) : target_fn.call(null,G__28137,G__28138,G__28139));
});
var G__28968__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28140 = a;
var G__28141 = b;
var G__28142 = c;
var G__28143 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28140,G__28141,G__28142,G__28143) : self__.dispatch_fn.call(null,G__28140,G__28141,G__28142,G__28143));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28144 = a;
var G__28145 = b;
var G__28146 = c;
var G__28147 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28144,G__28145,G__28146,G__28147) : target_fn.call(null,G__28144,G__28145,G__28146,G__28147));
});
var G__28968__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28148 = a;
var G__28149 = b;
var G__28150 = c;
var G__28151 = d;
var G__28152 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28148,G__28149,G__28150,G__28151,G__28152) : self__.dispatch_fn.call(null,G__28148,G__28149,G__28150,G__28151,G__28152));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28153 = a;
var G__28154 = b;
var G__28155 = c;
var G__28156 = d;
var G__28157 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28153,G__28154,G__28155,G__28156,G__28157) : target_fn.call(null,G__28153,G__28154,G__28155,G__28156,G__28157));
});
var G__28968__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28158 = a;
var G__28159 = b;
var G__28160 = c;
var G__28161 = d;
var G__28162 = e;
var G__28163 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28158,G__28159,G__28160,G__28161,G__28162,G__28163) : self__.dispatch_fn.call(null,G__28158,G__28159,G__28160,G__28161,G__28162,G__28163));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28164 = a;
var G__28165 = b;
var G__28166 = c;
var G__28167 = d;
var G__28168 = e;
var G__28169 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28164,G__28165,G__28166,G__28167,G__28168,G__28169) : target_fn.call(null,G__28164,G__28165,G__28166,G__28167,G__28168,G__28169));
});
var G__28968__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28170 = a;
var G__28171 = b;
var G__28172 = c;
var G__28173 = d;
var G__28174 = e;
var G__28175 = f;
var G__28176 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28170,G__28171,G__28172,G__28173,G__28174,G__28175,G__28176) : self__.dispatch_fn.call(null,G__28170,G__28171,G__28172,G__28173,G__28174,G__28175,G__28176));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28177 = a;
var G__28178 = b;
var G__28179 = c;
var G__28180 = d;
var G__28181 = e;
var G__28182 = f;
var G__28183 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183) : target_fn.call(null,G__28177,G__28178,G__28179,G__28180,G__28181,G__28182,G__28183));
});
var G__28968__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28184 = a;
var G__28185 = b;
var G__28186 = c;
var G__28187 = d;
var G__28188 = e;
var G__28189 = f;
var G__28190 = g;
var G__28191 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28184,G__28185,G__28186,G__28187,G__28188,G__28189,G__28190,G__28191) : self__.dispatch_fn.call(null,G__28184,G__28185,G__28186,G__28187,G__28188,G__28189,G__28190,G__28191));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28192 = a;
var G__28193 = b;
var G__28194 = c;
var G__28195 = d;
var G__28196 = e;
var G__28197 = f;
var G__28198 = g;
var G__28199 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199) : target_fn.call(null,G__28192,G__28193,G__28194,G__28195,G__28196,G__28197,G__28198,G__28199));
});
var G__28968__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28200 = a;
var G__28201 = b;
var G__28202 = c;
var G__28203 = d;
var G__28204 = e;
var G__28205 = f;
var G__28206 = g;
var G__28207 = h;
var G__28208 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28200,G__28201,G__28202,G__28203,G__28204,G__28205,G__28206,G__28207,G__28208) : self__.dispatch_fn.call(null,G__28200,G__28201,G__28202,G__28203,G__28204,G__28205,G__28206,G__28207,G__28208));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28209 = a;
var G__28210 = b;
var G__28211 = c;
var G__28212 = d;
var G__28213 = e;
var G__28214 = f;
var G__28215 = g;
var G__28216 = h;
var G__28217 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28209,G__28210,G__28211,G__28212,G__28213,G__28214,G__28215,G__28216,G__28217) : target_fn.call(null,G__28209,G__28210,G__28211,G__28212,G__28213,G__28214,G__28215,G__28216,G__28217));
});
var G__28968__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28218 = a;
var G__28219 = b;
var G__28220 = c;
var G__28221 = d;
var G__28222 = e;
var G__28223 = f;
var G__28224 = g;
var G__28225 = h;
var G__28226 = i;
var G__28227 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28218,G__28219,G__28220,G__28221,G__28222,G__28223,G__28224,G__28225,G__28226,G__28227) : self__.dispatch_fn.call(null,G__28218,G__28219,G__28220,G__28221,G__28222,G__28223,G__28224,G__28225,G__28226,G__28227));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28228 = a;
var G__28229 = b;
var G__28230 = c;
var G__28231 = d;
var G__28232 = e;
var G__28233 = f;
var G__28234 = g;
var G__28235 = h;
var G__28236 = i;
var G__28237 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28228,G__28229,G__28230,G__28231,G__28232,G__28233,G__28234,G__28235,G__28236,G__28237) : target_fn.call(null,G__28228,G__28229,G__28230,G__28231,G__28232,G__28233,G__28234,G__28235,G__28236,G__28237));
});
var G__28968__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28238 = a;
var G__28239 = b;
var G__28240 = c;
var G__28241 = d;
var G__28242 = e;
var G__28243 = f;
var G__28244 = g;
var G__28245 = h;
var G__28246 = i;
var G__28247 = j;
var G__28248 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28238,G__28239,G__28240,G__28241,G__28242,G__28243,G__28244,G__28245,G__28246,G__28247,G__28248) : self__.dispatch_fn.call(null,G__28238,G__28239,G__28240,G__28241,G__28242,G__28243,G__28244,G__28245,G__28246,G__28247,G__28248));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28249 = a;
var G__28250 = b;
var G__28251 = c;
var G__28252 = d;
var G__28253 = e;
var G__28254 = f;
var G__28255 = g;
var G__28256 = h;
var G__28257 = i;
var G__28258 = j;
var G__28259 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28249,G__28250,G__28251,G__28252,G__28253,G__28254,G__28255,G__28256,G__28257,G__28258,G__28259) : target_fn.call(null,G__28249,G__28250,G__28251,G__28252,G__28253,G__28254,G__28255,G__28256,G__28257,G__28258,G__28259));
});
var G__28968__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28260 = a;
var G__28261 = b;
var G__28262 = c;
var G__28263 = d;
var G__28264 = e;
var G__28265 = f;
var G__28266 = g;
var G__28267 = h;
var G__28268 = i;
var G__28269 = j;
var G__28270 = k;
var G__28271 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28260,G__28261,G__28262,G__28263,G__28264,G__28265,G__28266,G__28267,G__28268,G__28269,G__28270,G__28271) : self__.dispatch_fn.call(null,G__28260,G__28261,G__28262,G__28263,G__28264,G__28265,G__28266,G__28267,G__28268,G__28269,G__28270,G__28271));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28272 = a;
var G__28273 = b;
var G__28274 = c;
var G__28275 = d;
var G__28276 = e;
var G__28277 = f;
var G__28278 = g;
var G__28279 = h;
var G__28280 = i;
var G__28281 = j;
var G__28282 = k;
var G__28283 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28272,G__28273,G__28274,G__28275,G__28276,G__28277,G__28278,G__28279,G__28280,G__28281,G__28282,G__28283) : target_fn.call(null,G__28272,G__28273,G__28274,G__28275,G__28276,G__28277,G__28278,G__28279,G__28280,G__28281,G__28282,G__28283));
});
var G__28968__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28284 = a;
var G__28285 = b;
var G__28286 = c;
var G__28287 = d;
var G__28288 = e;
var G__28289 = f;
var G__28290 = g;
var G__28291 = h;
var G__28292 = i;
var G__28293 = j;
var G__28294 = k;
var G__28295 = l;
var G__28296 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28284,G__28285,G__28286,G__28287,G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295,G__28296) : self__.dispatch_fn.call(null,G__28284,G__28285,G__28286,G__28287,G__28288,G__28289,G__28290,G__28291,G__28292,G__28293,G__28294,G__28295,G__28296));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28297 = a;
var G__28298 = b;
var G__28299 = c;
var G__28300 = d;
var G__28301 = e;
var G__28302 = f;
var G__28303 = g;
var G__28304 = h;
var G__28305 = i;
var G__28306 = j;
var G__28307 = k;
var G__28308 = l;
var G__28309 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28297,G__28298,G__28299,G__28300,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309) : target_fn.call(null,G__28297,G__28298,G__28299,G__28300,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306,G__28307,G__28308,G__28309));
});
var G__28968__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28310 = a;
var G__28311 = b;
var G__28312 = c;
var G__28313 = d;
var G__28314 = e;
var G__28315 = f;
var G__28316 = g;
var G__28317 = h;
var G__28318 = i;
var G__28319 = j;
var G__28320 = k;
var G__28321 = l;
var G__28322 = m;
var G__28323 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28310,G__28311,G__28312,G__28313,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323) : self__.dispatch_fn.call(null,G__28310,G__28311,G__28312,G__28313,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319,G__28320,G__28321,G__28322,G__28323));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28324 = a;
var G__28325 = b;
var G__28326 = c;
var G__28327 = d;
var G__28328 = e;
var G__28329 = f;
var G__28330 = g;
var G__28331 = h;
var G__28332 = i;
var G__28333 = j;
var G__28334 = k;
var G__28335 = l;
var G__28336 = m;
var G__28337 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28324,G__28325,G__28326,G__28327,G__28328,G__28329,G__28330,G__28331,G__28332,G__28333,G__28334,G__28335,G__28336,G__28337) : target_fn.call(null,G__28324,G__28325,G__28326,G__28327,G__28328,G__28329,G__28330,G__28331,G__28332,G__28333,G__28334,G__28335,G__28336,G__28337));
});
var G__28968__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28338 = a;
var G__28339 = b;
var G__28340 = c;
var G__28341 = d;
var G__28342 = e;
var G__28343 = f;
var G__28344 = g;
var G__28345 = h;
var G__28346 = i;
var G__28347 = j;
var G__28348 = k;
var G__28349 = l;
var G__28350 = m;
var G__28351 = n;
var G__28352 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28338,G__28339,G__28340,G__28341,G__28342,G__28343,G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350,G__28351,G__28352) : self__.dispatch_fn.call(null,G__28338,G__28339,G__28340,G__28341,G__28342,G__28343,G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350,G__28351,G__28352));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28353 = a;
var G__28354 = b;
var G__28355 = c;
var G__28356 = d;
var G__28357 = e;
var G__28358 = f;
var G__28359 = g;
var G__28360 = h;
var G__28361 = i;
var G__28362 = j;
var G__28363 = k;
var G__28364 = l;
var G__28365 = m;
var G__28366 = n;
var G__28367 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360,G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367) : target_fn.call(null,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360,G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367));
});
var G__28968__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28368 = a;
var G__28369 = b;
var G__28370 = c;
var G__28371 = d;
var G__28372 = e;
var G__28373 = f;
var G__28374 = g;
var G__28375 = h;
var G__28376 = i;
var G__28377 = j;
var G__28378 = k;
var G__28379 = l;
var G__28380 = m;
var G__28381 = n;
var G__28382 = o;
var G__28383 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28368,G__28369,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378,G__28379,G__28380,G__28381,G__28382,G__28383) : self__.dispatch_fn.call(null,G__28368,G__28369,G__28370,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378,G__28379,G__28380,G__28381,G__28382,G__28383));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28384 = a;
var G__28385 = b;
var G__28386 = c;
var G__28387 = d;
var G__28388 = e;
var G__28389 = f;
var G__28390 = g;
var G__28391 = h;
var G__28392 = i;
var G__28393 = j;
var G__28394 = k;
var G__28395 = l;
var G__28396 = m;
var G__28397 = n;
var G__28398 = o;
var G__28399 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391,G__28392,G__28393,G__28394,G__28395,G__28396,G__28397,G__28398,G__28399) : target_fn.call(null,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391,G__28392,G__28393,G__28394,G__28395,G__28396,G__28397,G__28398,G__28399));
});
var G__28968__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28400 = a;
var G__28401 = b;
var G__28402 = c;
var G__28403 = d;
var G__28404 = e;
var G__28405 = f;
var G__28406 = g;
var G__28407 = h;
var G__28408 = i;
var G__28409 = j;
var G__28410 = k;
var G__28411 = l;
var G__28412 = m;
var G__28413 = n;
var G__28414 = o;
var G__28415 = p;
var G__28416 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412,G__28413,G__28414,G__28415,G__28416) : self__.dispatch_fn.call(null,G__28400,G__28401,G__28402,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412,G__28413,G__28414,G__28415,G__28416));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28417 = a;
var G__28418 = b;
var G__28419 = c;
var G__28420 = d;
var G__28421 = e;
var G__28422 = f;
var G__28423 = g;
var G__28424 = h;
var G__28425 = i;
var G__28426 = j;
var G__28427 = k;
var G__28428 = l;
var G__28429 = m;
var G__28430 = n;
var G__28431 = o;
var G__28432 = p;
var G__28433 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28417,G__28418,G__28419,G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429,G__28430,G__28431,G__28432,G__28433) : target_fn.call(null,G__28417,G__28418,G__28419,G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426,G__28427,G__28428,G__28429,G__28430,G__28431,G__28432,G__28433));
});
var G__28968__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28434 = a;
var G__28435 = b;
var G__28436 = c;
var G__28437 = d;
var G__28438 = e;
var G__28439 = f;
var G__28440 = g;
var G__28441 = h;
var G__28442 = i;
var G__28443 = j;
var G__28444 = k;
var G__28445 = l;
var G__28446 = m;
var G__28447 = n;
var G__28448 = o;
var G__28449 = p;
var G__28450 = q;
var G__28451 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28434,G__28435,G__28436,G__28437,G__28438,G__28439,G__28440,G__28441,G__28442,G__28443,G__28444,G__28445,G__28446,G__28447,G__28448,G__28449,G__28450,G__28451) : self__.dispatch_fn.call(null,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439,G__28440,G__28441,G__28442,G__28443,G__28444,G__28445,G__28446,G__28447,G__28448,G__28449,G__28450,G__28451));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28452 = a;
var G__28453 = b;
var G__28454 = c;
var G__28455 = d;
var G__28456 = e;
var G__28457 = f;
var G__28458 = g;
var G__28459 = h;
var G__28460 = i;
var G__28461 = j;
var G__28462 = k;
var G__28463 = l;
var G__28464 = m;
var G__28465 = n;
var G__28466 = o;
var G__28467 = p;
var G__28468 = q;
var G__28469 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28452,G__28453,G__28454,G__28455,G__28456,G__28457,G__28458,G__28459,G__28460,G__28461,G__28462,G__28463,G__28464,G__28465,G__28466,G__28467,G__28468,G__28469) : target_fn.call(null,G__28452,G__28453,G__28454,G__28455,G__28456,G__28457,G__28458,G__28459,G__28460,G__28461,G__28462,G__28463,G__28464,G__28465,G__28466,G__28467,G__28468,G__28469));
});
var G__28968__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28470 = a;
var G__28471 = b;
var G__28472 = c;
var G__28473 = d;
var G__28474 = e;
var G__28475 = f;
var G__28476 = g;
var G__28477 = h;
var G__28478 = i;
var G__28479 = j;
var G__28480 = k;
var G__28481 = l;
var G__28482 = m;
var G__28483 = n;
var G__28484 = o;
var G__28485 = p;
var G__28486 = q;
var G__28487 = r;
var G__28488 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28470,G__28471,G__28472,G__28473,G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480,G__28481,G__28482,G__28483,G__28484,G__28485,G__28486,G__28487,G__28488) : self__.dispatch_fn.call(null,G__28470,G__28471,G__28472,G__28473,G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480,G__28481,G__28482,G__28483,G__28484,G__28485,G__28486,G__28487,G__28488));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28489 = a;
var G__28490 = b;
var G__28491 = c;
var G__28492 = d;
var G__28493 = e;
var G__28494 = f;
var G__28495 = g;
var G__28496 = h;
var G__28497 = i;
var G__28498 = j;
var G__28499 = k;
var G__28500 = l;
var G__28501 = m;
var G__28502 = n;
var G__28503 = o;
var G__28504 = p;
var G__28505 = q;
var G__28506 = r;
var G__28507 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28489,G__28490,G__28491,G__28492,G__28493,G__28494,G__28495,G__28496,G__28497,G__28498,G__28499,G__28500,G__28501,G__28502,G__28503,G__28504,G__28505,G__28506,G__28507) : target_fn.call(null,G__28489,G__28490,G__28491,G__28492,G__28493,G__28494,G__28495,G__28496,G__28497,G__28498,G__28499,G__28500,G__28501,G__28502,G__28503,G__28504,G__28505,G__28506,G__28507));
});
var G__28968__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28508 = a;
var G__28509 = b;
var G__28510 = c;
var G__28511 = d;
var G__28512 = e;
var G__28513 = f;
var G__28514 = g;
var G__28515 = h;
var G__28516 = i;
var G__28517 = j;
var G__28518 = k;
var G__28519 = l;
var G__28520 = m;
var G__28521 = n;
var G__28522 = o;
var G__28523 = p;
var G__28524 = q;
var G__28525 = r;
var G__28526 = s;
var G__28527 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28508,G__28509,G__28510,G__28511,G__28512,G__28513,G__28514,G__28515,G__28516,G__28517,G__28518,G__28519,G__28520,G__28521,G__28522,G__28523,G__28524,G__28525,G__28526,G__28527) : self__.dispatch_fn.call(null,G__28508,G__28509,G__28510,G__28511,G__28512,G__28513,G__28514,G__28515,G__28516,G__28517,G__28518,G__28519,G__28520,G__28521,G__28522,G__28523,G__28524,G__28525,G__28526,G__28527));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28528 = a;
var G__28529 = b;
var G__28530 = c;
var G__28531 = d;
var G__28532 = e;
var G__28533 = f;
var G__28534 = g;
var G__28535 = h;
var G__28536 = i;
var G__28537 = j;
var G__28538 = k;
var G__28539 = l;
var G__28540 = m;
var G__28541 = n;
var G__28542 = o;
var G__28543 = p;
var G__28544 = q;
var G__28545 = r;
var G__28546 = s;
var G__28547 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28528,G__28529,G__28530,G__28531,G__28532,G__28533,G__28534,G__28535,G__28536,G__28537,G__28538,G__28539,G__28540,G__28541,G__28542,G__28543,G__28544,G__28545,G__28546,G__28547) : target_fn.call(null,G__28528,G__28529,G__28530,G__28531,G__28532,G__28533,G__28534,G__28535,G__28536,G__28537,G__28538,G__28539,G__28540,G__28541,G__28542,G__28543,G__28544,G__28545,G__28546,G__28547));
});
var G__28968__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__28968 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__28968__1.call(this,self__);
case 2:
return G__28968__2.call(this,self__,a);
case 3:
return G__28968__3.call(this,self__,a,b);
case 4:
return G__28968__4.call(this,self__,a,b,c);
case 5:
return G__28968__5.call(this,self__,a,b,c,d);
case 6:
return G__28968__6.call(this,self__,a,b,c,d,e);
case 7:
return G__28968__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__28968__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__28968__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__28968__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__28968__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__28968__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__28968__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__28968__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__28968__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__28968__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__28968__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__28968__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__28968__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__28968__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__28968__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__28968__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__28968.cljs$core$IFn$_invoke$arity$1 = G__28968__1;
G__28968.cljs$core$IFn$_invoke$arity$2 = G__28968__2;
G__28968.cljs$core$IFn$_invoke$arity$3 = G__28968__3;
G__28968.cljs$core$IFn$_invoke$arity$4 = G__28968__4;
G__28968.cljs$core$IFn$_invoke$arity$5 = G__28968__5;
G__28968.cljs$core$IFn$_invoke$arity$6 = G__28968__6;
G__28968.cljs$core$IFn$_invoke$arity$7 = G__28968__7;
G__28968.cljs$core$IFn$_invoke$arity$8 = G__28968__8;
G__28968.cljs$core$IFn$_invoke$arity$9 = G__28968__9;
G__28968.cljs$core$IFn$_invoke$arity$10 = G__28968__10;
G__28968.cljs$core$IFn$_invoke$arity$11 = G__28968__11;
G__28968.cljs$core$IFn$_invoke$arity$12 = G__28968__12;
G__28968.cljs$core$IFn$_invoke$arity$13 = G__28968__13;
G__28968.cljs$core$IFn$_invoke$arity$14 = G__28968__14;
G__28968.cljs$core$IFn$_invoke$arity$15 = G__28968__15;
G__28968.cljs$core$IFn$_invoke$arity$16 = G__28968__16;
G__28968.cljs$core$IFn$_invoke$arity$17 = G__28968__17;
G__28968.cljs$core$IFn$_invoke$arity$18 = G__28968__18;
G__28968.cljs$core$IFn$_invoke$arity$19 = G__28968__19;
G__28968.cljs$core$IFn$_invoke$arity$20 = G__28968__20;
G__28968.cljs$core$IFn$_invoke$arity$21 = G__28968__21;
G__28968.cljs$core$IFn$_invoke$arity$22 = G__28968__22;
return G__28968;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args28120){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28120)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28548 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28548) : self__.dispatch_fn.call(null,G__28548));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28549 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28549) : target_fn.call(null,G__28549));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28550 = a;
var G__28551 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28550,G__28551) : self__.dispatch_fn.call(null,G__28550,G__28551));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28552 = a;
var G__28553 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28552,G__28553) : target_fn.call(null,G__28552,G__28553));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28554 = a;
var G__28555 = b;
var G__28556 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28554,G__28555,G__28556) : self__.dispatch_fn.call(null,G__28554,G__28555,G__28556));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28557 = a;
var G__28558 = b;
var G__28559 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28557,G__28558,G__28559) : target_fn.call(null,G__28557,G__28558,G__28559));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28560 = a;
var G__28561 = b;
var G__28562 = c;
var G__28563 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28560,G__28561,G__28562,G__28563) : self__.dispatch_fn.call(null,G__28560,G__28561,G__28562,G__28563));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28564 = a;
var G__28565 = b;
var G__28566 = c;
var G__28567 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28564,G__28565,G__28566,G__28567) : target_fn.call(null,G__28564,G__28565,G__28566,G__28567));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28568 = a;
var G__28569 = b;
var G__28570 = c;
var G__28571 = d;
var G__28572 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28568,G__28569,G__28570,G__28571,G__28572) : self__.dispatch_fn.call(null,G__28568,G__28569,G__28570,G__28571,G__28572));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28573 = a;
var G__28574 = b;
var G__28575 = c;
var G__28576 = d;
var G__28577 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28573,G__28574,G__28575,G__28576,G__28577) : target_fn.call(null,G__28573,G__28574,G__28575,G__28576,G__28577));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28578 = a;
var G__28579 = b;
var G__28580 = c;
var G__28581 = d;
var G__28582 = e;
var G__28583 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28578,G__28579,G__28580,G__28581,G__28582,G__28583) : self__.dispatch_fn.call(null,G__28578,G__28579,G__28580,G__28581,G__28582,G__28583));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28584 = a;
var G__28585 = b;
var G__28586 = c;
var G__28587 = d;
var G__28588 = e;
var G__28589 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28584,G__28585,G__28586,G__28587,G__28588,G__28589) : target_fn.call(null,G__28584,G__28585,G__28586,G__28587,G__28588,G__28589));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28590 = a;
var G__28591 = b;
var G__28592 = c;
var G__28593 = d;
var G__28594 = e;
var G__28595 = f;
var G__28596 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28590,G__28591,G__28592,G__28593,G__28594,G__28595,G__28596) : self__.dispatch_fn.call(null,G__28590,G__28591,G__28592,G__28593,G__28594,G__28595,G__28596));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28597 = a;
var G__28598 = b;
var G__28599 = c;
var G__28600 = d;
var G__28601 = e;
var G__28602 = f;
var G__28603 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603) : target_fn.call(null,G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28604 = a;
var G__28605 = b;
var G__28606 = c;
var G__28607 = d;
var G__28608 = e;
var G__28609 = f;
var G__28610 = g;
var G__28611 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28604,G__28605,G__28606,G__28607,G__28608,G__28609,G__28610,G__28611) : self__.dispatch_fn.call(null,G__28604,G__28605,G__28606,G__28607,G__28608,G__28609,G__28610,G__28611));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28612 = a;
var G__28613 = b;
var G__28614 = c;
var G__28615 = d;
var G__28616 = e;
var G__28617 = f;
var G__28618 = g;
var G__28619 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619) : target_fn.call(null,G__28612,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28620 = a;
var G__28621 = b;
var G__28622 = c;
var G__28623 = d;
var G__28624 = e;
var G__28625 = f;
var G__28626 = g;
var G__28627 = h;
var G__28628 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628) : self__.dispatch_fn.call(null,G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28629 = a;
var G__28630 = b;
var G__28631 = c;
var G__28632 = d;
var G__28633 = e;
var G__28634 = f;
var G__28635 = g;
var G__28636 = h;
var G__28637 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28629,G__28630,G__28631,G__28632,G__28633,G__28634,G__28635,G__28636,G__28637) : target_fn.call(null,G__28629,G__28630,G__28631,G__28632,G__28633,G__28634,G__28635,G__28636,G__28637));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28638 = a;
var G__28639 = b;
var G__28640 = c;
var G__28641 = d;
var G__28642 = e;
var G__28643 = f;
var G__28644 = g;
var G__28645 = h;
var G__28646 = i;
var G__28647 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645,G__28646,G__28647) : self__.dispatch_fn.call(null,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645,G__28646,G__28647));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28648 = a;
var G__28649 = b;
var G__28650 = c;
var G__28651 = d;
var G__28652 = e;
var G__28653 = f;
var G__28654 = g;
var G__28655 = h;
var G__28656 = i;
var G__28657 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28648,G__28649,G__28650,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657) : target_fn.call(null,G__28648,G__28649,G__28650,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28658 = a;
var G__28659 = b;
var G__28660 = c;
var G__28661 = d;
var G__28662 = e;
var G__28663 = f;
var G__28664 = g;
var G__28665 = h;
var G__28666 = i;
var G__28667 = j;
var G__28668 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28658,G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667,G__28668) : self__.dispatch_fn.call(null,G__28658,G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667,G__28668));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28669 = a;
var G__28670 = b;
var G__28671 = c;
var G__28672 = d;
var G__28673 = e;
var G__28674 = f;
var G__28675 = g;
var G__28676 = h;
var G__28677 = i;
var G__28678 = j;
var G__28679 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679) : target_fn.call(null,G__28669,G__28670,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28680 = a;
var G__28681 = b;
var G__28682 = c;
var G__28683 = d;
var G__28684 = e;
var G__28685 = f;
var G__28686 = g;
var G__28687 = h;
var G__28688 = i;
var G__28689 = j;
var G__28690 = k;
var G__28691 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28680,G__28681,G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690,G__28691) : self__.dispatch_fn.call(null,G__28680,G__28681,G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690,G__28691));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28692 = a;
var G__28693 = b;
var G__28694 = c;
var G__28695 = d;
var G__28696 = e;
var G__28697 = f;
var G__28698 = g;
var G__28699 = h;
var G__28700 = i;
var G__28701 = j;
var G__28702 = k;
var G__28703 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698,G__28699,G__28700,G__28701,G__28702,G__28703) : target_fn.call(null,G__28692,G__28693,G__28694,G__28695,G__28696,G__28697,G__28698,G__28699,G__28700,G__28701,G__28702,G__28703));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28704 = a;
var G__28705 = b;
var G__28706 = c;
var G__28707 = d;
var G__28708 = e;
var G__28709 = f;
var G__28710 = g;
var G__28711 = h;
var G__28712 = i;
var G__28713 = j;
var G__28714 = k;
var G__28715 = l;
var G__28716 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713,G__28714,G__28715,G__28716) : self__.dispatch_fn.call(null,G__28704,G__28705,G__28706,G__28707,G__28708,G__28709,G__28710,G__28711,G__28712,G__28713,G__28714,G__28715,G__28716));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28717 = a;
var G__28718 = b;
var G__28719 = c;
var G__28720 = d;
var G__28721 = e;
var G__28722 = f;
var G__28723 = g;
var G__28724 = h;
var G__28725 = i;
var G__28726 = j;
var G__28727 = k;
var G__28728 = l;
var G__28729 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727,G__28728,G__28729) : target_fn.call(null,G__28717,G__28718,G__28719,G__28720,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726,G__28727,G__28728,G__28729));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28730 = a;
var G__28731 = b;
var G__28732 = c;
var G__28733 = d;
var G__28734 = e;
var G__28735 = f;
var G__28736 = g;
var G__28737 = h;
var G__28738 = i;
var G__28739 = j;
var G__28740 = k;
var G__28741 = l;
var G__28742 = m;
var G__28743 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28730,G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742,G__28743) : self__.dispatch_fn.call(null,G__28730,G__28731,G__28732,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739,G__28740,G__28741,G__28742,G__28743));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28744 = a;
var G__28745 = b;
var G__28746 = c;
var G__28747 = d;
var G__28748 = e;
var G__28749 = f;
var G__28750 = g;
var G__28751 = h;
var G__28752 = i;
var G__28753 = j;
var G__28754 = k;
var G__28755 = l;
var G__28756 = m;
var G__28757 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757) : target_fn.call(null,G__28744,G__28745,G__28746,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754,G__28755,G__28756,G__28757));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28758 = a;
var G__28759 = b;
var G__28760 = c;
var G__28761 = d;
var G__28762 = e;
var G__28763 = f;
var G__28764 = g;
var G__28765 = h;
var G__28766 = i;
var G__28767 = j;
var G__28768 = k;
var G__28769 = l;
var G__28770 = m;
var G__28771 = n;
var G__28772 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28758,G__28759,G__28760,G__28761,G__28762,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771,G__28772) : self__.dispatch_fn.call(null,G__28758,G__28759,G__28760,G__28761,G__28762,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771,G__28772));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28773 = a;
var G__28774 = b;
var G__28775 = c;
var G__28776 = d;
var G__28777 = e;
var G__28778 = f;
var G__28779 = g;
var G__28780 = h;
var G__28781 = i;
var G__28782 = j;
var G__28783 = k;
var G__28784 = l;
var G__28785 = m;
var G__28786 = n;
var G__28787 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28773,G__28774,G__28775,G__28776,G__28777,G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787) : target_fn.call(null,G__28773,G__28774,G__28775,G__28776,G__28777,G__28778,G__28779,G__28780,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28788 = a;
var G__28789 = b;
var G__28790 = c;
var G__28791 = d;
var G__28792 = e;
var G__28793 = f;
var G__28794 = g;
var G__28795 = h;
var G__28796 = i;
var G__28797 = j;
var G__28798 = k;
var G__28799 = l;
var G__28800 = m;
var G__28801 = n;
var G__28802 = o;
var G__28803 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28788,G__28789,G__28790,G__28791,G__28792,G__28793,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803) : self__.dispatch_fn.call(null,G__28788,G__28789,G__28790,G__28791,G__28792,G__28793,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800,G__28801,G__28802,G__28803));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28804 = a;
var G__28805 = b;
var G__28806 = c;
var G__28807 = d;
var G__28808 = e;
var G__28809 = f;
var G__28810 = g;
var G__28811 = h;
var G__28812 = i;
var G__28813 = j;
var G__28814 = k;
var G__28815 = l;
var G__28816 = m;
var G__28817 = n;
var G__28818 = o;
var G__28819 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811,G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819) : target_fn.call(null,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811,G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28820 = a;
var G__28821 = b;
var G__28822 = c;
var G__28823 = d;
var G__28824 = e;
var G__28825 = f;
var G__28826 = g;
var G__28827 = h;
var G__28828 = i;
var G__28829 = j;
var G__28830 = k;
var G__28831 = l;
var G__28832 = m;
var G__28833 = n;
var G__28834 = o;
var G__28835 = p;
var G__28836 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831,G__28832,G__28833,G__28834,G__28835,G__28836) : self__.dispatch_fn.call(null,G__28820,G__28821,G__28822,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831,G__28832,G__28833,G__28834,G__28835,G__28836));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28837 = a;
var G__28838 = b;
var G__28839 = c;
var G__28840 = d;
var G__28841 = e;
var G__28842 = f;
var G__28843 = g;
var G__28844 = h;
var G__28845 = i;
var G__28846 = j;
var G__28847 = k;
var G__28848 = l;
var G__28849 = m;
var G__28850 = n;
var G__28851 = o;
var G__28852 = p;
var G__28853 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851,G__28852,G__28853) : target_fn.call(null,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846,G__28847,G__28848,G__28849,G__28850,G__28851,G__28852,G__28853));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28854 = a;
var G__28855 = b;
var G__28856 = c;
var G__28857 = d;
var G__28858 = e;
var G__28859 = f;
var G__28860 = g;
var G__28861 = h;
var G__28862 = i;
var G__28863 = j;
var G__28864 = k;
var G__28865 = l;
var G__28866 = m;
var G__28867 = n;
var G__28868 = o;
var G__28869 = p;
var G__28870 = q;
var G__28871 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869,G__28870,G__28871) : self__.dispatch_fn.call(null,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869,G__28870,G__28871));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28872 = a;
var G__28873 = b;
var G__28874 = c;
var G__28875 = d;
var G__28876 = e;
var G__28877 = f;
var G__28878 = g;
var G__28879 = h;
var G__28880 = i;
var G__28881 = j;
var G__28882 = k;
var G__28883 = l;
var G__28884 = m;
var G__28885 = n;
var G__28886 = o;
var G__28887 = p;
var G__28888 = q;
var G__28889 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28872,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889) : target_fn.call(null,G__28872,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886,G__28887,G__28888,G__28889));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28890 = a;
var G__28891 = b;
var G__28892 = c;
var G__28893 = d;
var G__28894 = e;
var G__28895 = f;
var G__28896 = g;
var G__28897 = h;
var G__28898 = i;
var G__28899 = j;
var G__28900 = k;
var G__28901 = l;
var G__28902 = m;
var G__28903 = n;
var G__28904 = o;
var G__28905 = p;
var G__28906 = q;
var G__28907 = r;
var G__28908 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28890,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908) : self__.dispatch_fn.call(null,G__28890,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28909 = a;
var G__28910 = b;
var G__28911 = c;
var G__28912 = d;
var G__28913 = e;
var G__28914 = f;
var G__28915 = g;
var G__28916 = h;
var G__28917 = i;
var G__28918 = j;
var G__28919 = k;
var G__28920 = l;
var G__28921 = m;
var G__28922 = n;
var G__28923 = o;
var G__28924 = p;
var G__28925 = q;
var G__28926 = r;
var G__28927 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28909,G__28910,G__28911,G__28912,G__28913,G__28914,G__28915,G__28916,G__28917,G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927) : target_fn.call(null,G__28909,G__28910,G__28911,G__28912,G__28913,G__28914,G__28915,G__28916,G__28917,G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28928 = a;
var G__28929 = b;
var G__28930 = c;
var G__28931 = d;
var G__28932 = e;
var G__28933 = f;
var G__28934 = g;
var G__28935 = h;
var G__28936 = i;
var G__28937 = j;
var G__28938 = k;
var G__28939 = l;
var G__28940 = m;
var G__28941 = n;
var G__28942 = o;
var G__28943 = p;
var G__28944 = q;
var G__28945 = r;
var G__28946 = s;
var G__28947 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28928,G__28929,G__28930,G__28931,G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942,G__28943,G__28944,G__28945,G__28946,G__28947) : self__.dispatch_fn.call(null,G__28928,G__28929,G__28930,G__28931,G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942,G__28943,G__28944,G__28945,G__28946,G__28947));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28948 = a;
var G__28949 = b;
var G__28950 = c;
var G__28951 = d;
var G__28952 = e;
var G__28953 = f;
var G__28954 = g;
var G__28955 = h;
var G__28956 = i;
var G__28957 = j;
var G__28958 = k;
var G__28959 = l;
var G__28960 = m;
var G__28961 = n;
var G__28962 = o;
var G__28963 = p;
var G__28964 = q;
var G__28965 = r;
var G__28966 = s;
var G__28967 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959,G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966,G__28967) : target_fn.call(null,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959,G__28960,G__28961,G__28962,G__28963,G__28964,G__28965,G__28966,G__28967));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28969 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__28969);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4402__auto__,writer__4403__auto__,opt__4404__auto__){
return cljs.core._write(writer__4403__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__28974 = msg;
return Error(G__28974);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__28979 = x;
var G__28980 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__28979,G__28980) : pred.call(null,G__28979,G__28980));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__28981 = y;
var G__28982 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__28981,G__28982) : pred.call(null,G__28981,G__28982));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$18;
} else {
return cljs.core.constant$keyword$19;
}
});
